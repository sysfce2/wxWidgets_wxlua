// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxpropgrid_propgrid.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxbind/include/wxpropgrid_bind.h"

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__

#if LUA_VERSION_NUM < 503
#define lua_pushinteger lua_pushnumber
#endif


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGValidationInfo
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGValidationInfo'
int wxluatype_wxPGValidationInfo = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGValidationInfo_GetFailureBehavior[] = { &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxPGValidationInfo_GetFailureBehavior(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGValidationInfo_GetFailureBehavior[1] = {{ wxLua_wxPGValidationInfo_GetFailureBehavior, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGValidationInfo_GetFailureBehavior }};
//     unsigned char GetFailureBehavior();
static int LUACALL wxLua_wxPGValidationInfo_GetFailureBehavior(lua_State *L)
{
    // get this
    wxPGValidationInfo * self = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGValidationInfo);
    // call GetFailureBehavior
    unsigned char returns = (self->GetFailureBehavior());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGValidationInfo_GetFailureMessage[] = { &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxPGValidationInfo_GetFailureMessage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGValidationInfo_GetFailureMessage[1] = {{ wxLua_wxPGValidationInfo_GetFailureMessage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGValidationInfo_GetFailureMessage }};
//     const wxString& GetFailureMessage() const;
static int LUACALL wxLua_wxPGValidationInfo_GetFailureMessage(lua_State *L)
{
    // get this
    wxPGValidationInfo * self = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGValidationInfo);
    // call GetFailureMessage
    wxString returns = (self->GetFailureMessage());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGValidationInfo_GetValue[] = { &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxPGValidationInfo_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGValidationInfo_GetValue[1] = {{ wxLua_wxPGValidationInfo_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGValidationInfo_GetValue }};
//     wxVariant& GetValue();
static int LUACALL wxLua_wxPGValidationInfo_GetValue(lua_State *L)
{
    // get this
    wxPGValidationInfo * self = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGValidationInfo);
    // call GetValue
    wxVariant* returns = (wxVariant*)&self->GetValue();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGValidationInfo_SetFailureBehavior[] = { &wxluatype_wxPGValidationInfo, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGValidationInfo_SetFailureBehavior(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGValidationInfo_SetFailureBehavior[1] = {{ wxLua_wxPGValidationInfo_SetFailureBehavior, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGValidationInfo_SetFailureBehavior }};
//     void SetFailureBehavior(unsigned char failureBehavior);
static int LUACALL wxLua_wxPGValidationInfo_SetFailureBehavior(lua_State *L)
{
    // unsigned char failureBehavior
    unsigned char failureBehavior = (unsigned char)wxlua_getuintegertype(L, 2);
    // get this
    wxPGValidationInfo * self = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGValidationInfo);
    // call SetFailureBehavior
    self->SetFailureBehavior(failureBehavior);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGValidationInfo_SetFailureMessage[] = { &wxluatype_wxPGValidationInfo, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGValidationInfo_SetFailureMessage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGValidationInfo_SetFailureMessage[1] = {{ wxLua_wxPGValidationInfo_SetFailureMessage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGValidationInfo_SetFailureMessage }};
//     void SetFailureMessage(const wxString& message);
static int LUACALL wxLua_wxPGValidationInfo_SetFailureMessage(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGValidationInfo * self = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGValidationInfo);
    // call SetFailureMessage
    self->SetFailureMessage(message);

    return 0;
}




void wxLua_wxPGValidationInfo_delete_function(void** p)
{
    wxPGValidationInfo* o = (wxPGValidationInfo*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGValidationInfo_methods[] = {
    { "GetFailureBehavior", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGValidationInfo_GetFailureBehavior, 1, NULL },
    { "GetFailureMessage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGValidationInfo_GetFailureMessage, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGValidationInfo_GetValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetFailureBehavior", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGValidationInfo_SetFailureBehavior, 1, NULL },
    { "SetFailureMessage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGValidationInfo_SetFailureMessage, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGValidationInfo_methodCount = sizeof(wxPGValidationInfo_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGrid
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGrid'
int wxluatype_wxPropertyGrid = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_AddActionTrigger[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_AddActionTrigger(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_AddActionTrigger[1] = {{ wxLua_wxPropertyGrid_AddActionTrigger, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGrid_AddActionTrigger }};
//     void AddActionTrigger( int action, int keycode, int modifiers = 0 );
static int LUACALL wxLua_wxPropertyGrid_AddActionTrigger(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int modifiers = 0
    int modifiers = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int keycode
    int keycode = (int)wxlua_getnumbertype(L, 3);
    // int action
    int action = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call AddActionTrigger
    self->AddActionTrigger(action, keycode, modifiers);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_AddToSelection1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection1[1] = {{ wxLua_wxPropertyGrid_AddToSelection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection1 }};
//     bool AddToSelection( const wxString& id );
static int LUACALL wxLua_wxPropertyGrid_AddToSelection1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call AddToSelection
    bool returns = (self->AddToSelection(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_AddToSelection(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection[1] = {{ wxLua_wxPropertyGrid_AddToSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection }};
//     bool AddToSelection( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGrid_AddToSelection(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call AddToSelection
    bool returns = (self->AddToSelection(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_AutoGetTranslation[] = { &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_AutoGetTranslation(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_AutoGetTranslation[1] = {{ wxLua_wxPropertyGrid_AutoGetTranslation, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_AutoGetTranslation }};
//     static void AutoGetTranslation( bool enable );
static int LUACALL wxLua_wxPropertyGrid_AutoGetTranslation(lua_State *L)
{
    // bool enable
    bool enable = wxlua_getbooleantype(L, 1);
    // call AutoGetTranslation
    wxPropertyGrid::AutoGetTranslation(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_BeginLabelEdit[] = { &wxluatype_wxPropertyGrid, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGrid_BeginLabelEdit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_BeginLabelEdit[1] = {{ wxLua_wxPropertyGrid_BeginLabelEdit, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_BeginLabelEdit }};
//     void BeginLabelEdit( unsigned int colIndex = 0 );
static int LUACALL wxLua_wxPropertyGrid_BeginLabelEdit(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // unsigned int colIndex = 0
    unsigned int colIndex = (argCount >= 2 ? (unsigned int)wxlua_getuintegertype(L, 2) : 0);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call BeginLabelEdit
    self->BeginLabelEdit(colIndex);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_CenterSplitter[] = { &wxluatype_wxPropertyGrid, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_CenterSplitter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_CenterSplitter[1] = {{ wxLua_wxPropertyGrid_CenterSplitter, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_CenterSplitter }};
//     void CenterSplitter( bool enableAutoResizing = false );
static int LUACALL wxLua_wxPropertyGrid_CenterSplitter(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enableAutoResizing = false
    bool enableAutoResizing = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call CenterSplitter
    self->CenterSplitter(enableAutoResizing);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGrid_ChangePropertyValue1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue1[1] = {{ wxLua_wxPropertyGrid_ChangePropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue1 }};
//     bool ChangePropertyValue( const wxString& id, wxVariant newValue );
static int LUACALL wxLua_wxPropertyGrid_ChangePropertyValue1(lua_State *L)
{
    // wxVariant newValue
    wxVariant newValue = wxlua_getwxVarianttype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ChangePropertyValue
    bool returns = (self->ChangePropertyValue(id, newValue));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGrid_ChangePropertyValue(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue[1] = {{ wxLua_wxPropertyGrid_ChangePropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue }};
//     bool ChangePropertyValue( const wxPGProperty*& id, wxVariant newValue );
static int LUACALL wxLua_wxPropertyGrid_ChangePropertyValue(lua_State *L)
{
    // wxVariant newValue
    wxVariant newValue = wxlua_getwxVarianttype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ChangePropertyValue
    bool returns = (self->ChangePropertyValue(id, newValue));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_Clear[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_Clear[1] = {{ wxLua_wxPropertyGrid_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_Clear }};
//     virtual void Clear();
static int LUACALL wxLua_wxPropertyGrid_Clear(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ClearActionTriggers[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_ClearActionTriggers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ClearActionTriggers[1] = {{ wxLua_wxPropertyGrid_ClearActionTriggers, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_ClearActionTriggers }};
//     void ClearActionTriggers( int action );
static int LUACALL wxLua_wxPropertyGrid_ClearActionTriggers(lua_State *L)
{
    // int action
    int action = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ClearActionTriggers
    self->ClearActionTriggers(action);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_CommitChangesFromEditor[] = { &wxluatype_wxPropertyGrid, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGrid_CommitChangesFromEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_CommitChangesFromEditor[1] = {{ wxLua_wxPropertyGrid_CommitChangesFromEditor, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_CommitChangesFromEditor }};
//     virtual bool CommitChangesFromEditor( wxUint32 flags = 0 );
static int LUACALL wxLua_wxPropertyGrid_CommitChangesFromEditor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxUint32 flags = 0
    wxUint32 flags = (argCount >= 2 ? (wxUint32)wxlua_getuintegertype(L, 2) : 0);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call CommitChangesFromEditor
    bool returns = (self->CommitChangesFromEditor(flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_Create[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_Create[1] = {{ wxLua_wxPropertyGrid_Create, WXLUAMETHOD_METHOD, 2, 7, s_wxluatypeArray_wxLua_wxPropertyGrid_Create }};
//                 const wxString& name = wxPropertyGridNameStr );
static int LUACALL wxLua_wxPropertyGrid_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxPropertyGridNameStr
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxPropertyGridNameStr));
    // long style = wxPG_DEFAULT_STYLE
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxPG_DEFAULT_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 3 ? (wxWindowID)wxlua_getnumbertype(L, 3) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call Create
    bool returns = (self->Create(parent, id, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DedicateKey[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_DedicateKey(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DedicateKey[1] = {{ wxLua_wxPropertyGrid_DedicateKey, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_DedicateKey }};
//     void DedicateKey( int keycode );
static int LUACALL wxLua_wxPropertyGrid_DedicateKey(lua_State *L)
{
    // int keycode
    int keycode = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DedicateKey
    self->DedicateKey(keycode);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DoHidePropertyError[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_DoHidePropertyError(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DoHidePropertyError[1] = {{ wxLua_wxPropertyGrid_DoHidePropertyError, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_DoHidePropertyError }};
//     virtual void DoHidePropertyError( wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGrid_DoHidePropertyError(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DoHidePropertyError
    self->DoHidePropertyError(property);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DoOnValidationFailure[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPropertyGrid_DoOnValidationFailure(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DoOnValidationFailure[1] = {{ wxLua_wxPropertyGrid_DoOnValidationFailure, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_DoOnValidationFailure }};
//     virtual bool DoOnValidationFailure( wxPGProperty* property, wxVariant& invalidValue );
static int LUACALL wxLua_wxPropertyGrid_DoOnValidationFailure(lua_State *L)
{
    // wxVariant invalidValue
    wxVariant * invalidValue = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DoOnValidationFailure
    bool returns = (self->DoOnValidationFailure(property, *invalidValue));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DoOnValidationFailureReset[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_DoOnValidationFailureReset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DoOnValidationFailureReset[1] = {{ wxLua_wxPropertyGrid_DoOnValidationFailureReset, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_DoOnValidationFailureReset }};
//     virtual void DoOnValidationFailureReset( wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGrid_DoOnValidationFailureReset(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DoOnValidationFailureReset
    self->DoOnValidationFailureReset(property);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DoRegisterEditorClass[] = { &wxluatype_wxPGEditor, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_DoRegisterEditorClass(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DoRegisterEditorClass[1] = {{ wxLua_wxPropertyGrid_DoRegisterEditorClass, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_DoRegisterEditorClass }};
//     static wxPGEditor* DoRegisterEditorClass( %ungc wxPGEditor* editor, const wxString& name, bool noDefCheck = false );
static int LUACALL wxLua_wxPropertyGrid_DoRegisterEditorClass(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool noDefCheck = false
    bool noDefCheck = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // wxPGEditor editor
    wxPGEditor * editor = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    if (wxluaO_isgcobject(L, editor)) wxluaO_undeletegcobject(L, editor);
    // call DoRegisterEditorClass
    wxPGEditor* returns = (wxPGEditor*)wxPropertyGrid::DoRegisterEditorClass(editor, name, noDefCheck);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DoShowPropertyError[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_DoShowPropertyError(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DoShowPropertyError[1] = {{ wxLua_wxPropertyGrid_DoShowPropertyError, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_DoShowPropertyError }};
//     virtual void DoShowPropertyError( wxPGProperty* property, const wxString& msg );
static int LUACALL wxLua_wxPropertyGrid_DoShowPropertyError(lua_State *L)
{
    // const wxString msg
    const wxString msg = wxlua_getwxStringtype(L, 3);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DoShowPropertyError
    self->DoShowPropertyError(property, msg);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_DrawItemAndValueRelated[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_DrawItemAndValueRelated(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_DrawItemAndValueRelated[1] = {{ wxLua_wxPropertyGrid_DrawItemAndValueRelated, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_DrawItemAndValueRelated }};
//     void DrawItemAndValueRelated( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGrid_DrawItemAndValueRelated(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call DrawItemAndValueRelated
    self->DrawItemAndValueRelated(p);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EditorsValueWasModified[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_EditorsValueWasModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EditorsValueWasModified[1] = {{ wxLua_wxPropertyGrid_EditorsValueWasModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_EditorsValueWasModified }};
//     void EditorsValueWasModified();
static int LUACALL wxLua_wxPropertyGrid_EditorsValueWasModified(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EditorsValueWasModified
    self->EditorsValueWasModified();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EditorsValueWasNotModified[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_EditorsValueWasNotModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EditorsValueWasNotModified[1] = {{ wxLua_wxPropertyGrid_EditorsValueWasNotModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_EditorsValueWasNotModified }};
//     void EditorsValueWasNotModified();
static int LUACALL wxLua_wxPropertyGrid_EditorsValueWasNotModified(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EditorsValueWasNotModified
    self->EditorsValueWasNotModified();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EnableCategories[] = { &wxluatype_wxPropertyGrid, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_EnableCategories(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EnableCategories[1] = {{ wxLua_wxPropertyGrid_EnableCategories, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EnableCategories }};
//     bool EnableCategories( bool enable );
static int LUACALL wxLua_wxPropertyGrid_EnableCategories(lua_State *L)
{
    // bool enable
    bool enable = wxlua_getbooleantype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EnableCategories
    bool returns = (self->EnableCategories(enable));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EndLabelEdit[] = { &wxluatype_wxPropertyGrid, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_EndLabelEdit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EndLabelEdit[1] = {{ wxLua_wxPropertyGrid_EndLabelEdit, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EndLabelEdit }};
//     void EndLabelEdit( bool commit = true );
static int LUACALL wxLua_wxPropertyGrid_EndLabelEdit(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool commit = true
    bool commit = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EndLabelEdit
    self->EndLabelEdit(commit);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_EnsureVisible1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible1[1] = {{ wxLua_wxPropertyGrid_EnsureVisible1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible1 }};
//     bool EnsureVisible( const wxString& id );
static int LUACALL wxLua_wxPropertyGrid_EnsureVisible1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EnsureVisible
    bool returns = (self->EnsureVisible(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_EnsureVisible(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible[1] = {{ wxLua_wxPropertyGrid_EnsureVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible }};
//     bool EnsureVisible( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGrid_EnsureVisible(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call EnsureVisible
    bool returns = (self->EnsureVisible(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_FitColumns[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_FitColumns(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_FitColumns[1] = {{ wxLua_wxPropertyGrid_FitColumns, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_FitColumns }};
//     wxSize FitColumns();
static int LUACALL wxLua_wxPropertyGrid_FitColumns(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call FitColumns
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->FitColumns());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionBackgroundColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCaptionBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionBackgroundColour[1] = {{ wxLua_wxPropertyGrid_GetCaptionBackgroundColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionBackgroundColour }};
//     wxColour GetCaptionBackgroundColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetCaptionBackgroundColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCaptionBackgroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCaptionBackgroundColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionFont[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCaptionFont(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionFont[1] = {{ wxLua_wxPropertyGrid_GetCaptionFont, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionFont }};
//     wxFont& GetCaptionFont();
static int LUACALL wxLua_wxPropertyGrid_GetCaptionFont(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCaptionFont
    wxFont* returns = (wxFont*)&self->GetCaptionFont();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFont);

    return 1;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionForegroundColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCaptionForegroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionForegroundColour[1] = {{ wxLua_wxPropertyGrid_GetCaptionForegroundColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCaptionForegroundColour }};
//     wxColour GetCaptionForegroundColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetCaptionForegroundColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCaptionForegroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCaptionForegroundColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellBackgroundColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCellBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCellBackgroundColour[1] = {{ wxLua_wxPropertyGrid_GetCellBackgroundColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellBackgroundColour }};
//     wxColour GetCellBackgroundColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetCellBackgroundColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCellBackgroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCellBackgroundColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellDisabledTextColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCellDisabledTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCellDisabledTextColour[1] = {{ wxLua_wxPropertyGrid_GetCellDisabledTextColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellDisabledTextColour }};
//     wxColour GetCellDisabledTextColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetCellDisabledTextColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCellDisabledTextColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCellDisabledTextColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellTextColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetCellTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetCellTextColour[1] = {{ wxLua_wxPropertyGrid_GetCellTextColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetCellTextColour }};
//     wxColour GetCellTextColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetCellTextColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetCellTextColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetCellTextColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetColumnCount[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetColumnCount[1] = {{ wxLua_wxPropertyGrid_GetColumnCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetColumnCount }};
//     unsigned int GetColumnCount() const;
static int LUACALL wxLua_wxPropertyGrid_GetColumnCount(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetColumnCount
    unsigned int returns = (self->GetColumnCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetEditorTextCtrl[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetEditorTextCtrl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetEditorTextCtrl[1] = {{ wxLua_wxPropertyGrid_GetEditorTextCtrl, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetEditorTextCtrl }};
//     wxTextCtrl* GetEditorTextCtrl() const;
static int LUACALL wxLua_wxPropertyGrid_GetEditorTextCtrl(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetEditorTextCtrl
    wxTextCtrl* returns = (wxTextCtrl*)self->GetEditorTextCtrl();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxTextCtrl);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetEmptySpaceColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetEmptySpaceColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetEmptySpaceColour[1] = {{ wxLua_wxPropertyGrid_GetEmptySpaceColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetEmptySpaceColour }};
//     wxColour GetEmptySpaceColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetEmptySpaceColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetEmptySpaceColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetEmptySpaceColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetFontHeight[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetFontHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetFontHeight[1] = {{ wxLua_wxPropertyGrid_GetFontHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetFontHeight }};
//     int GetFontHeight() const;
static int LUACALL wxLua_wxPropertyGrid_GetFontHeight(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetFontHeight
    int returns = (self->GetFontHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetGrid[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetGrid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetGrid[1] = {{ wxLua_wxPropertyGrid_GetGrid, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetGrid }};
//     wxPropertyGrid* GetGrid();
static int LUACALL wxLua_wxPropertyGrid_GetGrid(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetGrid
    wxPropertyGrid* returns = (wxPropertyGrid*)self->GetGrid();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetImageRect[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetImageRect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetImageRect[1] = {{ wxLua_wxPropertyGrid_GetImageRect, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_GetImageRect }};
//     wxRect GetImageRect( wxPGProperty* property, int item ) const;
static int LUACALL wxLua_wxPropertyGrid_GetImageRect(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 3);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetImageRect
    // allocate a new object using the copy constructor
    wxRect* returns = new wxRect(self->GetImageRect(property, item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxRect);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxRect);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetImageSize[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetImageSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetImageSize[1] = {{ wxLua_wxPropertyGrid_GetImageSize, WXLUAMETHOD_METHOD, 1, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_GetImageSize }};
//     wxSize GetImageSize( wxPGProperty* property = NULL, int item = -1 ) const;
static int LUACALL wxLua_wxPropertyGrid_GetImageSize(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int item = -1
    int item = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : -1);
    // wxPGProperty property = NULL
    wxPGProperty * property = (argCount >= 2 ? (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty) : NULL);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetImageSize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetImageSize(property, item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetLabelEditor[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetLabelEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetLabelEditor[1] = {{ wxLua_wxPropertyGrid_GetLabelEditor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetLabelEditor }};
//     wxTextCtrl* GetLabelEditor() const;
static int LUACALL wxLua_wxPropertyGrid_GetLabelEditor(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetLabelEditor
    wxTextCtrl* returns = (wxTextCtrl*)self->GetLabelEditor();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxTextCtrl);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetLastItem[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetLastItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetLastItem[1] = {{ wxLua_wxPropertyGrid_GetLastItem, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_GetLastItem }};
//     %ungc wxPGProperty* GetLastItem( int flags = wxPG_ITERATE_DEFAULT );
static int LUACALL wxLua_wxPropertyGrid_GetLastItem(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_ITERATE_DEFAULT
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_DEFAULT);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetLastItem
    wxPGProperty* returns = (wxPGProperty*)self->GetLastItem(flags);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetLineColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetLineColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetLineColour[1] = {{ wxLua_wxPropertyGrid_GetLineColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetLineColour }};
//     wxColour GetLineColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetLineColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetLineColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetLineColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetMarginColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetMarginColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetMarginColour[1] = {{ wxLua_wxPropertyGrid_GetMarginColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetMarginColour }};
//     wxColour GetMarginColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetMarginColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetMarginColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetMarginColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetMarginWidth[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetMarginWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetMarginWidth[1] = {{ wxLua_wxPropertyGrid_GetMarginWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetMarginWidth }};
//     int GetMarginWidth() const;
static int LUACALL wxLua_wxPropertyGrid_GetMarginWidth(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetMarginWidth
    int returns = (self->GetMarginWidth());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetPanel[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetPanel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetPanel[1] = {{ wxLua_wxPropertyGrid_GetPanel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetPanel }};
//     wxWindow* GetPanel();
static int LUACALL wxLua_wxPropertyGrid_GetPanel(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetPanel
    wxWindow* returns = (wxWindow*)self->GetPanel();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetRoot[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetRoot[1] = {{ wxLua_wxPropertyGrid_GetRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetRoot }};
//     %ungc wxPGProperty* GetRoot() const;
static int LUACALL wxLua_wxPropertyGrid_GetRoot(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetRoot
    wxPGProperty* returns = (wxPGProperty*)self->GetRoot();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetRowHeight[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetRowHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetRowHeight[1] = {{ wxLua_wxPropertyGrid_GetRowHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetRowHeight }};
//     int GetRowHeight() const;
static int LUACALL wxLua_wxPropertyGrid_GetRowHeight(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetRowHeight
    int returns = (self->GetRowHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectedProperty[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetSelectedProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetSelectedProperty[1] = {{ wxLua_wxPropertyGrid_GetSelectedProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectedProperty }};
//     %ungc wxPGProperty* GetSelectedProperty() const;
static int LUACALL wxLua_wxPropertyGrid_GetSelectedProperty(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetSelectedProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetSelectedProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelection[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetSelection[1] = {{ wxLua_wxPropertyGrid_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelection }};
//     %ungc wxPGProperty* GetSelection() const;
static int LUACALL wxLua_wxPropertyGrid_GetSelection(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetSelection
    wxPGProperty* returns = (wxPGProperty*)self->GetSelection();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectionBackgroundColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetSelectionBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetSelectionBackgroundColour[1] = {{ wxLua_wxPropertyGrid_GetSelectionBackgroundColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectionBackgroundColour }};
//     wxColour GetSelectionBackgroundColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetSelectionBackgroundColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetSelectionBackgroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetSelectionBackgroundColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectionForegroundColour[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetSelectionForegroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetSelectionForegroundColour[1] = {{ wxLua_wxPropertyGrid_GetSelectionForegroundColour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetSelectionForegroundColour }};
//     wxColour GetSelectionForegroundColour() const;
static int LUACALL wxLua_wxPropertyGrid_GetSelectionForegroundColour(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetSelectionForegroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetSelectionForegroundColour());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetSplitterPosition[] = { &wxluatype_wxPropertyGrid, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetSplitterPosition[1] = {{ wxLua_wxPropertyGrid_GetSplitterPosition, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_GetSplitterPosition }};
//     int GetSplitterPosition( unsigned int splitterIndex = 0 ) const;
static int LUACALL wxLua_wxPropertyGrid_GetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // unsigned int splitterIndex = 0
    unsigned int splitterIndex = (argCount >= 2 ? (unsigned int)wxlua_getuintegertype(L, 2) : 0);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetSplitterPosition
    int returns = (self->GetSplitterPosition(splitterIndex));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetStatusBar[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetStatusBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetStatusBar[1] = {{ wxLua_wxPropertyGrid_GetStatusBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetStatusBar }};
//     virtual wxStatusBar* GetStatusBar();
static int LUACALL wxLua_wxPropertyGrid_GetStatusBar(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetStatusBar
    wxStatusBar* returns = (wxStatusBar*)self->GetStatusBar();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStatusBar);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetUncommittedPropertyValue[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetUncommittedPropertyValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetUncommittedPropertyValue[1] = {{ wxLua_wxPropertyGrid_GetUncommittedPropertyValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetUncommittedPropertyValue }};
//     wxVariant GetUncommittedPropertyValue();
static int LUACALL wxLua_wxPropertyGrid_GetUncommittedPropertyValue(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetUncommittedPropertyValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetUncommittedPropertyValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance[1] = {{ wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance }};
//     const wxPGCell& GetUnspecifiedValueAppearance() const;
static int LUACALL wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetUnspecifiedValueAppearance
    const wxPGCell* returns = (const wxPGCell*)&self->GetUnspecifiedValueAppearance();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetUnspecifiedValueText[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetUnspecifiedValueText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetUnspecifiedValueText[1] = {{ wxLua_wxPropertyGrid_GetUnspecifiedValueText, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_GetUnspecifiedValueText }};
//     wxString GetUnspecifiedValueText( int argFlags = 0 ) const;
static int LUACALL wxLua_wxPropertyGrid_GetUnspecifiedValueText(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetUnspecifiedValueText
    wxString returns = (self->GetUnspecifiedValueText(argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_GetVerticalSpacing[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_GetVerticalSpacing(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_GetVerticalSpacing[1] = {{ wxLua_wxPropertyGrid_GetVerticalSpacing, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_GetVerticalSpacing }};
//     int GetVerticalSpacing() const;
static int LUACALL wxLua_wxPropertyGrid_GetVerticalSpacing(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call GetVerticalSpacing
    int returns = (self->GetVerticalSpacing());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_IsAnyModified[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_IsAnyModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_IsAnyModified[1] = {{ wxLua_wxPropertyGrid_IsAnyModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_IsAnyModified }};
//     bool IsAnyModified() const;
static int LUACALL wxLua_wxPropertyGrid_IsAnyModified(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call IsAnyModified
    bool returns = (self->IsAnyModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_IsEditorFocused[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_IsEditorFocused(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_IsEditorFocused[1] = {{ wxLua_wxPropertyGrid_IsEditorFocused, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_IsEditorFocused }};
//     bool IsEditorFocused() const;
static int LUACALL wxLua_wxPropertyGrid_IsEditorFocused(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call IsEditorFocused
    bool returns = (self->IsEditorFocused());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_IsEditorsValueModified[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_IsEditorsValueModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_IsEditorsValueModified[1] = {{ wxLua_wxPropertyGrid_IsEditorsValueModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_IsEditorsValueModified }};
//     bool IsEditorsValueModified() const;
static int LUACALL wxLua_wxPropertyGrid_IsEditorsValueModified(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call IsEditorsValueModified
    bool returns = (self->IsEditorsValueModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_IsFrozen[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_IsFrozen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_IsFrozen[1] = {{ wxLua_wxPropertyGrid_IsFrozen, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_IsFrozen }};
//     bool IsFrozen() const;
static int LUACALL wxLua_wxPropertyGrid_IsFrozen(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call IsFrozen
    bool returns = (self->IsFrozen());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_MakeColumnEditable[] = { &wxluatype_wxPropertyGrid, &wxluatype_TINTEGER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_MakeColumnEditable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_MakeColumnEditable[1] = {{ wxLua_wxPropertyGrid_MakeColumnEditable, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_MakeColumnEditable }};
//     void MakeColumnEditable( unsigned int column, bool editable = true );
static int LUACALL wxLua_wxPropertyGrid_MakeColumnEditable(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool editable = true
    bool editable = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call MakeColumnEditable
    self->MakeColumnEditable(column, editable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_OnTLPChanging[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPropertyGrid_OnTLPChanging(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_OnTLPChanging[1] = {{ wxLua_wxPropertyGrid_OnTLPChanging, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_OnTLPChanging }};
//     void OnTLPChanging( wxWindow* newTLP );
static int LUACALL wxLua_wxPropertyGrid_OnTLPChanging(lua_State *L)
{
    // wxWindow newTLP
    wxWindow * newTLP = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call OnTLPChanging
    self->OnTLPChanging(newTLP);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_RefreshEditor[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_RefreshEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RefreshEditor[1] = {{ wxLua_wxPropertyGrid_RefreshEditor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_RefreshEditor }};
//     void RefreshEditor();
static int LUACALL wxLua_wxPropertyGrid_RefreshEditor(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call RefreshEditor
    self->RefreshEditor();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_RefreshProperty[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_RefreshProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RefreshProperty[1] = {{ wxLua_wxPropertyGrid_RefreshProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RefreshProperty }};
//     virtual void RefreshProperty( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGrid_RefreshProperty(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call RefreshProperty
    self->RefreshProperty(p);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_RegisterEditorClass[] = { &wxluatype_wxPGEditor, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_RegisterEditorClass(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RegisterEditorClass[1] = {{ wxLua_wxPropertyGrid_RegisterEditorClass, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RegisterEditorClass }};
//     static wxPGEditor* RegisterEditorClass( %ungc wxPGEditor* editor, bool noDefCheck = false );
static int LUACALL wxLua_wxPropertyGrid_RegisterEditorClass(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool noDefCheck = false
    bool noDefCheck = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // wxPGEditor editor
    wxPGEditor * editor = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    if (wxluaO_isgcobject(L, editor)) wxluaO_undeletegcobject(L, editor);
    // call RegisterEditorClass
    wxPGEditor* returns = (wxPGEditor*)wxPropertyGrid::RegisterEditorClass(editor, noDefCheck);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_RemoveFromSelection1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection1[1] = {{ wxLua_wxPropertyGrid_RemoveFromSelection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection1 }};
//     bool RemoveFromSelection( const wxString& id );
static int LUACALL wxLua_wxPropertyGrid_RemoveFromSelection1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call RemoveFromSelection
    bool returns = (self->RemoveFromSelection(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_RemoveFromSelection(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection[1] = {{ wxLua_wxPropertyGrid_RemoveFromSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection }};
//     bool RemoveFromSelection( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGrid_RemoveFromSelection(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call RemoveFromSelection
    bool returns = (self->RemoveFromSelection(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ResetColours[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_ResetColours(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ResetColours[1] = {{ wxLua_wxPropertyGrid_ResetColours, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_ResetColours }};
//     void ResetColours();
static int LUACALL wxLua_wxPropertyGrid_ResetColours(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ResetColours
    self->ResetColours();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ResetColumnSizes[] = { &wxluatype_wxPropertyGrid, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_ResetColumnSizes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ResetColumnSizes[1] = {{ wxLua_wxPropertyGrid_ResetColumnSizes, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_ResetColumnSizes }};
//     void ResetColumnSizes( bool enableAutoResizing = false );
static int LUACALL wxLua_wxPropertyGrid_ResetColumnSizes(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enableAutoResizing = false
    bool enableAutoResizing = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ResetColumnSizes
    self->ResetColumnSizes(enableAutoResizing);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_SelectProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty1[1] = {{ wxLua_wxPropertyGrid_SelectProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty1 }};
//     bool SelectProperty( const wxString& id, bool focus = false );
static int LUACALL wxLua_wxPropertyGrid_SelectProperty1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool focus = false
    bool focus = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SelectProperty
    bool returns = (self->SelectProperty(id, focus));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_SelectProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty[1] = {{ wxLua_wxPropertyGrid_SelectProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty }};
//     bool SelectProperty( const wxPGProperty*& id, bool focus = false );
static int LUACALL wxLua_wxPropertyGrid_SelectProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool focus = false
    bool focus = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SelectProperty
    bool returns = (self->SelectProperty(id, focus));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCaptionBackgroundColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCaptionBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCaptionBackgroundColour[1] = {{ wxLua_wxPropertyGrid_SetCaptionBackgroundColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCaptionBackgroundColour }};
//     void SetCaptionBackgroundColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetCaptionBackgroundColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCaptionBackgroundColour
    self->SetCaptionBackgroundColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCaptionTextColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCaptionTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCaptionTextColour[1] = {{ wxLua_wxPropertyGrid_SetCaptionTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCaptionTextColour }};
//     void SetCaptionTextColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetCaptionTextColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCaptionTextColour
    self->SetCaptionTextColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellBackgroundColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCellBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCellBackgroundColour[1] = {{ wxLua_wxPropertyGrid_SetCellBackgroundColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellBackgroundColour }};
//     void SetCellBackgroundColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetCellBackgroundColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCellBackgroundColour
    self->SetCellBackgroundColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellDisabledTextColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCellDisabledTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCellDisabledTextColour[1] = {{ wxLua_wxPropertyGrid_SetCellDisabledTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellDisabledTextColour }};
//     void SetCellDisabledTextColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetCellDisabledTextColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCellDisabledTextColour
    self->SetCellDisabledTextColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellTextColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCellTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCellTextColour[1] = {{ wxLua_wxPropertyGrid_SetCellTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCellTextColour }};
//     void SetCellTextColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetCellTextColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCellTextColour
    self->SetCellTextColour(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetColumnCount[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetColumnCount[1] = {{ wxLua_wxPropertyGrid_SetColumnCount, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetColumnCount }};
//     void SetColumnCount( int colCount );
static int LUACALL wxLua_wxPropertyGrid_SetColumnCount(lua_State *L)
{
    // int colCount
    int colCount = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetColumnCount
    self->SetColumnCount(colCount);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCurrentCategory1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory1[1] = {{ wxLua_wxPropertyGrid_SetCurrentCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory1 }};
//     void SetCurrentCategory( const wxString& id );
static int LUACALL wxLua_wxPropertyGrid_SetCurrentCategory1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCurrentCategory
    self->SetCurrentCategory(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetCurrentCategory(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory[1] = {{ wxLua_wxPropertyGrid_SetCurrentCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory }};
//     void SetCurrentCategory( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGrid_SetCurrentCategory(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetCurrentCategory
    self->SetCurrentCategory(id);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetEmptySpaceColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetEmptySpaceColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetEmptySpaceColour[1] = {{ wxLua_wxPropertyGrid_SetEmptySpaceColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetEmptySpaceColour }};
//     void SetEmptySpaceColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetEmptySpaceColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetEmptySpaceColour
    self->SetEmptySpaceColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetLineColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetLineColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetLineColour[1] = {{ wxLua_wxPropertyGrid_SetLineColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetLineColour }};
//     void SetLineColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetLineColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetLineColour
    self->SetLineColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetMarginColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetMarginColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetMarginColour[1] = {{ wxLua_wxPropertyGrid_SetMarginColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetMarginColour }};
//     void SetMarginColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetMarginColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetMarginColour
    self->SetMarginColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetSelectionBackgroundColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetSelectionBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetSelectionBackgroundColour[1] = {{ wxLua_wxPropertyGrid_SetSelectionBackgroundColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetSelectionBackgroundColour }};
//     void SetSelectionBackgroundColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetSelectionBackgroundColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetSelectionBackgroundColour
    self->SetSelectionBackgroundColour(*col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetSelectionTextColour[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetSelectionTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetSelectionTextColour[1] = {{ wxLua_wxPropertyGrid_SetSelectionTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetSelectionTextColour }};
//     void SetSelectionTextColour(const wxColour& col);
static int LUACALL wxLua_wxPropertyGrid_SetSelectionTextColour(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetSelectionTextColour
    self->SetSelectionTextColour(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetSplitterLeft[] = { &wxluatype_wxPropertyGrid, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetSplitterLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetSplitterLeft[1] = {{ wxLua_wxPropertyGrid_SetSplitterLeft, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetSplitterLeft }};
//     void SetSplitterLeft( bool privateChildrenToo = false );
static int LUACALL wxLua_wxPropertyGrid_SetSplitterLeft(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool privateChildrenToo = false
    bool privateChildrenToo = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetSplitterLeft
    self->SetSplitterLeft(privateChildrenToo);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetSplitterPosition[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetSplitterPosition[1] = {{ wxLua_wxPropertyGrid_SetSplitterPosition, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_SetSplitterPosition }};
//     void SetSplitterPosition( int newxpos, int col = 0 );
static int LUACALL wxLua_wxPropertyGrid_SetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int col = 0
    int col = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // int newxpos
    int newxpos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetSplitterPosition
    self->SetSplitterPosition(newxpos, col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance[1] = {{ wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance }};
//     void SetUnspecifiedValueAppearance( const wxPGCell& cell );
static int LUACALL wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance(lua_State *L)
{
    // const wxPGCell cell
    const wxPGCell * cell = (const wxPGCell *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGCell);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetUnspecifiedValueAppearance
    self->SetUnspecifiedValueAppearance(*cell);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetVerticalSpacing[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetVerticalSpacing(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetVerticalSpacing[1] = {{ wxLua_wxPropertyGrid_SetVerticalSpacing, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetVerticalSpacing }};
//     void SetVerticalSpacing( int vspacing );
static int LUACALL wxLua_wxPropertyGrid_SetVerticalSpacing(lua_State *L)
{
    // int vspacing
    int vspacing = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetVerticalSpacing
    self->SetVerticalSpacing(vspacing);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetVirtualWidth[] = { &wxluatype_wxPropertyGrid, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetVirtualWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetVirtualWidth[1] = {{ wxLua_wxPropertyGrid_SetVirtualWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetVirtualWidth }};
//     void SetVirtualWidth( int width );
static int LUACALL wxLua_wxPropertyGrid_SetVirtualWidth(lua_State *L)
{
    // int width
    int width = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetVirtualWidth
    self->SetVirtualWidth(width);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_SetupTextCtrlValue[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_SetupTextCtrlValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetupTextCtrlValue[1] = {{ wxLua_wxPropertyGrid_SetupTextCtrlValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetupTextCtrlValue }};
//     void SetupTextCtrlValue( const wxString& text );
static int LUACALL wxLua_wxPropertyGrid_SetupTextCtrlValue(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call SetupTextCtrlValue
    self->SetupTextCtrlValue(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError1[] = { &wxluatype_wxPropertyGrid, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_ShowPropertyError1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError1[1] = {{ wxLua_wxPropertyGrid_ShowPropertyError1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError1 }};
//     void ShowPropertyError( const wxString& id, const wxString& msg );
static int LUACALL wxLua_wxPropertyGrid_ShowPropertyError1(lua_State *L)
{
    // const wxString msg
    const wxString msg = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ShowPropertyError
    self->ShowPropertyError(id, msg);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_ShowPropertyError(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError[1] = {{ wxLua_wxPropertyGrid_ShowPropertyError, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError }};
//     void ShowPropertyError( const wxPGProperty*& id, const wxString& msg );
static int LUACALL wxLua_wxPropertyGrid_ShowPropertyError(lua_State *L)
{
    // const wxString msg
    const wxString msg = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ShowPropertyError
    self->ShowPropertyError(id, msg);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_UnfocusEditor[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_UnfocusEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_UnfocusEditor[1] = {{ wxLua_wxPropertyGrid_UnfocusEditor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_UnfocusEditor }};
//     bool UnfocusEditor();
static int LUACALL wxLua_wxPropertyGrid_UnfocusEditor(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call UnfocusEditor
    bool returns = (self->UnfocusEditor());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_ValueChangeInEvent[] = { &wxluatype_wxPropertyGrid, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGrid_ValueChangeInEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ValueChangeInEvent[1] = {{ wxLua_wxPropertyGrid_ValueChangeInEvent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_ValueChangeInEvent }};
//     void ValueChangeInEvent( wxVariant variant );
static int LUACALL wxLua_wxPropertyGrid_ValueChangeInEvent(lua_State *L)
{
    // wxVariant variant
    wxVariant variant = wxlua_getwxVarianttype(L, 2);
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call ValueChangeInEvent
    self->ValueChangeInEvent(variant);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_WasValueChangedInEvent[] = { &wxluatype_wxPropertyGrid, NULL };
static int LUACALL wxLua_wxPropertyGrid_WasValueChangedInEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_WasValueChangedInEvent[1] = {{ wxLua_wxPropertyGrid_WasValueChangedInEvent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGrid_WasValueChangedInEvent }};
//     bool WasValueChangedInEvent() const;
static int LUACALL wxLua_wxPropertyGrid_WasValueChangedInEvent(lua_State *L)
{
    // get this
    wxPropertyGrid * self = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call WasValueChangedInEvent
    bool returns = (self->WasValueChangedInEvent());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGrid_constructor1[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGrid_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_constructor1[1] = {{ wxLua_wxPropertyGrid_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 6, s_wxluatypeArray_wxLua_wxPropertyGrid_constructor1 }};
//                     const wxString& name = wxPropertyGridNameStr );
static int LUACALL wxLua_wxPropertyGrid_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxPropertyGridNameStr
    const wxString name = (argCount >= 6 ? wxlua_getwxStringtype(L, 6) : wxString(wxPropertyGridNameStr));
    // long style = wxPG_DEFAULT_STYLE
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : wxPG_DEFAULT_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxPropertyGrid* returns = new wxPropertyGrid(parent, id, *pos, *size, style, name);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static int LUACALL wxLua_wxPropertyGrid_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_constructor[1] = {{ wxLua_wxPropertyGrid_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGrid();
static int LUACALL wxLua_wxPropertyGrid_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGrid* returns = new wxPropertyGrid();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection_overload[] =
{
    { wxLua_wxPropertyGrid_AddToSelection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection1 },
    { wxLua_wxPropertyGrid_AddToSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_AddToSelection },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGrid_ChangePropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGrid_ChangePropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ChangePropertyValue },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible_overload[] =
{
    { wxLua_wxPropertyGrid_EnsureVisible1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible1 },
    { wxLua_wxPropertyGrid_EnsureVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_EnsureVisible },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection_overload[] =
{
    { wxLua_wxPropertyGrid_RemoveFromSelection1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection1 },
    { wxLua_wxPropertyGrid_RemoveFromSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_RemoveFromSelection },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty_overload[] =
{
    { wxLua_wxPropertyGrid_SelectProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty1 },
    { wxLua_wxPropertyGrid_SelectProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_SelectProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory_overload[] =
{
    { wxLua_wxPropertyGrid_SetCurrentCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory1 },
    { wxLua_wxPropertyGrid_SetCurrentCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGrid_SetCurrentCategory },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError_overload[] =
{
    { wxLua_wxPropertyGrid_ShowPropertyError1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError1 },
    { wxLua_wxPropertyGrid_ShowPropertyError, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGrid_ShowPropertyError },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGrid_constructor_overload[] =
{

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGrid_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 6, s_wxluatypeArray_wxLua_wxPropertyGrid_constructor1 },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGrid_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPropertyGrid_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGrid_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGrid_delete_function(void** p)
{
    wxPropertyGrid* o = (wxPropertyGrid*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGrid_methods[] = {
    { "AddActionTrigger", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_AddActionTrigger, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "AddToSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection_overload, s_wxluafunc_wxLua_wxPropertyGrid_AddToSelection_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "AutoGetTranslation", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGrid_AutoGetTranslation, 1, NULL },
    { "BeginLabelEdit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_BeginLabelEdit, 1, NULL },
    { "CenterSplitter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_CenterSplitter, 1, NULL },

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "ChangePropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue_overload, s_wxluafunc_wxLua_wxPropertyGrid_ChangePropertyValue_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_Clear, 1, NULL },
    { "ClearActionTriggers", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ClearActionTriggers, 1, NULL },
    { "CommitChangesFromEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_CommitChangesFromEditor, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_Create, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "DedicateKey", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DedicateKey, 1, NULL },
    { "DoHidePropertyError", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DoHidePropertyError, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoOnValidationFailure", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DoOnValidationFailure, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "DoOnValidationFailureReset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DoOnValidationFailureReset, 1, NULL },
    { "DoRegisterEditorClass", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGrid_DoRegisterEditorClass, 1, NULL },
    { "DoShowPropertyError", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DoShowPropertyError, 1, NULL },
    { "DrawItemAndValueRelated", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_DrawItemAndValueRelated, 1, NULL },
    { "EditorsValueWasModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_EditorsValueWasModified, 1, NULL },
    { "EditorsValueWasNotModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_EditorsValueWasNotModified, 1, NULL },
    { "EnableCategories", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_EnableCategories, 1, NULL },
    { "EndLabelEdit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_EndLabelEdit, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "EnsureVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible_overload, s_wxluafunc_wxLua_wxPropertyGrid_EnsureVisible_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "FitColumns", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_FitColumns, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetCaptionBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionBackgroundColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetCaptionFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionFont, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetCaptionForegroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCaptionForegroundColour, 1, NULL },
    { "GetCellBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCellBackgroundColour, 1, NULL },
    { "GetCellDisabledTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCellDisabledTextColour, 1, NULL },
    { "GetCellTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetCellTextColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetColumnCount, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
    { "GetEditorTextCtrl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetEditorTextCtrl, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetEmptySpaceColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetEmptySpaceColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetFontHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetFontHeight, 1, NULL },
    { "GetGrid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetGrid, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetImageRect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetImageRect, 1, NULL },
    { "GetImageSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetImageSize, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)
    { "GetLabelEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetLabelEditor, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxTextCtrl && wxUSE_TEXTCTRL)

    { "GetLastItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetLastItem, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetLineColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetLineColour, 1, NULL },
    { "GetMarginColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetMarginColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetMarginWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetMarginWidth, 1, NULL },
    { "GetPanel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetPanel, 1, NULL },
    { "GetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetRoot, 1, NULL },
    { "GetRowHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetRowHeight, 1, NULL },
    { "GetSelectedProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetSelectedProperty, 1, NULL },
    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetSelection, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetSelectionBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetSelectionBackgroundColour, 1, NULL },
    { "GetSelectionForegroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetSelectionForegroundColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetSplitterPosition, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)
    { "GetStatusBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetStatusBar, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxStatusBar && wxUSE_STATUSBAR)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetUncommittedPropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetUncommittedPropertyValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetUnspecifiedValueAppearance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetUnspecifiedValueAppearance, 1, NULL },
    { "GetUnspecifiedValueText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetUnspecifiedValueText, 1, NULL },
    { "GetVerticalSpacing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_GetVerticalSpacing, 1, NULL },
    { "IsAnyModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_IsAnyModified, 1, NULL },
    { "IsEditorFocused", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_IsEditorFocused, 1, NULL },
    { "IsEditorsValueModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_IsEditorsValueModified, 1, NULL },
    { "IsFrozen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_IsFrozen, 1, NULL },
    { "MakeColumnEditable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_MakeColumnEditable, 1, NULL },
    { "OnTLPChanging", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_OnTLPChanging, 1, NULL },
    { "RefreshEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_RefreshEditor, 1, NULL },
    { "RefreshProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_RefreshProperty, 1, NULL },
    { "RegisterEditorClass", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGrid_RegisterEditorClass, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "RemoveFromSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection_overload, s_wxluafunc_wxLua_wxPropertyGrid_RemoveFromSelection_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "ResetColours", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ResetColours, 1, NULL },
    { "ResetColumnSizes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ResetColumnSizes, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SelectProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty_overload, s_wxluafunc_wxLua_wxPropertyGrid_SelectProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetCaptionBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCaptionBackgroundColour, 1, NULL },
    { "SetCaptionTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCaptionTextColour, 1, NULL },
    { "SetCellBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCellBackgroundColour, 1, NULL },
    { "SetCellDisabledTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCellDisabledTextColour, 1, NULL },
    { "SetCellTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCellTextColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetColumnCount, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetCurrentCategory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory_overload, s_wxluafunc_wxLua_wxPropertyGrid_SetCurrentCategory_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetEmptySpaceColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetEmptySpaceColour, 1, NULL },
    { "SetLineColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetLineColour, 1, NULL },
    { "SetMarginColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetMarginColour, 1, NULL },
    { "SetSelectionBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetSelectionBackgroundColour, 1, NULL },
    { "SetSelectionTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetSelectionTextColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetSplitterLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetSplitterLeft, 1, NULL },
    { "SetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetSplitterPosition, 1, NULL },
    { "SetUnspecifiedValueAppearance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetUnspecifiedValueAppearance, 1, NULL },
    { "SetVerticalSpacing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetVerticalSpacing, 1, NULL },
    { "SetVirtualWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetVirtualWidth, 1, NULL },
    { "SetupTextCtrlValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_SetupTextCtrlValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "ShowPropertyError", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError_overload, s_wxluafunc_wxLua_wxPropertyGrid_ShowPropertyError_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "UnfocusEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_UnfocusEditor, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ValueChangeInEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_ValueChangeInEvent, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "WasValueChangedInEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGrid_WasValueChangedInEvent, 1, NULL },

#if ((wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPropertyGrid", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGrid_constructor_overload, s_wxluafunc_wxLua_wxPropertyGrid_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyGrid_methodCount = sizeof(wxPropertyGrid_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridEvent
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridEvent'
int wxluatype_wxPropertyGridEvent = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_CanVeto[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_CanVeto(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_CanVeto[1] = {{ wxLua_wxPropertyGridEvent_CanVeto, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_CanVeto }};
//     bool CanVeto() const;
static int LUACALL wxLua_wxPropertyGridEvent_CanVeto(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call CanVeto
    bool returns = (self->CanVeto());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetColumn[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetColumn[1] = {{ wxLua_wxPropertyGridEvent_GetColumn, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetColumn }};
//     unsigned int GetColumn() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetColumn(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetColumn
    unsigned int returns = (self->GetColumn());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetMainParent[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetMainParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetMainParent[1] = {{ wxLua_wxPropertyGridEvent_GetMainParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetMainParent }};
//     %ungc wxPGProperty* GetMainParent() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetMainParent(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetMainParent
    wxPGProperty* returns = (wxPGProperty*)self->GetMainParent();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetProperty[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetProperty[1] = {{ wxLua_wxPropertyGridEvent_GetProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetProperty }};
//     %ungc wxPGProperty* GetProperty() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetProperty(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetPropertyName[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetPropertyName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetPropertyName[1] = {{ wxLua_wxPropertyGridEvent_GetPropertyName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetPropertyName }};
//     wxString GetPropertyName() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetPropertyName(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetPropertyName
    wxString returns = (self->GetPropertyName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetPropertyValue[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetPropertyValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetPropertyValue[1] = {{ wxLua_wxPropertyGridEvent_GetPropertyValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetPropertyValue }};
//     wxVariant GetPropertyValue() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetPropertyValue(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetPropertyValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetValidationFailureBehavior[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetValidationFailureBehavior(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetValidationFailureBehavior[1] = {{ wxLua_wxPropertyGridEvent_GetValidationFailureBehavior, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetValidationFailureBehavior }};
//     unsigned char GetValidationFailureBehavior() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetValidationFailureBehavior(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetValidationFailureBehavior
    unsigned char returns = (self->GetValidationFailureBehavior());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetValue[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_GetValue[1] = {{ wxLua_wxPropertyGridEvent_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_GetValue }};
//     wxVariant GetValue() const;
static int LUACALL wxLua_wxPropertyGridEvent_GetValue(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call GetValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetCanVeto[] = { &wxluatype_wxPropertyGridEvent, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_SetCanVeto(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_SetCanVeto[1] = {{ wxLua_wxPropertyGridEvent_SetCanVeto, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetCanVeto }};
//     void SetCanVeto( bool canVeto );
static int LUACALL wxLua_wxPropertyGridEvent_SetCanVeto(lua_State *L)
{
    // bool canVeto
    bool canVeto = wxlua_getbooleantype(L, 2);
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call SetCanVeto
    self->SetCanVeto(canVeto);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetProperty[] = { &wxluatype_wxPropertyGridEvent, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_SetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_SetProperty[1] = {{ wxLua_wxPropertyGridEvent_SetProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetProperty }};
//     void SetProperty( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGridEvent_SetProperty(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call SetProperty
    self->SetProperty(p);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetValidationFailureBehavior[] = { &wxluatype_wxPropertyGridEvent, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_SetValidationFailureBehavior(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_SetValidationFailureBehavior[1] = {{ wxLua_wxPropertyGridEvent_SetValidationFailureBehavior, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetValidationFailureBehavior }};
//     void SetValidationFailureBehavior( unsigned char flags );
static int LUACALL wxLua_wxPropertyGridEvent_SetValidationFailureBehavior(lua_State *L)
{
    // unsigned char flags
    unsigned char flags = (unsigned char)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call SetValidationFailureBehavior
    self->SetValidationFailureBehavior(flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetValidationFailureMessage[] = { &wxluatype_wxPropertyGridEvent, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_SetValidationFailureMessage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_SetValidationFailureMessage[1] = {{ wxLua_wxPropertyGridEvent_SetValidationFailureMessage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_SetValidationFailureMessage }};
//     void SetValidationFailureMessage( const wxString& message );
static int LUACALL wxLua_wxPropertyGridEvent_SetValidationFailureMessage(lua_State *L)
{
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call SetValidationFailureMessage
    self->SetValidationFailureMessage(message);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_Veto[] = { &wxluatype_wxPropertyGridEvent, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_Veto(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_Veto[1] = {{ wxLua_wxPropertyGridEvent_Veto, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_Veto }};
//     void Veto( bool veto = true );
static int LUACALL wxLua_wxPropertyGridEvent_Veto(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool veto = true
    bool veto = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call Veto
    self->Veto(veto);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_WasVetoed[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_WasVetoed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_WasVetoed[1] = {{ wxLua_wxPropertyGridEvent_WasVetoed, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_WasVetoed }};
//     bool WasVetoed() const;
static int LUACALL wxLua_wxPropertyGridEvent_WasVetoed(lua_State *L)
{
    // get this
    wxPropertyGridEvent * self = (wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call WasVetoed
    bool returns = (self->WasVetoed());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_delete[] = { &wxluatype_wxPropertyGridEvent, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor1[] = { &wxluatype_wxPropertyGridEvent, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_constructor1[1] = {{ wxLua_wxPropertyGridEvent_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor1 }};
//     wxPropertyGridEvent(const wxPropertyGridEvent& event);
static int LUACALL wxLua_wxPropertyGridEvent_constructor1(lua_State *L)
{
    // const wxPropertyGridEvent event
    const wxPropertyGridEvent * event = (const wxPropertyGridEvent *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridEvent);
    // call constructor
    wxPropertyGridEvent* returns = new wxPropertyGridEvent(*event);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridEvent);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridEvent);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor[] = { &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridEvent_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_constructor[1] = {{ wxLua_wxPropertyGridEvent_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor }};
//     wxPropertyGridEvent(wxEventType commandType=0, int id=0);
static int LUACALL wxLua_wxPropertyGridEvent_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int id = 0
    int id = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // wxEventType commandType = 0
    wxEventType commandType = (argCount >= 1 ? (wxEventType)wxlua_getnumbertype(L, 1) : 0);
    // call constructor
    wxPropertyGridEvent* returns = new wxPropertyGridEvent(commandType, id);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridEvent);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridEvent);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridEvent_constructor_overload[] =
{
    { wxLua_wxPropertyGridEvent_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor1 },
    { wxLua_wxPropertyGridEvent_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 2, s_wxluatypeArray_wxLua_wxPropertyGridEvent_constructor },
};
static int s_wxluafunc_wxLua_wxPropertyGridEvent_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridEvent_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridEvent_delete_function(void** p)
{
    wxPropertyGridEvent* o = (wxPropertyGridEvent*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridEvent_methods[] = {
    { "CanVeto", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_CanVeto, 1, NULL },
    { "GetColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetColumn, 1, NULL },
    { "GetMainParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetMainParent, 1, NULL },
    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetProperty, 1, NULL },
    { "GetPropertyName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetPropertyName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetPropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetPropertyValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetValidationFailureBehavior", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetValidationFailureBehavior, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_GetValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetCanVeto", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_SetCanVeto, 1, NULL },
    { "SetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_SetProperty, 1, NULL },
    { "SetValidationFailureBehavior", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_SetValidationFailureBehavior, 1, NULL },
    { "SetValidationFailureMessage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_SetValidationFailureMessage, 1, NULL },
    { "Veto", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_Veto, 1, NULL },
    { "WasVetoed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridEvent_WasVetoed, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridEvent_delete, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPropertyGridEvent", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridEvent_constructor_overload, s_wxluafunc_wxLua_wxPropertyGridEvent_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyGridEvent_methodCount = sizeof(wxPropertyGridEvent_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridPage
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridPage'
int wxluatype_wxPropertyGridPage = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_Clear[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_Clear[1] = {{ wxLua_wxPropertyGridPage_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_Clear }};
//     virtual void Clear();
static int LUACALL wxLua_wxPropertyGridPage_Clear(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call Clear
    self->Clear();

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_FitColumns[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_FitColumns(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_FitColumns[1] = {{ wxLua_wxPropertyGridPage_FitColumns, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_FitColumns }};
//     wxSize FitColumns();
static int LUACALL wxLua_wxPropertyGridPage_FitColumns(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call FitColumns
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->FitColumns());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetIndex[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetIndex(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetIndex[1] = {{ wxLua_wxPropertyGridPage_GetIndex, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetIndex }};
//     inline int GetIndex() const;
static int LUACALL wxLua_wxPropertyGridPage_GetIndex(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetIndex
    int returns = (self->GetIndex());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetRoot[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetRoot[1] = {{ wxLua_wxPropertyGridPage_GetRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetRoot }};
//     %ungc wxPGProperty* GetRoot() const;
static int LUACALL wxLua_wxPropertyGridPage_GetRoot(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetRoot
    wxPGProperty* returns = (wxPGProperty*)self->GetRoot();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetSplitterPosition[] = { &wxluatype_wxPropertyGridPage, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetSplitterPosition[1] = {{ wxLua_wxPropertyGridPage_GetSplitterPosition, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetSplitterPosition }};
//     int GetSplitterPosition( int col = 0 ) const;
static int LUACALL wxLua_wxPropertyGridPage_GetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int col = 0
    int col = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetSplitterPosition
    int returns = (self->GetSplitterPosition(col));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr1[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetStatePtr1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr1[1] = {{ wxLua_wxPropertyGridPage_GetStatePtr1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr1 }};
//     const wxPropertyGridPageState* GetStatePtr() const;
static int LUACALL wxLua_wxPropertyGridPage_GetStatePtr1(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetStatePtr
    const wxPropertyGridPageState* returns = (const wxPropertyGridPageState*)self->GetStatePtr();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPageState);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetStatePtr(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr[1] = {{ wxLua_wxPropertyGridPage_GetStatePtr, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr }};
//     wxPropertyGridPageState* GetStatePtr();
static int LUACALL wxLua_wxPropertyGridPage_GetStatePtr(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetStatePtr
    wxPropertyGridPageState* returns = (wxPropertyGridPageState*)self->GetStatePtr();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPageState);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_GetToolId[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_GetToolId(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetToolId[1] = {{ wxLua_wxPropertyGridPage_GetToolId, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetToolId }};
//     int GetToolId() const;
static int LUACALL wxLua_wxPropertyGridPage_GetToolId(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call GetToolId
    int returns = (self->GetToolId());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_Init[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_Init(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_Init[1] = {{ wxLua_wxPropertyGridPage_Init, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_Init }};
//     virtual void Init();
static int LUACALL wxLua_wxPropertyGridPage_Init(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call Init
    self->Init();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_IsHandlingAllEvents[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_IsHandlingAllEvents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_IsHandlingAllEvents[1] = {{ wxLua_wxPropertyGridPage_IsHandlingAllEvents, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_IsHandlingAllEvents }};
//     virtual bool IsHandlingAllEvents() const;
static int LUACALL wxLua_wxPropertyGridPage_IsHandlingAllEvents(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call IsHandlingAllEvents
    bool returns = (self->IsHandlingAllEvents());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_OnShow[] = { &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridPage_OnShow(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_OnShow[1] = {{ wxLua_wxPropertyGridPage_OnShow, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_OnShow }};
//     virtual void OnShow();
static int LUACALL wxLua_wxPropertyGridPage_OnShow(lua_State *L)
{
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call OnShow
    self->OnShow();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_RefreshProperty[] = { &wxluatype_wxPropertyGridPage, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPage_RefreshProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_RefreshProperty[1] = {{ wxLua_wxPropertyGridPage_RefreshProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPage_RefreshProperty }};
//     virtual void RefreshProperty( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGridPage_RefreshProperty(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call RefreshProperty
    self->RefreshProperty(p);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_SetSplitterPosition[] = { &wxluatype_wxPropertyGridPage, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPage_SetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_SetSplitterPosition[1] = {{ wxLua_wxPropertyGridPage_SetSplitterPosition, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridPage_SetSplitterPosition }};
//     void SetSplitterPosition( int splitterPos, int col = 0 );
static int LUACALL wxLua_wxPropertyGridPage_SetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int col = 0
    int col = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // int splitterPos
    int splitterPos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPage * self = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPage);
    // call SetSplitterPosition
    self->SetSplitterPosition(splitterPos, col);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPage_delete[] = { &wxluatype_wxPropertyGridPage, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_delete }};

static int LUACALL wxLua_wxPropertyGridPage_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_constructor[1] = {{ wxLua_wxPropertyGridPage_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGridPage();
static int LUACALL wxLua_wxPropertyGridPage_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGridPage* returns = new wxPropertyGridPage();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridPage);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr_overload[] =
{
    { wxLua_wxPropertyGridPage_GetStatePtr1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr1 },
    { wxLua_wxPropertyGridPage_GetStatePtr, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPage_GetStatePtr },
};
static int s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridPage_delete_function(void** p)
{
    wxPropertyGridPage* o = (wxPropertyGridPage*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridPage_methods[] = {
    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_Clear, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "FitColumns", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_FitColumns, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetIndex", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_GetIndex, 1, NULL },
    { "GetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_GetRoot, 1, NULL },
    { "GetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_GetSplitterPosition, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetStatePtr", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr_overload, s_wxluafunc_wxLua_wxPropertyGridPage_GetStatePtr_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetToolId", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_GetToolId, 1, NULL },
    { "Init", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_Init, 1, NULL },
    { "IsHandlingAllEvents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_IsHandlingAllEvents, 1, NULL },
    { "OnShow", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_OnShow, 1, NULL },
    { "RefreshProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_RefreshProperty, 1, NULL },
    { "SetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPage_SetSplitterPosition, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridPage_delete, 1, NULL },
    { "wxPropertyGridPage", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridPage_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPropertyGridPage_methodCount = sizeof(wxPropertyGridPage_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridManager
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridManager'
int wxluatype_wxPropertyGridManager = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_AddPage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridManager_AddPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_AddPage[1] = {{ wxLua_wxPropertyGridManager_AddPage, WXLUAMETHOD_METHOD, 1, 4, s_wxluatypeArray_wxLua_wxPropertyGridManager_AddPage }};
//                                        %ungc wxPropertyGridPage* pageObj = NULL );
static int LUACALL wxLua_wxPropertyGridManager_AddPage(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPropertyGridPage pageObj = NULL
    wxPropertyGridPage * pageObj = (argCount >= 4 ? (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPropertyGridPage) : NULL);
    // const wxBitmap bmp = wxPG_NULL_BITMAP
    const wxBitmap * bmp = (argCount >= 3 ? (const wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap) : &wxPG_NULL_BITMAP);
    // const wxString label = wxEmptyString
    const wxString label = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    if (wxluaO_isgcobject(L, pageObj)) wxluaO_undeletegcobject(L, pageObj);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call AddPage
    wxPropertyGridPage* returns = (wxPropertyGridPage*)self->AddPage(label, *bmp, pageObj);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_Clear[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_Clear[1] = {{ wxLua_wxPropertyGridManager_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_Clear }};
//     virtual void Clear();
static int LUACALL wxLua_wxPropertyGridManager_Clear(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_ClearPage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_ClearPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_ClearPage[1] = {{ wxLua_wxPropertyGridManager_ClearPage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_ClearPage }};
//     void ClearPage( int page );
static int LUACALL wxLua_wxPropertyGridManager_ClearPage(lua_State *L)
{
    // int page
    int page = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call ClearPage
    self->ClearPage(page);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_CommitChangesFromEditor[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_CommitChangesFromEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_CommitChangesFromEditor[1] = {{ wxLua_wxPropertyGridManager_CommitChangesFromEditor, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_CommitChangesFromEditor }};
//     bool CommitChangesFromEditor( wxUint32 flags = 0 );
static int LUACALL wxLua_wxPropertyGridManager_CommitChangesFromEditor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxUint32 flags = 0
    wxUint32 flags = (argCount >= 2 ? (wxUint32)wxlua_getuintegertype(L, 2) : 0);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call CommitChangesFromEditor
    bool returns = (self->CommitChangesFromEditor(flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_Create[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_Create[1] = {{ wxLua_wxPropertyGridManager_Create, WXLUAMETHOD_METHOD, 2, 7, s_wxluatypeArray_wxLua_wxPropertyGridManager_Create }};
//                        const wxString& name = wxPropertyGridManagerNameStr );
static int LUACALL wxLua_wxPropertyGridManager_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxPropertyGridManagerNameStr
    const wxString name = (argCount >= 7 ? wxlua_getwxStringtype(L, 7) : wxString(wxPropertyGridManagerNameStr));
    // long style = wxPGMAN_DEFAULT_STYLE
    long style = (argCount >= 6 ? (long)wxlua_getnumbertype(L, 6) : wxPGMAN_DEFAULT_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 5 ? (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 4 ? (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 3 ? (wxWindowID)wxlua_getnumbertype(L, 3) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call Create
    bool returns = (self->Create(parent, id, *pos, *size, style, name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_EnableCategories[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_EnableCategories(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_EnableCategories[1] = {{ wxLua_wxPropertyGridManager_EnableCategories, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_EnableCategories }};
//     bool EnableCategories( bool enable );
static int LUACALL wxLua_wxPropertyGridManager_EnableCategories(lua_State *L)
{
    // bool enable
    bool enable = wxlua_getbooleantype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call EnableCategories
    bool returns = (self->EnableCategories(enable));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible1[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_EnsureVisible1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible1[1] = {{ wxLua_wxPropertyGridManager_EnsureVisible1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible1 }};
//     bool EnsureVisible( const wxString& id );
static int LUACALL wxLua_wxPropertyGridManager_EnsureVisible1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call EnsureVisible
    bool returns = (self->EnsureVisible(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridManager_EnsureVisible(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible[1] = {{ wxLua_wxPropertyGridManager_EnsureVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible }};
//     bool EnsureVisible( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridManager_EnsureVisible(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call EnsureVisible
    bool returns = (self->EnsureVisible(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetColumnCount[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetColumnCount[1] = {{ wxLua_wxPropertyGridManager_GetColumnCount, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetColumnCount }};
//     int GetColumnCount( int page = -1 ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetColumnCount(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int page = -1
    int page = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : -1);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetColumnCount
    int returns = (self->GetColumnCount(page));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetCurrentPage[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetCurrentPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetCurrentPage[1] = {{ wxLua_wxPropertyGridManager_GetCurrentPage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetCurrentPage }};
//     %ungc wxPropertyGridPage* GetCurrentPage() const;
static int LUACALL wxLua_wxPropertyGridManager_GetCurrentPage(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetCurrentPage
    wxPropertyGridPage* returns = (wxPropertyGridPage*)self->GetCurrentPage();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetDescBoxHeight[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetDescBoxHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetDescBoxHeight[1] = {{ wxLua_wxPropertyGridManager_GetDescBoxHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetDescBoxHeight }};
//     int GetDescBoxHeight() const;
static int LUACALL wxLua_wxPropertyGridManager_GetDescBoxHeight(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetDescBoxHeight
    int returns = (self->GetDescBoxHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetGrid[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetGrid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetGrid[1] = {{ wxLua_wxPropertyGridManager_GetGrid, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetGrid }};
//     %ungc wxPropertyGrid* GetGrid();
static int LUACALL wxLua_wxPropertyGridManager_GetGrid(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetGrid
    wxPropertyGrid* returns = (wxPropertyGrid*)self->GetGrid();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage1[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPage1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPage1[1] = {{ wxLua_wxPropertyGridManager_GetPage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage1 }};
//     %ungc wxPropertyGridPage* GetPage( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPage1(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPage
    wxPropertyGridPage* returns = (wxPropertyGridPage*)self->GetPage(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPage(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPage[1] = {{ wxLua_wxPropertyGridManager_GetPage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage }};
//     %ungc wxPropertyGridPage* GetPage( unsigned int ind ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPage(lua_State *L)
{
    // unsigned int ind
    unsigned int ind = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPage
    wxPropertyGridPage* returns = (wxPropertyGridPage*)self->GetPage(ind);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageByName[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPageByName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPageByName[1] = {{ wxLua_wxPropertyGridManager_GetPageByName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageByName }};
//     int GetPageByName( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPageByName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPageByName
    int returns = (self->GetPageByName(name));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageByState[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPageByState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPageByState[1] = {{ wxLua_wxPropertyGridManager_GetPageByState, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageByState }};
//     int GetPageByState( const wxPropertyGridPageState* pstate ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPageByState(lua_State *L)
{
    // const wxPropertyGridPageState pstate
    const wxPropertyGridPageState * pstate = (const wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridPageState);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPageByState
    int returns = (self->GetPageByState(pstate));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageCount[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPageCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPageCount[1] = {{ wxLua_wxPropertyGridManager_GetPageCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageCount }};
//     size_t GetPageCount() const;
static int LUACALL wxLua_wxPropertyGridManager_GetPageCount(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPageCount
    size_t returns = (self->GetPageCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageName[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPageName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPageName[1] = {{ wxLua_wxPropertyGridManager_GetPageName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageName }};
//     const wxString& GetPageName( int index ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPageName(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPageName
    wxString returns = (self->GetPageName(index));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageRoot[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetPageRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPageRoot[1] = {{ wxLua_wxPropertyGridManager_GetPageRoot, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPageRoot }};
//     %ungc wxPGProperty* GetPageRoot( int index ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetPageRoot(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetPageRoot
    wxPGProperty* returns = (wxPGProperty*)self->GetPageRoot(index);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelectedPage[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetSelectedPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetSelectedPage[1] = {{ wxLua_wxPropertyGridManager_GetSelectedPage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelectedPage }};
//     int GetSelectedPage() const;
static int LUACALL wxLua_wxPropertyGridManager_GetSelectedPage(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetSelectedPage
    int returns = (self->GetSelectedPage());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelectedProperty[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetSelectedProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetSelectedProperty[1] = {{ wxLua_wxPropertyGridManager_GetSelectedProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelectedProperty }};
//     %ungc wxPGProperty* GetSelectedProperty() const;
static int LUACALL wxLua_wxPropertyGridManager_GetSelectedProperty(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetSelectedProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetSelectedProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelection[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetSelection[1] = {{ wxLua_wxPropertyGridManager_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetSelection }};
//     %ungc wxPGProperty* GetSelection() const;
static int LUACALL wxLua_wxPropertyGridManager_GetSelection(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetSelection
    wxPGProperty* returns = (wxPGProperty*)self->GetSelection();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxToolbar)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetToolBar[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetToolBar(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetToolBar[1] = {{ wxLua_wxPropertyGridManager_GetToolBar, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetToolBar }};
//     wxToolBar* GetToolBar() const;
static int LUACALL wxLua_wxPropertyGridManager_GetToolBar(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetToolBar
    wxToolBar* returns = (wxToolBar*)self->GetToolBar();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxToolBar);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxToolbar)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_GetVIterator[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_GetVIterator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetVIterator[1] = {{ wxLua_wxPropertyGridManager_GetVIterator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetVIterator }};
//     virtual wxPGVIterator GetVIterator( int flags ) const;
static int LUACALL wxLua_wxPropertyGridManager_GetVIterator(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call GetVIterator
    // allocate a new object using the copy constructor
    wxPGVIterator* returns = new wxPGVIterator(self->GetVIterator(flags));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGVIterator);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_InsertPage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridManager_InsertPage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_InsertPage[1] = {{ wxLua_wxPropertyGridManager_InsertPage, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxPropertyGridManager_InsertPage }};
//                                             %ungc wxPropertyGridPage* pageObj = NULL );
static int LUACALL wxLua_wxPropertyGridManager_InsertPage(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPropertyGridPage pageObj = NULL
    wxPropertyGridPage * pageObj = (argCount >= 5 ? (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPropertyGridPage) : NULL);
    // const wxBitmap bmp = wxNullBitmap
    const wxBitmap * bmp = (argCount >= 4 ? (const wxBitmap *)wxluaT_getuserdatatype(L, 4, wxluatype_wxBitmap) : &wxNullBitmap);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 3);
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    if (wxluaO_isgcobject(L, pageObj)) wxluaO_undeletegcobject(L, pageObj);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call InsertPage
    wxPropertyGridPage* returns = (wxPropertyGridPage*)self->InsertPage(index, label, *bmp, pageObj);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPage);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_IsAnyModified[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_IsAnyModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsAnyModified[1] = {{ wxLua_wxPropertyGridManager_IsAnyModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsAnyModified }};
//     bool IsAnyModified() const;
static int LUACALL wxLua_wxPropertyGridManager_IsAnyModified(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call IsAnyModified
    bool returns = (self->IsAnyModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_IsFrozen[] = { &wxluatype_wxPropertyGridManager, NULL };
static int LUACALL wxLua_wxPropertyGridManager_IsFrozen(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsFrozen[1] = {{ wxLua_wxPropertyGridManager_IsFrozen, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsFrozen }};
//     bool IsFrozen() const;
static int LUACALL wxLua_wxPropertyGridManager_IsFrozen(lua_State *L)
{
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call IsFrozen
    bool returns = (self->IsFrozen());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPageModified[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_IsPageModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsPageModified[1] = {{ wxLua_wxPropertyGridManager_IsPageModified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPageModified }};
//     bool IsPageModified( size_t index ) const;
static int LUACALL wxLua_wxPropertyGridManager_IsPageModified(lua_State *L)
{
    // size_t index
    size_t index = (size_t)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call IsPageModified
    bool returns = (self->IsPageModified(index));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected1[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_IsPropertySelected1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected1[1] = {{ wxLua_wxPropertyGridManager_IsPropertySelected1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected1 }};
//     virtual bool IsPropertySelected( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridManager_IsPropertySelected1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call IsPropertySelected
    bool returns = (self->IsPropertySelected(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridManager_IsPropertySelected(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected[1] = {{ wxLua_wxPropertyGridManager_IsPropertySelected, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected }};
//     virtual bool IsPropertySelected( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridManager_IsPropertySelected(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call IsPropertySelected
    bool returns = (self->IsPropertySelected(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_RemovePage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_RemovePage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_RemovePage[1] = {{ wxLua_wxPropertyGridManager_RemovePage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_RemovePage }};
//     virtual bool RemovePage( int page );
static int LUACALL wxLua_wxPropertyGridManager_RemovePage(lua_State *L)
{
    // int page
    int page = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call RemovePage
    bool returns = (self->RemovePage(page));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage2[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxPropertyGridPage, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SelectPage2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage2[1] = {{ wxLua_wxPropertyGridManager_SelectPage2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage2 }};
//     void SelectPage( wxPropertyGridPage* page );
static int LUACALL wxLua_wxPropertyGridManager_SelectPage2(lua_State *L)
{
    // wxPropertyGridPage page
    wxPropertyGridPage * page = (wxPropertyGridPage *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridPage);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SelectPage
    self->SelectPage(page);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage1[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SelectPage1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage1[1] = {{ wxLua_wxPropertyGridManager_SelectPage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage1 }};
//     void SelectPage( const wxString& label );
static int LUACALL wxLua_wxPropertyGridManager_SelectPage1(lua_State *L)
{
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SelectPage
    self->SelectPage(label);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SelectPage(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage[1] = {{ wxLua_wxPropertyGridManager_SelectPage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage }};
//     void SelectPage( int index );
static int LUACALL wxLua_wxPropertyGridManager_SelectPage(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SelectPage
    self->SelectPage(index);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty1[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SelectProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty1[1] = {{ wxLua_wxPropertyGridManager_SelectProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty1 }};
//     bool SelectProperty( const wxString& id, bool focus = false );
static int LUACALL wxLua_wxPropertyGridManager_SelectProperty1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool focus = false
    bool focus = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SelectProperty
    bool returns = (self->SelectProperty(id, focus));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty[] = { &wxluatype_wxPropertyGridManager, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SelectProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty[1] = {{ wxLua_wxPropertyGridManager_SelectProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty }};
//     bool SelectProperty( const wxPGProperty*& id, bool focus = false );
static int LUACALL wxLua_wxPropertyGridManager_SelectProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool focus = false
    bool focus = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SelectProperty
    bool returns = (self->SelectProperty(id, focus));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetColumnCount[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetColumnCount[1] = {{ wxLua_wxPropertyGridManager_SetColumnCount, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetColumnCount }};
//     void SetColumnCount( int colCount, int page = -1 );
static int LUACALL wxLua_wxPropertyGridManager_SetColumnCount(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int page = -1
    int page = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : -1);
    // int colCount
    int colCount = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetColumnCount
    self->SetColumnCount(colCount, page);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetColumnTitle[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetColumnTitle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetColumnTitle[1] = {{ wxLua_wxPropertyGridManager_SetColumnTitle, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetColumnTitle }};
//     void SetColumnTitle( int idx, const wxString& title );
static int LUACALL wxLua_wxPropertyGridManager_SetColumnTitle(lua_State *L)
{
    // const wxString title
    const wxString title = wxlua_getwxStringtype(L, 3);
    // int idx
    int idx = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetColumnTitle
    self->SetColumnTitle(idx, title);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetDescBoxHeight[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetDescBoxHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetDescBoxHeight[1] = {{ wxLua_wxPropertyGridManager_SetDescBoxHeight, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetDescBoxHeight }};
//     void SetDescBoxHeight( int ht, bool refresh = true );
static int LUACALL wxLua_wxPropertyGridManager_SetDescBoxHeight(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool refresh = true
    bool refresh = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // int ht
    int ht = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetDescBoxHeight
    self->SetDescBoxHeight(ht, refresh);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetDescription[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetDescription(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetDescription[1] = {{ wxLua_wxPropertyGridManager_SetDescription, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetDescription }};
//     void SetDescription( const wxString& label, const wxString& content );
static int LUACALL wxLua_wxPropertyGridManager_SetDescription(lua_State *L)
{
    // const wxString content
    const wxString content = wxlua_getwxStringtype(L, 3);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetDescription
    self->SetDescription(label, content);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetPageSplitterLeft[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetPageSplitterLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetPageSplitterLeft[1] = {{ wxLua_wxPropertyGridManager_SetPageSplitterLeft, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetPageSplitterLeft }};
//     void SetPageSplitterLeft(int page, bool subProps = false);
static int LUACALL wxLua_wxPropertyGridManager_SetPageSplitterLeft(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool subProps = false
    bool subProps = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // int page
    int page = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetPageSplitterLeft
    self->SetPageSplitterLeft(page, subProps);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetPageSplitterPosition[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetPageSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetPageSplitterPosition[1] = {{ wxLua_wxPropertyGridManager_SetPageSplitterPosition, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetPageSplitterPosition }};
//     void SetPageSplitterPosition( int page, int pos, int column = 0 );
static int LUACALL wxLua_wxPropertyGridManager_SetPageSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int column = 0
    int column = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 3);
    // int page
    int page = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetPageSplitterPosition
    self->SetPageSplitterPosition(page, pos, column);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetSplitterLeft[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TBOOLEAN, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetSplitterLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetSplitterLeft[1] = {{ wxLua_wxPropertyGridManager_SetSplitterLeft, WXLUAMETHOD_METHOD, 1, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetSplitterLeft }};
//     void SetSplitterLeft( bool subProps = false, bool allPages = true );
static int LUACALL wxLua_wxPropertyGridManager_SetSplitterLeft(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool allPages = true
    bool allPages = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // bool subProps = false
    bool subProps = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetSplitterLeft
    self->SetSplitterLeft(subProps, allPages);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_SetSplitterPosition[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridManager_SetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SetSplitterPosition[1] = {{ wxLua_wxPropertyGridManager_SetSplitterPosition, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SetSplitterPosition }};
//     void SetSplitterPosition( int pos, int column = 0 );
static int LUACALL wxLua_wxPropertyGridManager_SetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int column = 0
    int column = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call SetSplitterPosition
    self->SetSplitterPosition(pos, column);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_ShowHeader[] = { &wxluatype_wxPropertyGridManager, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridManager_ShowHeader(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_ShowHeader[1] = {{ wxLua_wxPropertyGridManager_ShowHeader, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_ShowHeader }};
//     void ShowHeader(bool show = true);
static int LUACALL wxLua_wxPropertyGridManager_ShowHeader(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool show = true
    bool show = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPropertyGridManager * self = (wxPropertyGridManager *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridManager);
    // call ShowHeader
    self->ShowHeader(show);

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridManager_constructor[] = { &wxluatype_wxWindow, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridManager_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_constructor[1] = {{ wxLua_wxPropertyGridManager_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 6, s_wxluatypeArray_wxLua_wxPropertyGridManager_constructor }};
//                            const wxString& name = wxPropertyGridManagerNameStr );
static int LUACALL wxLua_wxPropertyGridManager_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxPropertyGridManagerNameStr
    const wxString name = (argCount >= 6 ? wxlua_getwxStringtype(L, 6) : wxString(wxPropertyGridManagerNameStr));
    // long style = wxPGMAN_DEFAULT_STYLE
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : wxPGMAN_DEFAULT_STYLE);
    // const wxSize size = wxDefaultSize
    const wxSize * size = (argCount >= 4 ? (const wxSize *)wxluaT_getuserdatatype(L, 4, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 3 ? (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint) : &wxDefaultPosition);
    // wxWindowID id = wxID_ANY
    wxWindowID id = (argCount >= 2 ? (wxWindowID)wxlua_getnumbertype(L, 2) : wxID_ANY);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxPropertyGridManager* returns = new wxPropertyGridManager(parent, id, *pos, *size, style, name);
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridManager);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible_overload[] =
{
    { wxLua_wxPropertyGridManager_EnsureVisible1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible1 },
    { wxLua_wxPropertyGridManager_EnsureVisible, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_EnsureVisible },
};
static int s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_GetPage_overload[] =
{
    { wxLua_wxPropertyGridManager_GetPage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage1 },
    { wxLua_wxPropertyGridManager_GetPage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_GetPage },
};
static int s_wxluafunc_wxLua_wxPropertyGridManager_GetPage_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridManager_GetPage_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected_overload[] =
{
    { wxLua_wxPropertyGridManager_IsPropertySelected1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected1 },
    { wxLua_wxPropertyGridManager_IsPropertySelected, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_IsPropertySelected },
};
static int s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage_overload[] =
{
    { wxLua_wxPropertyGridManager_SelectPage2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage2 },
    { wxLua_wxPropertyGridManager_SelectPage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage1 },
    { wxLua_wxPropertyGridManager_SelectPage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectPage },
};
static int s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty_overload[] =
{
    { wxLua_wxPropertyGridManager_SelectProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty1 },
    { wxLua_wxPropertyGridManager_SelectProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridManager_SelectProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridManager_delete_function(void** p)
{
    wxPropertyGridManager* o = (wxPropertyGridManager*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridManager_methods[] = {
#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "AddPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_AddPage, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_Clear, 1, NULL },
    { "ClearPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_ClearPage, 1, NULL },
    { "CommitChangesFromEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_CommitChangesFromEditor, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_Create, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "EnableCategories", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_EnableCategories, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "EnsureVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible_overload, s_wxluafunc_wxLua_wxPropertyGridManager_EnsureVisible_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetColumnCount, 1, NULL },
    { "GetCurrentPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetCurrentPage, 1, NULL },
    { "GetDescBoxHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetDescBoxHeight, 1, NULL },
    { "GetGrid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetGrid, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPage_overload, s_wxluafunc_wxLua_wxPropertyGridManager_GetPage_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetPageByName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPageByName, 1, NULL },
    { "GetPageByState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPageByState, 1, NULL },
    { "GetPageCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPageCount, 1, NULL },
    { "GetPageName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPageName, 1, NULL },
    { "GetPageRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetPageRoot, 1, NULL },
    { "GetSelectedPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetSelectedPage, 1, NULL },
    { "GetSelectedProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetSelectedProperty, 1, NULL },
    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetSelection, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxToolbar)
    { "GetToolBar", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetToolBar, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxToolbar)

    { "GetVIterator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_GetVIterator, 1, NULL },

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "InsertPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_InsertPage, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "IsAnyModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_IsAnyModified, 1, NULL },
    { "IsFrozen", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_IsFrozen, 1, NULL },
    { "IsPageModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_IsPageModified, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "IsPropertySelected", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected_overload, s_wxluafunc_wxLua_wxPropertyGridManager_IsPropertySelected_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "RemovePage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_RemovePage, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SelectPage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage_overload, s_wxluafunc_wxLua_wxPropertyGridManager_SelectPage_overload_count, 0 },
    { "SelectProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty_overload, s_wxluafunc_wxLua_wxPropertyGridManager_SelectProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetColumnCount, 1, NULL },
    { "SetColumnTitle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetColumnTitle, 1, NULL },
    { "SetDescBoxHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetDescBoxHeight, 1, NULL },
    { "SetDescription", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetDescription, 1, NULL },
    { "SetPageSplitterLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetPageSplitterLeft, 1, NULL },
    { "SetPageSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetPageSplitterPosition, 1, NULL },
    { "SetSplitterLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetSplitterLeft, 1, NULL },
    { "SetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_SetSplitterPosition, 1, NULL },
    { "ShowHeader", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridManager_ShowHeader, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPropertyGridManager", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridManager_constructor, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyGridManager_methodCount = sizeof(wxPropertyGridManager_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGWindowList
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGWindowList'
int wxluatype_wxPGWindowList = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGWindowList_GetPrimary[] = { &wxluatype_wxPGWindowList, NULL };
static int LUACALL wxLua_wxPGWindowList_GetPrimary(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGWindowList_GetPrimary[1] = {{ wxLua_wxPGWindowList_GetPrimary, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGWindowList_GetPrimary }};
//     wxWindow* GetPrimary() const;
static int LUACALL wxLua_wxPGWindowList_GetPrimary(lua_State *L)
{
    // get this
    wxPGWindowList * self = (wxPGWindowList *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGWindowList);
    // call GetPrimary
    wxWindow* returns = (wxWindow*)self->GetPrimary();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGWindowList_GetSecondary[] = { &wxluatype_wxPGWindowList, NULL };
static int LUACALL wxLua_wxPGWindowList_GetSecondary(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGWindowList_GetSecondary[1] = {{ wxLua_wxPGWindowList_GetSecondary, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGWindowList_GetSecondary }};
//     wxWindow* GetSecondary() const;
static int LUACALL wxLua_wxPGWindowList_GetSecondary(lua_State *L)
{
    // get this
    wxPGWindowList * self = (wxPGWindowList *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGWindowList);
    // call GetSecondary
    wxWindow* returns = (wxWindow*)self->GetSecondary();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGWindowList_SetSecondary[] = { &wxluatype_wxPGWindowList, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGWindowList_SetSecondary(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGWindowList_SetSecondary[1] = {{ wxLua_wxPGWindowList_SetSecondary, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGWindowList_SetSecondary }};
//     void SetSecondary(wxWindow* secondary);
static int LUACALL wxLua_wxPGWindowList_SetSecondary(lua_State *L)
{
    // wxWindow secondary
    wxWindow * secondary = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGWindowList * self = (wxPGWindowList *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGWindowList);
    // call SetSecondary
    self->SetSecondary(secondary);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGWindowList_delete[] = { &wxluatype_wxPGWindowList, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGWindowList_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGWindowList_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGWindowList_constructor[] = { &wxluatype_wxWindow, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGWindowList_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGWindowList_constructor[1] = {{ wxLua_wxPGWindowList_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPGWindowList_constructor }};
//     wxPGWindowList(wxWindow* primary, wxWindow* secondary = NULL);
static int LUACALL wxLua_wxPGWindowList_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxWindow secondary = NULL
    wxWindow * secondary = (argCount >= 2 ? (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow) : NULL);
    // wxWindow primary
    wxWindow * primary = (wxWindow *)wxluaT_getuserdatatype(L, 1, wxluatype_wxWindow);
    // call constructor
    wxPGWindowList* returns = new wxPGWindowList(primary, secondary);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}




void wxLua_wxPGWindowList_delete_function(void** p)
{
    wxPGWindowList* o = (wxPGWindowList*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGWindowList_methods[] = {
    { "GetPrimary", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGWindowList_GetPrimary, 1, NULL },
    { "GetSecondary", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGWindowList_GetSecondary, 1, NULL },
    { "SetSecondary", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGWindowList_SetSecondary, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGWindowList_delete, 1, NULL },
    { "wxPGWindowList", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGWindowList_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGWindowList_methodCount = sizeof(wxPGWindowList_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGEditor'
int wxluatype_wxPGEditor = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_CanContainCustomImage[] = { &wxluatype_wxPGEditor, NULL };
static int LUACALL wxLua_wxPGEditor_CanContainCustomImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_CanContainCustomImage[1] = {{ wxLua_wxPGEditor_CanContainCustomImage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGEditor_CanContainCustomImage }};
//     virtual bool CanContainCustomImage() const;
static int LUACALL wxLua_wxPGEditor_CanContainCustomImage(lua_State *L)
{
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call CanContainCustomImage
    bool returns = (self->CanContainCustomImage());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_CreateControls[] = { &wxluatype_wxPGEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_CreateControls[1] = {{ wxLua_wxPGEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGEditor_CreateControls }};
//                                           const wxSize& size) const = 0;
static int LUACALL wxLua_wxPGEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_DeleteItem[] = { &wxluatype_wxPGEditor, &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGEditor_DeleteItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_DeleteItem[1] = {{ wxLua_wxPGEditor_DeleteItem, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditor_DeleteItem }};
//     virtual void DeleteItem( wxWindow* ctrl, int index ) const;
static int LUACALL wxLua_wxPGEditor_DeleteItem(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call DeleteItem
    self->DeleteItem(ctrl, index);

    return 0;
}


#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_DrawValue[] = { &wxluatype_wxPGEditor, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGEditor_DrawValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_DrawValue[1] = {{ wxLua_wxPGEditor_DrawValue, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGEditor_DrawValue }};
//     virtual void DrawValue( wxDC& dc, const wxRect& rect, wxPGProperty* property, const wxString& text ) const;
static int LUACALL wxLua_wxPGEditor_DrawValue(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 5);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call DrawValue
    self->DrawValue(*dc, *rect, property, text);

    return 0;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_GetName[] = { &wxluatype_wxPGEditor, NULL };
static int LUACALL wxLua_wxPGEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_GetName[1] = {{ wxLua_wxPGEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGEditor_GetName(lua_State *L)
{
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_GetValueFromControl[] = { &wxluatype_wxPGEditor, &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGEditor_GetValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_GetValueFromControl[1] = {{ wxLua_wxPGEditor_GetValueFromControl, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGEditor_GetValueFromControl }};
//                                       wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGEditor_GetValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call GetValueFromControl
    bool returns = (self->GetValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_InsertItem[] = { &wxluatype_wxPGEditor, &wxluatype_wxWindow, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGEditor_InsertItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_InsertItem[1] = {{ wxLua_wxPGEditor_InsertItem, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGEditor_InsertItem }};
//     virtual int InsertItem( wxWindow* ctrl, const wxString& label, int index ) const;
static int LUACALL wxLua_wxPGEditor_InsertItem(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 4);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call InsertItem
    int returns = (self->InsertItem(ctrl, label, index));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_OnEvent[] = { &wxluatype_wxPGEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_OnEvent[1] = {{ wxLua_wxPGEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGEditor_OnEvent }};
//         wxWindow* wnd_primary, wxEvent& event ) const = 0;
static int LUACALL wxLua_wxPGEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow wnd_primary
    wxWindow * wnd_primary = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, wnd_primary, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_OnFocus[] = { &wxluatype_wxPGEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGEditor_OnFocus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_OnFocus[1] = {{ wxLua_wxPGEditor_OnFocus, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditor_OnFocus }};
//     virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
static int LUACALL wxLua_wxPGEditor_OnFocus(lua_State *L)
{
    // wxWindow wnd
    wxWindow * wnd = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call OnFocus
    self->OnFocus(property, wnd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_SetControlAppearance[] = { &wxluatype_wxPGEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxPGCell, &wxluatype_wxPGCell, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGEditor_SetControlAppearance(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_SetControlAppearance[1] = {{ wxLua_wxPGEditor_SetControlAppearance, WXLUAMETHOD_METHOD, 7, 7, s_wxluatypeArray_wxLua_wxPGEditor_SetControlAppearance }};
//                                        bool unspecified ) const;
static int LUACALL wxLua_wxPGEditor_SetControlAppearance(lua_State *L)
{
    // bool unspecified
    bool unspecified = wxlua_getbooleantype(L, 7);
    // const wxPGCell oldAppearance
    const wxPGCell * oldAppearance = (const wxPGCell *)wxluaT_getuserdatatype(L, 6, wxluatype_wxPGCell);
    // const wxPGCell appearance
    const wxPGCell * appearance = (const wxPGCell *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPGCell);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid pg
    wxPropertyGrid * pg = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call SetControlAppearance
    self->SetControlAppearance(pg, property, ctrl, *appearance, *oldAppearance, unspecified);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_SetControlIntValue[] = { &wxluatype_wxPGEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGEditor_SetControlIntValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_SetControlIntValue[1] = {{ wxLua_wxPGEditor_SetControlIntValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGEditor_SetControlIntValue }};
//     virtual void SetControlIntValue( wxPGProperty* property, wxWindow* ctrl, int value ) const;
static int LUACALL wxLua_wxPGEditor_SetControlIntValue(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call SetControlIntValue
    self->SetControlIntValue(property, ctrl, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_SetControlStringValue[] = { &wxluatype_wxPGEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGEditor_SetControlStringValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_SetControlStringValue[1] = {{ wxLua_wxPGEditor_SetControlStringValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGEditor_SetControlStringValue }};
//     virtual void SetControlStringValue( wxPGProperty* property, wxWindow* ctrl, const wxString& txt ) const;
static int LUACALL wxLua_wxPGEditor_SetControlStringValue(lua_State *L)
{
    // const wxString txt
    const wxString txt = wxlua_getwxStringtype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call SetControlStringValue
    self->SetControlStringValue(property, ctrl, txt);

    return 0;
}


#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_SetItems[] = { &wxluatype_wxPGEditor, &wxluatype_wxWindow, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPGEditor_SetItems(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_SetItems[1] = {{ wxLua_wxPGEditor_SetItems, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditor_SetItems }};
//     virtual void SetItems(wxWindow* ctrl,  const wxArrayString& labels) const;
static int LUACALL wxLua_wxPGEditor_SetItems(lua_State *L)
{
    // const wxArrayString labels
    wxLuaSmartwxArrayString labels = wxlua_getwxArrayString(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call SetItems
    self->SetItems(ctrl, labels);

    return 0;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_SetValueToUnspecified[] = { &wxluatype_wxPGEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGEditor_SetValueToUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_SetValueToUnspecified[1] = {{ wxLua_wxPGEditor_SetValueToUnspecified, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditor_SetValueToUnspecified }};
//     virtual void SetValueToUnspecified( wxPGProperty* property, wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGEditor_SetValueToUnspecified(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call SetValueToUnspecified
    self->SetValueToUnspecified(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_UpdateControl[] = { &wxluatype_wxPGEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGEditor_UpdateControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_UpdateControl[1] = {{ wxLua_wxPGEditor_UpdateControl, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditor_UpdateControl }};
//     virtual void UpdateControl( wxPGProperty* property, wxWindow* ctrl ) const = 0;
static int LUACALL wxLua_wxPGEditor_UpdateControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGEditor * self = (wxPGEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditor);
    // call UpdateControl
    self->UpdateControl(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditor_delete[] = { &wxluatype_wxPGEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGEditor_delete }};




void wxLua_wxPGEditor_delete_function(void** p)
{
    wxPGEditor* o = (wxPGEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGEditor_methods[] = {
    { "CanContainCustomImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_CanContainCustomImage, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_CreateControls, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "DeleteItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_DeleteItem, 1, NULL },

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DrawValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_DrawValue, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_GetName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValueFromControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_GetValueFromControl, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "InsertItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_InsertItem, 1, NULL },
    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_OnEvent, 1, NULL },
    { "OnFocus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_OnFocus, 1, NULL },
    { "SetControlAppearance", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_SetControlAppearance, 1, NULL },
    { "SetControlIntValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_SetControlIntValue, 1, NULL },
    { "SetControlStringValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_SetControlStringValue, 1, NULL },

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetItems", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_SetItems, 1, NULL },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetValueToUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_SetValueToUnspecified, 1, NULL },
    { "UpdateControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditor_UpdateControl, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGEditor_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGEditor_methodCount = sizeof(wxPGEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGTextCtrlEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGTextCtrlEditor'
int wxluatype_wxPGTextCtrlEditor = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_CreateControls[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_CreateControls[1] = {{ wxLua_wxPGTextCtrlEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetName[] = { &wxluatype_wxPGTextCtrlEditor, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetName[1] = {{ wxLua_wxPGTextCtrlEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGTextCtrlEditor_GetName(lua_State *L)
{
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl[] = { &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl[1] = {{ wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 3, 3, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl }};
//                                              wxWindow* ctrl );
static int LUACALL wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 1, wxluatype_wxVariant);
    // call GetTextCtrlValueFromControl
    bool returns = (wxPGTextCtrlEditor::GetTextCtrlValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetValueFromControl[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_GetValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetValueFromControl[1] = {{ wxLua_wxPGTextCtrlEditor_GetValueFromControl, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_GetValueFromControl }};
//                                       wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_GetValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call GetValueFromControl
    bool returns = (self->GetValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnEvent[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnEvent[1] = {{ wxLua_wxPGTextCtrlEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnEvent }};
//                           wxEvent& event ) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow primaryCtrl
    wxWindow * primaryCtrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, primaryCtrl, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnFocus[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_OnFocus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnFocus[1] = {{ wxLua_wxPGTextCtrlEditor_OnFocus, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnFocus }};
//     virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_OnFocus(lua_State *L)
{
    // wxWindow wnd
    wxWindow * wnd = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call OnFocus
    self->OnFocus(property, wnd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent[1] = {{ wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 4, 4, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent }};
//                                  wxEvent& event );
static int LUACALL wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 4, wxluatype_wxEvent);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call OnTextCtrlEvent
    bool returns = (wxPGTextCtrlEditor::OnTextCtrlEvent(propgrid, property, ctrl, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_SetControlStringValue[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_SetControlStringValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_SetControlStringValue[1] = {{ wxLua_wxPGTextCtrlEditor_SetControlStringValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_SetControlStringValue }};
//                                         const wxString& txt ) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_SetControlStringValue(lua_State *L)
{
    // const wxString txt
    const wxString txt = wxlua_getwxStringtype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call SetControlStringValue
    self->SetControlStringValue(property, ctrl, txt);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_UpdateControl[] = { &wxluatype_wxPGTextCtrlEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGTextCtrlEditor_UpdateControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_UpdateControl[1] = {{ wxLua_wxPGTextCtrlEditor_UpdateControl, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_UpdateControl }};
//                                 wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGTextCtrlEditor_UpdateControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGTextCtrlEditor * self = (wxPGTextCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlEditor);
    // call UpdateControl
    self->UpdateControl(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_delete[] = { &wxluatype_wxPGTextCtrlEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGTextCtrlEditor_delete }};

static int LUACALL wxLua_wxPGTextCtrlEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlEditor_constructor[1] = {{ wxLua_wxPGTextCtrlEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGTextCtrlEditor();
static int LUACALL wxLua_wxPGTextCtrlEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGTextCtrlEditor* returns = new wxPGTextCtrlEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGTextCtrlEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGTextCtrlEditor);

    return 1;
}




void wxLua_wxPGTextCtrlEditor_delete_function(void** p)
{
    wxPGTextCtrlEditor* o = (wxPGTextCtrlEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGTextCtrlEditor_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_CreateControls, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetTextCtrlValueFromControl", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetTextCtrlValueFromControl, 1, NULL },
    { "GetValueFromControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_GetValueFromControl, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnEvent, 1, NULL },
    { "OnFocus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnFocus, 1, NULL },
    { "OnTextCtrlEvent", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPGTextCtrlEditor_OnTextCtrlEvent, 1, NULL },
    { "SetControlStringValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_SetControlStringValue, 1, NULL },
    { "UpdateControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlEditor_UpdateControl, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGTextCtrlEditor_delete, 1, NULL },
    { "wxPGTextCtrlEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGTextCtrlEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGTextCtrlEditor_methodCount = sizeof(wxPGTextCtrlEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGChoiceEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGChoiceEditor'
int wxluatype_wxPGChoiceEditor = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_CanContainCustomImage[] = { &wxluatype_wxPGChoiceEditor, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_CanContainCustomImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_CanContainCustomImage[1] = {{ wxLua_wxPGChoiceEditor_CanContainCustomImage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEditor_CanContainCustomImage }};
//     virtual bool CanContainCustomImage() const;
static int LUACALL wxLua_wxPGChoiceEditor_CanContainCustomImage(lua_State *L)
{
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call CanContainCustomImage
    bool returns = (self->CanContainCustomImage());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_CreateControls[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_CreateControls[1] = {{ wxLua_wxPGChoiceEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGChoiceEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGChoiceEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_CreateControlsBase[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_CreateControlsBase(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_CreateControlsBase[1] = {{ wxLua_wxPGChoiceEditor_CreateControlsBase, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxPGChoiceEditor_CreateControlsBase }};
//                                   long extraStyle ) const;
static int LUACALL wxLua_wxPGChoiceEditor_CreateControlsBase(lua_State *L)
{
    // long extraStyle
    long extraStyle = (long)wxlua_getnumbertype(L, 6);
    // const wxSize sz
    const wxSize * sz = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call CreateControlsBase
    wxWindow* returns = (wxWindow*)self->CreateControlsBase(propgrid, property, *pos, *sz, extraStyle);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_DeleteItem[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_DeleteItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_DeleteItem[1] = {{ wxLua_wxPGChoiceEditor_DeleteItem, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoiceEditor_DeleteItem }};
//     virtual void DeleteItem( wxWindow* ctrl, int index ) const;
static int LUACALL wxLua_wxPGChoiceEditor_DeleteItem(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call DeleteItem
    self->DeleteItem(ctrl, index);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_GetName[] = { &wxluatype_wxPGChoiceEditor, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_GetName[1] = {{ wxLua_wxPGChoiceEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGChoiceEditor_GetName(lua_State *L)
{
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_GetValueFromControl[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_GetValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_GetValueFromControl[1] = {{ wxLua_wxPGChoiceEditor_GetValueFromControl, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGChoiceEditor_GetValueFromControl }};
//                                       wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGChoiceEditor_GetValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call GetValueFromControl
    bool returns = (self->GetValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_InsertItem[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxWindow, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_InsertItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_InsertItem[1] = {{ wxLua_wxPGChoiceEditor_InsertItem, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGChoiceEditor_InsertItem }};
//                             int index ) const;
static int LUACALL wxLua_wxPGChoiceEditor_InsertItem(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 4);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call InsertItem
    int returns = (self->InsertItem(ctrl, label, index));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_OnEvent[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_OnEvent[1] = {{ wxLua_wxPGChoiceEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGChoiceEditor_OnEvent }};
//                           wxEvent& event ) const;
static int LUACALL wxLua_wxPGChoiceEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow primaryCtrl
    wxWindow * primaryCtrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, primaryCtrl, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetControlIntValue[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_SetControlIntValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_SetControlIntValue[1] = {{ wxLua_wxPGChoiceEditor_SetControlIntValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetControlIntValue }};
//                                      int value ) const;
static int LUACALL wxLua_wxPGChoiceEditor_SetControlIntValue(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call SetControlIntValue
    self->SetControlIntValue(property, ctrl, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetControlStringValue[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_SetControlStringValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_SetControlStringValue[1] = {{ wxLua_wxPGChoiceEditor_SetControlStringValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetControlStringValue }};
//                                         const wxString& txt ) const;
static int LUACALL wxLua_wxPGChoiceEditor_SetControlStringValue(lua_State *L)
{
    // const wxString txt
    const wxString txt = wxlua_getwxStringtype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call SetControlStringValue
    self->SetControlStringValue(property, ctrl, txt);

    return 0;
}


#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetItems[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxWindow, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_SetItems(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_SetItems[1] = {{ wxLua_wxPGChoiceEditor_SetItems, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetItems }};
//     virtual void SetItems(wxWindow* ctrl, const wxArrayString& labels) const;
static int LUACALL wxLua_wxPGChoiceEditor_SetItems(lua_State *L)
{
    // const wxArrayString labels
    wxLuaSmartwxArrayString labels = wxlua_getwxArrayString(L, 3);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call SetItems
    self->SetItems(ctrl, labels);

    return 0;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetValueToUnspecified[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_SetValueToUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_SetValueToUnspecified[1] = {{ wxLua_wxPGChoiceEditor_SetValueToUnspecified, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoiceEditor_SetValueToUnspecified }};
//                                         wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGChoiceEditor_SetValueToUnspecified(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call SetValueToUnspecified
    self->SetValueToUnspecified(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_UpdateControl[] = { &wxluatype_wxPGChoiceEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGChoiceEditor_UpdateControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_UpdateControl[1] = {{ wxLua_wxPGChoiceEditor_UpdateControl, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoiceEditor_UpdateControl }};
//                                 wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGChoiceEditor_UpdateControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGChoiceEditor * self = (wxPGChoiceEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEditor);
    // call UpdateControl
    self->UpdateControl(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEditor_delete[] = { &wxluatype_wxPGChoiceEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEditor_delete }};

static int LUACALL wxLua_wxPGChoiceEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEditor_constructor[1] = {{ wxLua_wxPGChoiceEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGChoiceEditor();
static int LUACALL wxLua_wxPGChoiceEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGChoiceEditor* returns = new wxPGChoiceEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoiceEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEditor);

    return 1;
}




void wxLua_wxPGChoiceEditor_delete_function(void** p)
{
    wxPGChoiceEditor* o = (wxPGChoiceEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGChoiceEditor_methods[] = {
    { "CanContainCustomImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_CanContainCustomImage, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_CreateControls, 1, NULL },
    { "CreateControlsBase", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_CreateControlsBase, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "DeleteItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_DeleteItem, 1, NULL },
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_GetName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValueFromControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_GetValueFromControl, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "InsertItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_InsertItem, 1, NULL },
    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_OnEvent, 1, NULL },
    { "SetControlIntValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_SetControlIntValue, 1, NULL },
    { "SetControlStringValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_SetControlStringValue, 1, NULL },

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetItems", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_SetItems, 1, NULL },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetValueToUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_SetValueToUnspecified, 1, NULL },
    { "UpdateControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEditor_UpdateControl, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGChoiceEditor_delete, 1, NULL },
    { "wxPGChoiceEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGChoiceEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGChoiceEditor_methodCount = sizeof(wxPGChoiceEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGComboBoxEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGComboBoxEditor'
int wxluatype_wxPGComboBoxEditor = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_CreateControls[] = { &wxluatype_wxPGComboBoxEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_CreateControls[1] = {{ wxLua_wxPGComboBoxEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGComboBoxEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_GetName[] = { &wxluatype_wxPGComboBoxEditor, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_GetName[1] = {{ wxLua_wxPGComboBoxEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGComboBoxEditor_GetName(lua_State *L)
{
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_GetValueFromControl[] = { &wxluatype_wxPGComboBoxEditor, &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_GetValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_GetValueFromControl[1] = {{ wxLua_wxPGComboBoxEditor_GetValueFromControl, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_GetValueFromControl }};
//                                       wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGComboBoxEditor_GetValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call GetValueFromControl
    bool returns = (self->GetValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_OnEvent[] = { &wxluatype_wxPGComboBoxEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_OnEvent[1] = {{ wxLua_wxPGComboBoxEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_OnEvent }};
//         wxWindow* ctrl, wxEvent& event ) const;
static int LUACALL wxLua_wxPGComboBoxEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, ctrl, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_OnFocus[] = { &wxluatype_wxPGComboBoxEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_OnFocus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_OnFocus[1] = {{ wxLua_wxPGComboBoxEditor_OnFocus, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_OnFocus }};
//     virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
static int LUACALL wxLua_wxPGComboBoxEditor_OnFocus(lua_State *L)
{
    // wxWindow wnd
    wxWindow * wnd = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call OnFocus
    self->OnFocus(property, wnd);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_UpdateControl[] = { &wxluatype_wxPGComboBoxEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGComboBoxEditor_UpdateControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_UpdateControl[1] = {{ wxLua_wxPGComboBoxEditor_UpdateControl, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_UpdateControl }};
//     virtual void UpdateControl( wxPGProperty* property, wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGComboBoxEditor_UpdateControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGComboBoxEditor * self = (wxPGComboBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGComboBoxEditor);
    // call UpdateControl
    self->UpdateControl(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGComboBoxEditor_delete[] = { &wxluatype_wxPGComboBoxEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGComboBoxEditor_delete }};

static int LUACALL wxLua_wxPGComboBoxEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGComboBoxEditor_constructor[1] = {{ wxLua_wxPGComboBoxEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGComboBoxEditor();
static int LUACALL wxLua_wxPGComboBoxEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGComboBoxEditor* returns = new wxPGComboBoxEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGComboBoxEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGComboBoxEditor);

    return 1;
}




void wxLua_wxPGComboBoxEditor_delete_function(void** p)
{
    wxPGComboBoxEditor* o = (wxPGComboBoxEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGComboBoxEditor_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_CreateControls, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_GetName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValueFromControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_GetValueFromControl, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_OnEvent, 1, NULL },
    { "OnFocus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_OnFocus, 1, NULL },
    { "UpdateControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGComboBoxEditor_UpdateControl, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGComboBoxEditor_delete, 1, NULL },
    { "wxPGComboBoxEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGComboBoxEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGComboBoxEditor_methodCount = sizeof(wxPGComboBoxEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGChoiceAndButtonEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGChoiceAndButtonEditor'
int wxluatype_wxPGChoiceAndButtonEditor = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_CreateControls[] = { &wxluatype_wxPGChoiceAndButtonEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGChoiceAndButtonEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_CreateControls[1] = {{ wxLua_wxPGChoiceAndButtonEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGChoiceAndButtonEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGChoiceAndButtonEditor * self = (wxPGChoiceAndButtonEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceAndButtonEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_GetName[] = { &wxluatype_wxPGChoiceAndButtonEditor, NULL };
static int LUACALL wxLua_wxPGChoiceAndButtonEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_GetName[1] = {{ wxLua_wxPGChoiceAndButtonEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGChoiceAndButtonEditor_GetName(lua_State *L)
{
    // get this
    wxPGChoiceAndButtonEditor * self = (wxPGChoiceAndButtonEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceAndButtonEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_delete[] = { &wxluatype_wxPGChoiceAndButtonEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceAndButtonEditor_delete }};

static int LUACALL wxLua_wxPGChoiceAndButtonEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_constructor[1] = {{ wxLua_wxPGChoiceAndButtonEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGChoiceAndButtonEditor();
static int LUACALL wxLua_wxPGChoiceAndButtonEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGChoiceAndButtonEditor* returns = new wxPGChoiceAndButtonEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoiceAndButtonEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceAndButtonEditor);

    return 1;
}




void wxLua_wxPGChoiceAndButtonEditor_delete_function(void** p)
{
    wxPGChoiceAndButtonEditor* o = (wxPGChoiceAndButtonEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGChoiceAndButtonEditor_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_CreateControls, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_GetName, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_delete, 1, NULL },
    { "wxPGChoiceAndButtonEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGChoiceAndButtonEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGChoiceAndButtonEditor_methodCount = sizeof(wxPGChoiceAndButtonEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGTextCtrlAndButtonEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGTextCtrlAndButtonEditor'
int wxluatype_wxPGTextCtrlAndButtonEditor = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_CreateControls[] = { &wxluatype_wxPGTextCtrlAndButtonEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_CreateControls[1] = {{ wxLua_wxPGTextCtrlAndButtonEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGTextCtrlAndButtonEditor * self = (wxPGTextCtrlAndButtonEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlAndButtonEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_GetName[] = { &wxluatype_wxPGTextCtrlAndButtonEditor, NULL };
static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_GetName[1] = {{ wxLua_wxPGTextCtrlAndButtonEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_GetName(lua_State *L)
{
    // get this
    wxPGTextCtrlAndButtonEditor * self = (wxPGTextCtrlAndButtonEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGTextCtrlAndButtonEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_delete[] = { &wxluatype_wxPGTextCtrlAndButtonEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGTextCtrlAndButtonEditor_delete }};

static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_constructor[1] = {{ wxLua_wxPGTextCtrlAndButtonEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGTextCtrlAndButtonEditor();
static int LUACALL wxLua_wxPGTextCtrlAndButtonEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGTextCtrlAndButtonEditor* returns = new wxPGTextCtrlAndButtonEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGTextCtrlAndButtonEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGTextCtrlAndButtonEditor);

    return 1;
}




void wxLua_wxPGTextCtrlAndButtonEditor_delete_function(void** p)
{
    wxPGTextCtrlAndButtonEditor* o = (wxPGTextCtrlAndButtonEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGTextCtrlAndButtonEditor_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_CreateControls, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_GetName, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_delete, 1, NULL },
    { "wxPGTextCtrlAndButtonEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGTextCtrlAndButtonEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGTextCtrlAndButtonEditor_methodCount = sizeof(wxPGTextCtrlAndButtonEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)
// ---------------------------------------------------------------------------
// Bind class wxPGCheckBoxEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGCheckBoxEditor'
int wxluatype_wxPGCheckBoxEditor = WXLUA_TUNKNOWN;

#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_CreateControls[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_CreateControls[1] = {{ wxLua_wxPGCheckBoxEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxDC)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_DrawValue[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_DrawValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_DrawValue[1] = {{ wxLua_wxPGCheckBoxEditor_DrawValue, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_DrawValue }};
//                             const wxString& text ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_DrawValue(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 5);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call DrawValue
    self->DrawValue(*dc, *rect, property, text);

    return 0;
}

#endif // ((((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxDC)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_GetName[] = { &wxluatype_wxPGCheckBoxEditor, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_GetName[1] = {{ wxLua_wxPGCheckBoxEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_GetName }};
//     virtual wxString GetName() const;
static int LUACALL wxLua_wxPGCheckBoxEditor_GetName(lua_State *L)
{
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_GetValueFromControl[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxVariant, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_GetValueFromControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_GetValueFromControl[1] = {{ wxLua_wxPGCheckBoxEditor_GetValueFromControl, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_GetValueFromControl }};
//                                       wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_GetValueFromControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call GetValueFromControl
    bool returns = (self->GetValueFromControl(*variant, property, ctrl));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_OnEvent[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_OnEvent[1] = {{ wxLua_wxPGCheckBoxEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_OnEvent }};
//                           wxEvent& event ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow primaryCtrl
    wxWindow * primaryCtrl = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, primaryCtrl, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_SetControlIntValue[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_SetControlIntValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_SetControlIntValue[1] = {{ wxLua_wxPGCheckBoxEditor_SetControlIntValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_SetControlIntValue }};
//                                      int value ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_SetControlIntValue(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 4);
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call SetControlIntValue
    self->SetControlIntValue(property, ctrl, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_SetValueToUnspecified[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_SetValueToUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_SetValueToUnspecified[1] = {{ wxLua_wxPGCheckBoxEditor_SetValueToUnspecified, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_SetValueToUnspecified }};
//                                         wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_SetValueToUnspecified(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call SetValueToUnspecified
    self->SetValueToUnspecified(property, ctrl);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_UpdateControl[] = { &wxluatype_wxPGCheckBoxEditor, &wxluatype_wxPGProperty, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxPGCheckBoxEditor_UpdateControl(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_UpdateControl[1] = {{ wxLua_wxPGCheckBoxEditor_UpdateControl, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_UpdateControl }};
//                                 wxWindow* ctrl ) const;
static int LUACALL wxLua_wxPGCheckBoxEditor_UpdateControl(lua_State *L)
{
    // wxWindow ctrl
    wxWindow * ctrl = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGCheckBoxEditor * self = (wxPGCheckBoxEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCheckBoxEditor);
    // call UpdateControl
    self->UpdateControl(property, ctrl);

    return 0;
}

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_delete[] = { &wxluatype_wxPGCheckBoxEditor, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGCheckBoxEditor_delete }};

static int LUACALL wxLua_wxPGCheckBoxEditor_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCheckBoxEditor_constructor[1] = {{ wxLua_wxPGCheckBoxEditor_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGCheckBoxEditor();
static int LUACALL wxLua_wxPGCheckBoxEditor_constructor(lua_State *L)
{
    // call constructor
    wxPGCheckBoxEditor* returns = new wxPGCheckBoxEditor();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGCheckBoxEditor);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCheckBoxEditor);

    return 1;
}




void wxLua_wxPGCheckBoxEditor_delete_function(void** p)
{
    wxPGCheckBoxEditor* o = (wxPGCheckBoxEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGCheckBoxEditor_methods[] = {
#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_CreateControls, 1, NULL },
#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxDC)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DrawValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_DrawValue, 1, NULL },
#endif // ((((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxDC)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_GetName, 1, NULL },

#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxUSE_VARIANT)
    { "GetValueFromControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_GetValueFromControl, 1, NULL },
#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_OnEvent, 1, NULL },
    { "SetControlIntValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_SetControlIntValue, 1, NULL },
    { "SetValueToUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_SetValueToUnspecified, 1, NULL },
    { "UpdateControl", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCheckBoxEditor_UpdateControl, 1, NULL },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGCheckBoxEditor_delete, 1, NULL },
    { "wxPGCheckBoxEditor", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGCheckBoxEditor_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGCheckBoxEditor_methodCount = sizeof(wxPGCheckBoxEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGEditorDialogAdapter
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGEditorDialogAdapter'
int wxluatype_wxPGEditorDialogAdapter = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_DoShowDialog[] = { &wxluatype_wxPGEditorDialogAdapter, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGEditorDialogAdapter_DoShowDialog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditorDialogAdapter_DoShowDialog[1] = {{ wxLua_wxPGEditorDialogAdapter_DoShowDialog, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_DoShowDialog }};
//                                wxPGProperty* property ) = 0;
static int LUACALL wxLua_wxPGEditorDialogAdapter_DoShowDialog(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propGrid
    wxPropertyGrid * propGrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGEditorDialogAdapter * self = (wxPGEditorDialogAdapter *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditorDialogAdapter);
    // call DoShowDialog
    bool returns = (self->DoShowDialog(propGrid, property));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_GetValue[] = { &wxluatype_wxPGEditorDialogAdapter, NULL };
static int LUACALL wxLua_wxPGEditorDialogAdapter_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditorDialogAdapter_GetValue[1] = {{ wxLua_wxPGEditorDialogAdapter_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_GetValue }};
//     wxVariant& GetValue();
static int LUACALL wxLua_wxPGEditorDialogAdapter_GetValue(lua_State *L)
{
    // get this
    wxPGEditorDialogAdapter * self = (wxPGEditorDialogAdapter *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditorDialogAdapter);
    // call GetValue
    wxVariant* returns = (wxVariant*)&self->GetValue();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_SetValue[] = { &wxluatype_wxPGEditorDialogAdapter, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGEditorDialogAdapter_SetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditorDialogAdapter_SetValue[1] = {{ wxLua_wxPGEditorDialogAdapter_SetValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_SetValue }};
//     void SetValue( const wxVariant& value );
static int LUACALL wxLua_wxPGEditorDialogAdapter_SetValue(lua_State *L)
{
    // const wxVariant value
    const wxVariant * value = (const wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGEditorDialogAdapter * self = (wxPGEditorDialogAdapter *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditorDialogAdapter);
    // call SetValue
    self->SetValue(*value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_ShowDialog[] = { &wxluatype_wxPGEditorDialogAdapter, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGEditorDialogAdapter_ShowDialog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditorDialogAdapter_ShowDialog[1] = {{ wxLua_wxPGEditorDialogAdapter_ShowDialog, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_ShowDialog }};
//     bool ShowDialog( wxPropertyGrid* propGrid, wxPGProperty* property );
static int LUACALL wxLua_wxPGEditorDialogAdapter_ShowDialog(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propGrid
    wxPropertyGrid * propGrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGEditorDialogAdapter * self = (wxPGEditorDialogAdapter *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGEditorDialogAdapter);
    // call ShowDialog
    bool returns = (self->ShowDialog(propGrid, property));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_delete[] = { &wxluatype_wxPGEditorDialogAdapter, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGEditorDialogAdapter_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGEditorDialogAdapter_delete }};




void wxLua_wxPGEditorDialogAdapter_delete_function(void** p)
{
    wxPGEditorDialogAdapter* o = (wxPGEditorDialogAdapter*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGEditorDialogAdapter_methods[] = {
    { "DoShowDialog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditorDialogAdapter_DoShowDialog, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditorDialogAdapter_GetValue, 1, NULL },
    { "SetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditorDialogAdapter_SetValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "ShowDialog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGEditorDialogAdapter_ShowDialog, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGEditorDialogAdapter_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGEditorDialogAdapter_methodCount = sizeof(wxPGEditorDialogAdapter_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGMultiButton
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGMultiButton'
int wxluatype_wxPGMultiButton = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_Add1[] = { &wxluatype_wxPGMultiButton, &wxluatype_wxBitmap, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGMultiButton_Add1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_Add1[1] = {{ wxLua_wxPGMultiButton_Add1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGMultiButton_Add1 }};
//     void Add( const wxBitmap& bitmap, int id = -2 );
static int LUACALL wxLua_wxPGMultiButton_Add1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int id = -2
    int id = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : -2);
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call Add
    self->Add(*bitmap, id);

    return 0;
}

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_Add[] = { &wxluatype_wxPGMultiButton, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGMultiButton_Add(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_Add[1] = {{ wxLua_wxPGMultiButton_Add, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGMultiButton_Add }};
//     void Add( const wxString& label, int id = -2 );
static int LUACALL wxLua_wxPGMultiButton_Add(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int id = -2
    int id = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : -2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call Add
    self->Add(label, id);

    return 0;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_Finalize[] = { &wxluatype_wxPGMultiButton, &wxluatype_wxPropertyGrid, &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxPGMultiButton_Finalize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_Finalize[1] = {{ wxLua_wxPGMultiButton_Finalize, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGMultiButton_Finalize }};
//     void Finalize( wxPropertyGrid* propGrid, const wxPoint& pos );
static int LUACALL wxLua_wxPGMultiButton_Finalize(lua_State *L)
{
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPoint);
    // wxPropertyGrid propGrid
    wxPropertyGrid * propGrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call Finalize
    self->Finalize(propGrid, *pos);

    return 0;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton1[] = { &wxluatype_wxPGMultiButton, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGMultiButton_GetButton1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetButton1[1] = {{ wxLua_wxPGMultiButton_GetButton1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton1 }};
//     const wxWindow* GetButton( unsigned int i ) const;
static int LUACALL wxLua_wxPGMultiButton_GetButton1(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call GetButton
    const wxWindow* returns = (const wxWindow*)self->GetButton(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton[] = { &wxluatype_wxPGMultiButton, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGMultiButton_GetButton(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetButton[1] = {{ wxLua_wxPGMultiButton_GetButton, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton }};
//     wxWindow* GetButton( unsigned int i );
static int LUACALL wxLua_wxPGMultiButton_GetButton(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call GetButton
    wxWindow* returns = (wxWindow*)self->GetButton(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxWindow);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_GetButtonId[] = { &wxluatype_wxPGMultiButton, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGMultiButton_GetButtonId(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetButtonId[1] = {{ wxLua_wxPGMultiButton_GetButtonId, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_GetButtonId }};
//     int GetButtonId( unsigned int i ) const;
static int LUACALL wxLua_wxPGMultiButton_GetButtonId(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call GetButtonId
    int returns = (self->GetButtonId(i));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_GetCount[] = { &wxluatype_wxPGMultiButton, NULL };
static int LUACALL wxLua_wxPGMultiButton_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetCount[1] = {{ wxLua_wxPGMultiButton_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGMultiButton_GetCount }};
//     unsigned int GetCount() const;
static int LUACALL wxLua_wxPGMultiButton_GetCount(lua_State *L)
{
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call GetCount
    unsigned int returns = (self->GetCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_GetPrimarySize[] = { &wxluatype_wxPGMultiButton, NULL };
static int LUACALL wxLua_wxPGMultiButton_GetPrimarySize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetPrimarySize[1] = {{ wxLua_wxPGMultiButton_GetPrimarySize, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGMultiButton_GetPrimarySize }};
//     wxSize GetPrimarySize() const;
static int LUACALL wxLua_wxPGMultiButton_GetPrimarySize(lua_State *L)
{
    // get this
    wxPGMultiButton * self = (wxPGMultiButton *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGMultiButton);
    // call GetPrimarySize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetPrimarySize());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_delete[] = { &wxluatype_wxPGMultiButton, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGMultiButton_delete }};


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGMultiButton_constructor[] = { &wxluatype_wxPropertyGrid, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGMultiButton_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_constructor[1] = {{ wxLua_wxPGMultiButton_constructor, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_constructor }};
//     wxPGMultiButton( wxPropertyGrid* pg, const wxSize& sz );
static int LUACALL wxLua_wxPGMultiButton_constructor(lua_State *L)
{
    // const wxSize sz
    const wxSize * sz = (const wxSize *)wxluaT_getuserdatatype(L, 2, wxluatype_wxSize);
    // wxPropertyGrid pg
    wxPropertyGrid * pg = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGrid);
    // call constructor
    wxPGMultiButton* returns = new wxPGMultiButton(pg, *sz);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGMultiButton);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGMultiButton);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_Add_overload[] =
{

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap)
    { wxLua_wxPGMultiButton_Add1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGMultiButton_Add1 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap)
    { wxLua_wxPGMultiButton_Add, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGMultiButton_Add },
};
static int s_wxluafunc_wxLua_wxPGMultiButton_Add_overload_count = sizeof(s_wxluafunc_wxLua_wxPGMultiButton_Add_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGMultiButton_GetButton_overload[] =
{
    { wxLua_wxPGMultiButton_GetButton1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton1 },
    { wxLua_wxPGMultiButton_GetButton, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGMultiButton_GetButton },
};
static int s_wxluafunc_wxLua_wxPGMultiButton_GetButton_overload_count = sizeof(s_wxluafunc_wxLua_wxPGMultiButton_GetButton_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGMultiButton_delete_function(void** p)
{
    wxPGMultiButton* o = (wxPGMultiButton*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGMultiButton_methods[] = {
#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Add", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_Add_overload, s_wxluafunc_wxLua_wxPGMultiButton_Add_overload_count, 0 },
#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_BMPBUTTON)) && (wxLUA_USE_wxBitmap))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Finalize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_Finalize, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetButton", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_GetButton_overload, s_wxluafunc_wxLua_wxPGMultiButton_GetButton_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetButtonId", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_GetButtonId, 1, NULL },
    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_GetCount, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPrimarySize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGMultiButton_GetPrimarySize, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGMultiButton_delete, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPGMultiButton", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGMultiButton_constructor, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGMultiButton_methodCount = sizeof(wxPGMultiButton_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxColourPropertyValue
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxColourPropertyValue'
int wxluatype_wxColourPropertyValue = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_FromVariant[] = { &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxColourPropertyValue_FromVariant(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_FromVariant[1] = {{ wxLua_wxColourPropertyValue_FromVariant, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_FromVariant }};
// %override wxLua_wxColourPropertyValue_FromVariant
//    static wxColourPropertyValue FromVariant(const wxVariant* pVariant);
static int LUACALL wxLua_wxColourPropertyValue_FromVariant(lua_State *L)
{
    const wxVariant * pVariant = (const wxVariant *)wxluaT_getuserdatatype(L, 1, wxluatype_wxVariant);

    if (!pVariant->IsType("wxColourPropertyValue")) {
        wxlua_error(L, "Variant is not of type 'wxColourPropertyValue'");
        return 0;
    }

    wxColourPropertyValue v;
    v << *pVariant;

    wxColourPropertyValue* returns = new wxColourPropertyValue(v);
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}


#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_Get_m_colour[] = { &wxluatype_wxColourPropertyValue, NULL };
static int LUACALL wxLua_wxColourPropertyValue_Get_m_colour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_colour[1] = {{ wxLua_wxColourPropertyValue_Get_m_colour, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_Get_m_colour }};
//     wxColour    m_colour;
static int LUACALL wxLua_wxColourPropertyValue_Get_m_colour(lua_State *L)
{
    // get this
    wxColourPropertyValue *self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    // push the result datatype
    wxluaT_pushuserdatatype(L, &self->m_colour, wxluatype_wxColour);
    // return the number of values
    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_Get_m_type[] = { &wxluatype_wxColourPropertyValue, NULL };
static int LUACALL wxLua_wxColourPropertyValue_Get_m_type(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_type[1] = {{ wxLua_wxColourPropertyValue_Get_m_type, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_Get_m_type }};
//     wxUint32    m_type;
static int LUACALL wxLua_wxColourPropertyValue_Get_m_type(lua_State *L)
{
    // get this
    wxColourPropertyValue *self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    // push the result integer? number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)(self->m_type) == (double)(self->m_type)) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, self->m_type);
} else
#endif
{
    lua_pushnumber(L, self->m_type);
}
    // return the number of values
    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_Init[] = { &wxluatype_wxColourPropertyValue, &wxluatype_TINTEGER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxColourPropertyValue_Init(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_Init[1] = {{ wxLua_wxColourPropertyValue_Init, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxColourPropertyValue_Init }};
//     void Init( wxUint32 type, const wxColour& colour );
static int LUACALL wxLua_wxColourPropertyValue_Init(lua_State *L)
{
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // wxUint32 type
    wxUint32 type = (wxUint32)wxlua_getuintegertype(L, 2);
    // get this
    wxColourPropertyValue * self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    // call Init
    self->Init(type, *colour);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_Set_m_colour[] = { &wxluatype_wxColourPropertyValue, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxColourPropertyValue_Set_m_colour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_colour[1] = {{ wxLua_wxColourPropertyValue_Set_m_colour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxColourPropertyValue_Set_m_colour }};
//     wxColour    m_colour;
static int LUACALL wxLua_wxColourPropertyValue_Set_m_colour(lua_State *L)
{
    // get the data type value
    wxColour* val = (wxColour*)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxColourPropertyValue *self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    self->m_colour = *val;
    // return the number of values
    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_Set_m_type[] = { &wxluatype_wxColourPropertyValue, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxColourPropertyValue_Set_m_type(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_type[1] = {{ wxLua_wxColourPropertyValue_Set_m_type, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxColourPropertyValue_Set_m_type }};
//     wxUint32    m_type;
static int LUACALL wxLua_wxColourPropertyValue_Set_m_type(lua_State *L)
{
    // get the unsigned integer value
    wxUint32 val = (wxUint32)wxlua_getuintegertype(L, 2);
    // get this
    wxColourPropertyValue *self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    self->m_type = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_delete[] = { &wxluatype_wxColourPropertyValue, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_delete }};


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_op_set[] = { &wxluatype_wxColourPropertyValue, &wxluatype_wxColourPropertyValue, NULL };
static int LUACALL wxLua_wxColourPropertyValue_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_op_set[1] = {{ wxLua_wxColourPropertyValue_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxColourPropertyValue_op_set }};
//     void operator=(const wxColourPropertyValue& cpv);
static int LUACALL wxLua_wxColourPropertyValue_op_set(lua_State *L)
{
    // const wxColourPropertyValue cpv
    const wxColourPropertyValue * cpv = (const wxColourPropertyValue *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColourPropertyValue);
    // get this
    wxColourPropertyValue * self = (wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    // call op_set
    (*self)=(*cpv);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor4[] = { &wxluatype_TINTEGER, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxColourPropertyValue_constructor4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor4[1] = {{ wxLua_wxColourPropertyValue_constructor4, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor4 }};
//     wxColourPropertyValue( wxUint32 type, const wxColour& colour );
static int LUACALL wxLua_wxColourPropertyValue_constructor4(lua_State *L)
{
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // wxUint32 type
    wxUint32 type = (wxUint32)wxlua_getuintegertype(L, 1);
    // call constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue(type, *colour);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor3[] = { &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxColourPropertyValue_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor3[1] = {{ wxLua_wxColourPropertyValue_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor3 }};
//     wxColourPropertyValue( wxUint32 type );
static int LUACALL wxLua_wxColourPropertyValue_constructor3(lua_State *L)
{
    // wxUint32 type
    wxUint32 type = (wxUint32)wxlua_getuintegertype(L, 1);
    // call constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue(type);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor2[] = { &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxColourPropertyValue_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor2[1] = {{ wxLua_wxColourPropertyValue_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor2 }};
//     wxColourPropertyValue( const wxColour& colour );
static int LUACALL wxLua_wxColourPropertyValue_constructor2(lua_State *L)
{
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColour);
    // call constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue(*colour);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor1[] = { &wxluatype_wxColourPropertyValue, NULL };
static int LUACALL wxLua_wxColourPropertyValue_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor1[1] = {{ wxLua_wxColourPropertyValue_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor1 }};
//     wxColourPropertyValue( const wxColourPropertyValue& v );
static int LUACALL wxLua_wxColourPropertyValue_constructor1(lua_State *L)
{
    // const wxColourPropertyValue v
    const wxColourPropertyValue * v = (const wxColourPropertyValue *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourPropertyValue);
    // call constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue(*v);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}

static int LUACALL wxLua_wxColourPropertyValue_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor[1] = {{ wxLua_wxColourPropertyValue_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxColourPropertyValue();
static int LUACALL wxLua_wxColourPropertyValue_constructor(lua_State *L)
{
    // call constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}




#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourPropertyValue_constructor_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxColourPropertyValue_constructor4, WXLUAMETHOD_CONSTRUCTOR, 2, 2, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor4 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxColourPropertyValue_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor3 },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxColourPropertyValue_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor2 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxColourPropertyValue_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxColourPropertyValue_constructor1 },
    { wxLua_wxColourPropertyValue_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxColourPropertyValue_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxColourPropertyValue_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxColourPropertyValue_delete_function(void** p)
{
    wxColourPropertyValue* o = (wxColourPropertyValue*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxColourPropertyValue_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "FromVariant", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxColourPropertyValue_FromVariant, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    // %member    { "Get_m_colour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_colour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    // %member    { "Get_m_type", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_type, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Init", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_Init, 1, NULL },
    // %member    { "Set_m_colour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_colour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    // %member    { "Set_m_type", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_type, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxColourPropertyValue_delete, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "m_colour", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_colour, 1, NULL },
    { "m_colour", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_colour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "m_type", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxColourPropertyValue_Set_m_type, 1, NULL },
    { "m_type", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxColourPropertyValue_Get_m_type, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourPropertyValue_op_set, 1, NULL },

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxColourPropertyValue", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxColourPropertyValue_constructor_overload, s_wxluafunc_wxLua_wxColourPropertyValue_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxColourPropertyValue_methodCount = sizeof(wxColourPropertyValue_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxFontProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFontProperty'
int wxluatype_wxFontProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFontProperty_ChildChanged[] = { &wxluatype_wxFontProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxFontProperty_ChildChanged(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFontProperty_ChildChanged[1] = {{ wxLua_wxFontProperty_ChildChanged, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxFontProperty_ChildChanged }};
//                                     wxVariant& childValue ) const;
static int LUACALL wxLua_wxFontProperty_ChildChanged(lua_State *L)
{
    // wxVariant childValue
    wxVariant * childValue = (wxVariant *)wxluaT_getuserdatatype(L, 4, wxluatype_wxVariant);
    // int childIndex
    int childIndex = (int)wxlua_getnumbertype(L, 3);
    // wxVariant thisValue
    wxVariant * thisValue = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFontProperty * self = (wxFontProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFontProperty);
    // call ChildChanged
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->ChildChanged(*thisValue, childIndex, *childValue));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFontProperty_OnSetValue[] = { &wxluatype_wxFontProperty, NULL };
static int LUACALL wxLua_wxFontProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFontProperty_OnSetValue[1] = {{ wxLua_wxFontProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFontProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxFontProperty_OnSetValue(lua_State *L)
{
    // get this
    wxFontProperty * self = (wxFontProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFontProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFontProperty_RefreshChildren[] = { &wxluatype_wxFontProperty, NULL };
static int LUACALL wxLua_wxFontProperty_RefreshChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFontProperty_RefreshChildren[1] = {{ wxLua_wxFontProperty_RefreshChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFontProperty_RefreshChildren }};
//     virtual void RefreshChildren();
static int LUACALL wxLua_wxFontProperty_RefreshChildren(lua_State *L)
{
    // get this
    wxFontProperty * self = (wxFontProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFontProperty);
    // call RefreshChildren
    self->RefreshChildren();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFontProperty_ValueToString[] = { &wxluatype_wxFontProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFontProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFontProperty_ValueToString[1] = {{ wxLua_wxFontProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxFontProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxFontProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFontProperty * self = (wxFontProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFontProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFontProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxFontProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFontProperty_constructor[1] = {{ wxLua_wxFontProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxFontProperty_constructor }};
//                    const wxFont& value = wxFont());
static int LUACALL wxLua_wxFontProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxFont value = wxFont()
    const wxFont * value = (argCount >= 3 ? (const wxFont *)wxluaT_getuserdatatype(L, 3, wxluatype_wxFont) : &wxFont());
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxFontProperty* returns = new wxFontProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFontProperty);

    return 1;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



void wxLua_wxFontProperty_delete_function(void** p)
{
    wxFontProperty* o = (wxFontProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFontProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ChildChanged", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFontProperty_ChildChanged, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFontProperty_OnSetValue, 1, NULL },
    { "RefreshChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFontProperty_RefreshChildren, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFontProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxFontProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFontProperty_constructor, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxFontProperty_methodCount = sizeof(wxFontProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxSystemColourProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxSystemColourProperty'
int wxluatype_wxSystemColourProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_ColourToString[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxColour, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_ColourToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_ColourToString[1] = {{ wxLua_wxSystemColourProperty_ColourToString, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxSystemColourProperty_ColourToString }};
//                                      int argFlags = 0 ) const;
static int LUACALL wxLua_wxSystemColourProperty_ColourToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call ColourToString
    wxString returns = (self->ColourToString(*col, index, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_DoSetAttribute[] = { &wxluatype_wxSystemColourProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxSystemColourProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_DoSetAttribute[1] = {{ wxLua_wxSystemColourProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxSystemColourProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_GetColour[] = { &wxluatype_wxSystemColourProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_GetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_GetColour[1] = {{ wxLua_wxSystemColourProperty_GetColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxSystemColourProperty_GetColour }};
//     virtual wxColour GetColour( int index ) const;
static int LUACALL wxLua_wxSystemColourProperty_GetColour(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call GetColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetColour(index));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_GetCustomColourIndex[] = { &wxluatype_wxSystemColourProperty, NULL };
static int LUACALL wxLua_wxSystemColourProperty_GetCustomColourIndex(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_GetCustomColourIndex[1] = {{ wxLua_wxSystemColourProperty_GetCustomColourIndex, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxSystemColourProperty_GetCustomColourIndex }};
//     virtual int GetCustomColourIndex() const;
static int LUACALL wxLua_wxSystemColourProperty_GetCustomColourIndex(lua_State *L)
{
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call GetCustomColourIndex
    int returns = (self->GetCustomColourIndex());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_GetVal[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxSystemColourProperty_GetVal(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_GetVal[1] = {{ wxLua_wxSystemColourProperty_GetVal, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxSystemColourProperty_GetVal }};
//     wxColourPropertyValue GetVal( const wxVariant* pVariant = NULL ) const;
static int LUACALL wxLua_wxSystemColourProperty_GetVal(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxVariant pVariant = NULL
    const wxVariant * pVariant = (argCount >= 2 ? (const wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant) : NULL);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call GetVal
    // allocate a new object using the copy constructor
    wxColourPropertyValue* returns = new wxColourPropertyValue(self->GetVal(pVariant));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColourPropertyValue);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourPropertyValue);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_IntToValue[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_IntToValue[1] = {{ wxLua_wxSystemColourProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxSystemColourProperty_IntToValue }};
//                             int argFlags = 0) const;
static int LUACALL wxLua_wxSystemColourProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_OnCustomPaint[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxSystemColourProperty_OnCustomPaint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_OnCustomPaint[1] = {{ wxLua_wxSystemColourProperty_OnCustomPaint, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxSystemColourProperty_OnCustomPaint }};
//     virtual void OnCustomPaint( wxDC& dc, const wxRect& rect, wxPGPaintData& paintdata );
static int LUACALL wxLua_wxSystemColourProperty_OnCustomPaint(lua_State *L)
{
    // wxPGPaintData paintdata
    wxPGPaintData * paintdata = (wxPGPaintData *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGPaintData);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call OnCustomPaint
    self->OnCustomPaint(*dc, *rect, *paintdata);

    return 0;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_OnEvent[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxPropertyGrid, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxSystemColourProperty_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_OnEvent[1] = {{ wxLua_wxSystemColourProperty_OnEvent, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxSystemColourProperty_OnEvent }};
//                           wxWindow* primary, wxEvent& event );
static int LUACALL wxLua_wxSystemColourProperty_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 4, wxluatype_wxEvent);
    // wxWindow primary
    wxWindow * primary = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, primary, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_OnMeasureImage[] = { &wxluatype_wxSystemColourProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_OnMeasureImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_OnMeasureImage[1] = {{ wxLua_wxSystemColourProperty_OnMeasureImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxSystemColourProperty_OnMeasureImage }};
//     virtual wxSize OnMeasureImage( int item ) const;
static int LUACALL wxLua_wxSystemColourProperty_OnMeasureImage(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call OnMeasureImage
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->OnMeasureImage(item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_OnSetValue[] = { &wxluatype_wxSystemColourProperty, NULL };
static int LUACALL wxLua_wxSystemColourProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_OnSetValue[1] = {{ wxLua_wxSystemColourProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxSystemColourProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxSystemColourProperty_OnSetValue(lua_State *L)
{
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_QueryColourFromUser[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxSystemColourProperty_QueryColourFromUser(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_QueryColourFromUser[1] = {{ wxLua_wxSystemColourProperty_QueryColourFromUser, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxSystemColourProperty_QueryColourFromUser }};
//     bool QueryColourFromUser( wxVariant& variant ) const;
static int LUACALL wxLua_wxSystemColourProperty_QueryColourFromUser(lua_State *L)
{
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call QueryColourFromUser
    bool returns = (self->QueryColourFromUser(*variant));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_StringToValue[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_StringToValue[1] = {{ wxLua_wxSystemColourProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxSystemColourProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxSystemColourProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_ValueToString[] = { &wxluatype_wxSystemColourProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxSystemColourProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_ValueToString[1] = {{ wxLua_wxSystemColourProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxSystemColourProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxSystemColourProperty * self = (wxSystemColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxSystemColourProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxSystemColourProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_constructor1[1] = {{ wxLua_wxSystemColourProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor1 }};
//                             const wxColour& value = wxNullColour );
static int LUACALL wxLua_wxSystemColourProperty_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour value = wxNullColour
    const wxColour * value = (argCount >= 3 ? (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour) : &wxNullColour);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxSystemColourProperty* returns = new wxSystemColourProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSystemColourProperty);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxColourPropertyValue, NULL };
static int LUACALL wxLua_wxSystemColourProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_constructor[1] = {{ wxLua_wxSystemColourProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor }};
//                             const wxColourPropertyValue& value = wxColourPropertyValue() );
static int LUACALL wxLua_wxSystemColourProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColourPropertyValue value = wxColourPropertyValue()
    const wxColourPropertyValue * value = (argCount >= 3 ? (const wxColourPropertyValue *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColourPropertyValue) : &wxColourPropertyValue());
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxSystemColourProperty* returns = new wxSystemColourProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSystemColourProperty);

    return 1;
}




#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxSystemColourProperty_constructor_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxSystemColourProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxSystemColourProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxSystemColourProperty_constructor },
};
static int s_wxluafunc_wxLua_wxSystemColourProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxSystemColourProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxSystemColourProperty_delete_function(void** p)
{
    wxSystemColourProperty* o = (wxSystemColourProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxSystemColourProperty_methods[] = {
#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "ColourToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_ColourToString, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_GetColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetCustomColourIndex", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_GetCustomColourIndex, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetVal", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_GetVal, 1, NULL },
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_IntToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnCustomPaint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_OnCustomPaint, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_OnEvent, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnMeasureImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_OnMeasureImage, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "QueryColourFromUser", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_QueryColourFromUser, 1, NULL },
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxSystemColourProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxSystemColourProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxSystemColourProperty_constructor_overload, s_wxluafunc_wxLua_wxSystemColourProperty_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxSystemColourProperty_methodCount = sizeof(wxSystemColourProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxColourProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxColourProperty'
int wxluatype_wxColourProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourProperty_GetColour[] = { &wxluatype_wxColourProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxColourProperty_GetColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourProperty_GetColour[1] = {{ wxLua_wxColourProperty_GetColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxColourProperty_GetColour }};
//     virtual wxColour GetColour( int index ) const;
static int LUACALL wxLua_wxColourProperty_GetColour(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxColourProperty * self = (wxColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourProperty);
    // call GetColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetColour(index));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourProperty_ValueToString[] = { &wxluatype_wxColourProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxColourProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourProperty_ValueToString[1] = {{ wxLua_wxColourProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxColourProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxColourProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxColourProperty * self = (wxColourProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxColourProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxColourProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxColourProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxColourProperty_constructor[1] = {{ wxLua_wxColourProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxColourProperty_constructor }};
//                       const wxColour& value = wxNullColour );
static int LUACALL wxLua_wxColourProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour value = wxNullColour
    const wxColour * value = (argCount >= 3 ? (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour) : &wxNullColour);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxColourProperty* returns = new wxColourProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColourProperty);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



void wxLua_wxColourProperty_delete_function(void** p)
{
    wxColourProperty* o = (wxColourProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxColourProperty_methods[] = {
#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourProperty_GetColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxColourProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxColourProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxColourProperty_constructor, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxColourProperty_methodCount = sizeof(wxColourProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxCursorProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxCursorProperty'
int wxluatype_wxCursorProperty = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxCursorProperty_OnCustomPaint[] = { &wxluatype_wxCursorProperty, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxCursorProperty_OnCustomPaint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCursorProperty_OnCustomPaint[1] = {{ wxLua_wxCursorProperty_OnCustomPaint, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxCursorProperty_OnCustomPaint }};
//                                 const wxRect& rect, wxPGPaintData& paintdata );
static int LUACALL wxLua_wxCursorProperty_OnCustomPaint(lua_State *L)
{
    // wxPGPaintData paintdata
    wxPGPaintData * paintdata = (wxPGPaintData *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGPaintData);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxCursorProperty * self = (wxCursorProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCursorProperty);
    // call OnCustomPaint
    self->OnCustomPaint(*dc, *rect, *paintdata);

    return 0;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxCursorProperty_OnMeasureImage[] = { &wxluatype_wxCursorProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxCursorProperty_OnMeasureImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCursorProperty_OnMeasureImage[1] = {{ wxLua_wxCursorProperty_OnMeasureImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxCursorProperty_OnMeasureImage }};
//     virtual wxSize OnMeasureImage( int item ) const;
static int LUACALL wxLua_wxCursorProperty_OnMeasureImage(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxCursorProperty * self = (wxCursorProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxCursorProperty);
    // call OnMeasureImage
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->OnMeasureImage(item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxCursorProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxCursorProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxCursorProperty_constructor[1] = {{ wxLua_wxCursorProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxCursorProperty_constructor }};
//                       int value = 0 );
static int LUACALL wxLua_wxCursorProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = 0
    int value = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxCursorProperty* returns = new wxCursorProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxCursorProperty);

    return 1;
}




void wxLua_wxCursorProperty_delete_function(void** p)
{
    wxCursorProperty* o = (wxCursorProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxCursorProperty_methods[] = {
#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnCustomPaint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCursorProperty_OnCustomPaint, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnMeasureImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxCursorProperty_OnMeasureImage, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "wxCursorProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxCursorProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxCursorProperty_methodCount = sizeof(wxCursorProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxImageFileProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxImageFileProperty'
int wxluatype_wxImageFileProperty = WXLUA_TUNKNOWN;

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxImageFileProperty_OnCustomPaint[] = { &wxluatype_wxImageFileProperty, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxImageFileProperty_OnCustomPaint(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxImageFileProperty_OnCustomPaint[1] = {{ wxLua_wxImageFileProperty_OnCustomPaint, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxImageFileProperty_OnCustomPaint }};
//                                 const wxRect& rect, wxPGPaintData& paintdata );
static int LUACALL wxLua_wxImageFileProperty_OnCustomPaint(lua_State *L)
{
    // wxPGPaintData paintdata
    wxPGPaintData * paintdata = (wxPGPaintData *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGPaintData);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxImageFileProperty * self = (wxImageFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxImageFileProperty);
    // call OnCustomPaint
    self->OnCustomPaint(*dc, *rect, *paintdata);

    return 0;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxImageFileProperty_OnMeasureImage[] = { &wxluatype_wxImageFileProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxImageFileProperty_OnMeasureImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxImageFileProperty_OnMeasureImage[1] = {{ wxLua_wxImageFileProperty_OnMeasureImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxImageFileProperty_OnMeasureImage }};
//     virtual wxSize OnMeasureImage( int item ) const;
static int LUACALL wxLua_wxImageFileProperty_OnMeasureImage(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxImageFileProperty * self = (wxImageFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxImageFileProperty);
    // call OnMeasureImage
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->OnMeasureImage(item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxImageFileProperty_OnSetValue[] = { &wxluatype_wxImageFileProperty, NULL };
static int LUACALL wxLua_wxImageFileProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxImageFileProperty_OnSetValue[1] = {{ wxLua_wxImageFileProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxImageFileProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxImageFileProperty_OnSetValue(lua_State *L)
{
    // get this
    wxImageFileProperty * self = (wxImageFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxImageFileProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxImageFileProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxImageFileProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxImageFileProperty_constructor[1] = {{ wxLua_wxImageFileProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxImageFileProperty_constructor }};
//                          const wxString& value = wxEmptyString);
static int LUACALL wxLua_wxImageFileProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxImageFileProperty* returns = new wxImageFileProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxImageFileProperty);

    return 1;
}




void wxLua_wxImageFileProperty_delete_function(void** p)
{
    wxImageFileProperty* o = (wxImageFileProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxImageFileProperty_methods[] = {
#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnCustomPaint", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxImageFileProperty_OnCustomPaint, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnMeasureImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxImageFileProperty_OnMeasureImage, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxImageFileProperty_OnSetValue, 1, NULL },
    { "wxImageFileProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxImageFileProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxImageFileProperty_methodCount = sizeof(wxImageFileProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxMultiChoiceProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxMultiChoiceProperty'
int wxluatype_wxMultiChoiceProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_GetValueAsArrayInt[] = { &wxluatype_wxMultiChoiceProperty, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_GetValueAsArrayInt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_GetValueAsArrayInt[1] = {{ wxLua_wxMultiChoiceProperty_GetValueAsArrayInt, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_GetValueAsArrayInt }};
//     wxArrayInt GetValueAsArrayInt() const;
static int LUACALL wxLua_wxMultiChoiceProperty_GetValueAsArrayInt(lua_State *L)
{
    // get this
    wxMultiChoiceProperty * self = (wxMultiChoiceProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMultiChoiceProperty);
    // call GetValueAsArrayInt
    // allocate a new object using the copy constructor
    wxArrayInt* returns = new wxArrayInt(self->GetValueAsArrayInt());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayInt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayInt);

    return 1;
}

#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_OnSetValue[] = { &wxluatype_wxMultiChoiceProperty, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_OnSetValue[1] = {{ wxLua_wxMultiChoiceProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxMultiChoiceProperty_OnSetValue(lua_State *L)
{
    // get this
    wxMultiChoiceProperty * self = (wxMultiChoiceProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMultiChoiceProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_StringToValue[] = { &wxluatype_wxMultiChoiceProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_StringToValue[1] = {{ wxLua_wxMultiChoiceProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_StringToValue }};
//                                int argFlags = 0) const;
static int LUACALL wxLua_wxMultiChoiceProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxMultiChoiceProperty * self = (wxMultiChoiceProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMultiChoiceProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_ValueToString[] = { &wxluatype_wxMultiChoiceProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_ValueToString[1] = {{ wxLua_wxMultiChoiceProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxMultiChoiceProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxMultiChoiceProperty * self = (wxMultiChoiceProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxMultiChoiceProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor2[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor2[1] = {{ wxLua_wxMultiChoiceProperty_constructor2, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor2 }};
//                            const wxArrayString& value = wxLuaNullSmartwxArrayString );
static int LUACALL wxLua_wxMultiChoiceProperty_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxArrayString value = wxLuaNullSmartwxArrayString
    wxLuaSmartwxArrayString value = (argCount >= 3 ? wxlua_getwxArrayString(L, 3) : wxLuaNullSmartwxArrayString);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxMultiChoiceProperty* returns = new wxMultiChoiceProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMultiChoiceProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxPGChoices, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor1[1] = {{ wxLua_wxMultiChoiceProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor1 }};
//                            const wxArrayString& value = wxLuaNullSmartwxArrayString );
static int LUACALL wxLua_wxMultiChoiceProperty_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxArrayString value = wxLuaNullSmartwxArrayString
    wxLuaSmartwxArrayString value = (argCount >= 4 ? wxlua_getwxArrayString(L, 4) : wxLuaNullSmartwxArrayString);
    // const wxPGChoices choices
    const wxPGChoices * choices = (const wxPGChoices *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGChoices);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxMultiChoiceProperty* returns = new wxMultiChoiceProperty(label, name, *choices, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMultiChoiceProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxMultiChoiceProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor[1] = {{ wxLua_wxMultiChoiceProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 4, 4, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor }};
//                            const wxArrayString& value );
static int LUACALL wxLua_wxMultiChoiceProperty_constructor(lua_State *L)
{
    // const wxArrayString value
    wxLuaSmartwxArrayString value = wxlua_getwxArrayString(L, 4);
    // const wxArrayString strings
    wxLuaSmartwxArrayString strings = wxlua_getwxArrayString(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxMultiChoiceProperty* returns = new wxMultiChoiceProperty(label, name, strings, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxMultiChoiceProperty);

    return 1;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



#if ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor_overload[] =
{

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxMultiChoiceProperty_constructor2, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor2 },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxMultiChoiceProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor1 },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxMultiChoiceProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 4, 4, s_wxluatypeArray_wxLua_wxMultiChoiceProperty_constructor },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

void wxLua_wxMultiChoiceProperty_delete_function(void** p)
{
    wxMultiChoiceProperty* o = (wxMultiChoiceProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxMultiChoiceProperty_methods[] = {
#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetValueAsArrayInt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMultiChoiceProperty_GetValueAsArrayInt, 1, NULL },
#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMultiChoiceProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMultiChoiceProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxMultiChoiceProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "wxMultiChoiceProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor_overload, s_wxluafunc_wxLua_wxMultiChoiceProperty_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

    { 0, 0, 0, 0 },
};

int wxMultiChoiceProperty_methodCount = sizeof(wxMultiChoiceProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxDateProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDateProperty'
int wxluatype_wxDateProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_DoSetAttribute[] = { &wxluatype_wxDateProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxDateProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_DoSetAttribute[1] = {{ wxLua_wxDateProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxDateProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxDateProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_GetDatePickerStyle[] = { &wxluatype_wxDateProperty, NULL };
static int LUACALL wxLua_wxDateProperty_GetDatePickerStyle(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_GetDatePickerStyle[1] = {{ wxLua_wxDateProperty_GetDatePickerStyle, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDateProperty_GetDatePickerStyle }};
//     long GetDatePickerStyle() const;
static int LUACALL wxLua_wxDateProperty_GetDatePickerStyle(lua_State *L)
{
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call GetDatePickerStyle
    long returns = (self->GetDatePickerStyle());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_GetDateValue[] = { &wxluatype_wxDateProperty, NULL };
static int LUACALL wxLua_wxDateProperty_GetDateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_GetDateValue[1] = {{ wxLua_wxDateProperty_GetDateValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDateProperty_GetDateValue }};
//     wxDateTime GetDateValue() const;
static int LUACALL wxLua_wxDateProperty_GetDateValue(lua_State *L)
{
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call GetDateValue
    // allocate a new object using the copy constructor
    wxDateTime* returns = new wxDateTime(self->GetDateValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxDateTime);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDateTime);

    return 1;
}

#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_GetFormat[] = { &wxluatype_wxDateProperty, NULL };
static int LUACALL wxLua_wxDateProperty_GetFormat(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_GetFormat[1] = {{ wxLua_wxDateProperty_GetFormat, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDateProperty_GetFormat }};
//     const wxString& GetFormat() const;
static int LUACALL wxLua_wxDateProperty_GetFormat(lua_State *L)
{
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call GetFormat
    wxString returns = (self->GetFormat());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_OnSetValue[] = { &wxluatype_wxDateProperty, NULL };
static int LUACALL wxLua_wxDateProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_OnSetValue[1] = {{ wxLua_wxDateProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDateProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxDateProperty_OnSetValue(lua_State *L)
{
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_SetDateValue[] = { &wxluatype_wxDateProperty, &wxluatype_wxDateTime, NULL };
static int LUACALL wxLua_wxDateProperty_SetDateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_SetDateValue[1] = {{ wxLua_wxDateProperty_SetDateValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDateProperty_SetDateValue }};
//     void SetDateValue( const wxDateTime& dt );
static int LUACALL wxLua_wxDateProperty_SetDateValue(lua_State *L)
{
    // const wxDateTime dt
    const wxDateTime * dt = (const wxDateTime *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDateTime);
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call SetDateValue
    self->SetDateValue(*dt);

    return 0;
}

#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_SetFormat[] = { &wxluatype_wxDateProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDateProperty_SetFormat(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_SetFormat[1] = {{ wxLua_wxDateProperty_SetFormat, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxDateProperty_SetFormat }};
//     void SetFormat( const wxString& format );
static int LUACALL wxLua_wxDateProperty_SetFormat(lua_State *L)
{
    // const wxString format
    const wxString format = wxlua_getwxStringtype(L, 2);
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call SetFormat
    self->SetFormat(format);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_StringToValue[] = { &wxluatype_wxDateProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDateProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_StringToValue[1] = {{ wxLua_wxDateProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxDateProperty_StringToValue }};
//                                int argFlags = 0) const;
static int LUACALL wxLua_wxDateProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_ValueToString[] = { &wxluatype_wxDateProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDateProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_ValueToString[1] = {{ wxLua_wxDateProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxDateProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxDateProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxDateProperty * self = (wxDateProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDateProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDateProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxDateTime, NULL };
static int LUACALL wxLua_wxDateProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDateProperty_constructor[1] = {{ wxLua_wxDateProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxDateProperty_constructor }};
//                     const wxDateTime& value = wxDateTime() );
static int LUACALL wxLua_wxDateProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxDateTime value = wxDateTime()
    const wxDateTime * value = (argCount >= 3 ? (const wxDateTime *)wxluaT_getuserdatatype(L, 3, wxluatype_wxDateTime) : &wxDateTime());
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxDateProperty* returns = new wxDateProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDateProperty);

    return 1;
}

#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



void wxLua_wxDateProperty_delete_function(void** p)
{
    wxDateProperty* o = (wxDateProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDateProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetDatePickerStyle", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_GetDatePickerStyle, 1, NULL },

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetDateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_GetDateValue, 1, NULL },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetFormat", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_GetFormat, 1, NULL },
    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetDateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_SetDateValue, 1, NULL },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetFormat", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_SetFormat, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDateProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxDateProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDateProperty_constructor, 1, NULL },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxDateProperty_methodCount = sizeof(wxDateProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)
// ---------------------------------------------------------------------------
// Bind class wxPGSpinCtrlEditor
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGSpinCtrlEditor'
int wxluatype_wxPGSpinCtrlEditor = WXLUA_TUNKNOWN;

#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_CreateControls[] = { &wxluatype_wxPGSpinCtrlEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGSpinCtrlEditor_CreateControls(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGSpinCtrlEditor_CreateControls[1] = {{ wxLua_wxPGSpinCtrlEditor_CreateControls, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_CreateControls }};
//                                           const wxSize& size) const;
static int LUACALL wxLua_wxPGSpinCtrlEditor_CreateControls(lua_State *L)
{
    // const wxSize size
    const wxSize * size = (const wxSize *)wxluaT_getuserdatatype(L, 5, wxluatype_wxSize);
    // const wxPoint pos
    const wxPoint * pos = (const wxPoint *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPoint);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGSpinCtrlEditor * self = (wxPGSpinCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGSpinCtrlEditor);
    // call CreateControls
    // allocate a new object using the copy constructor
    wxPGWindowList* returns = new wxPGWindowList(self->CreateControls(propgrid, property, *pos, *size));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGWindowList);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGWindowList);

    return 1;
}

#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_GetName[] = { &wxluatype_wxPGSpinCtrlEditor, NULL };
static int LUACALL wxLua_wxPGSpinCtrlEditor_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGSpinCtrlEditor_GetName[1] = {{ wxLua_wxPGSpinCtrlEditor_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_GetName }};
//     wxString GetName() const;
static int LUACALL wxLua_wxPGSpinCtrlEditor_GetName(lua_State *L)
{
    // get this
    wxPGSpinCtrlEditor * self = (wxPGSpinCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGSpinCtrlEditor);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_OnEvent[] = { &wxluatype_wxPGSpinCtrlEditor, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGSpinCtrlEditor_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGSpinCtrlEditor_OnEvent[1] = {{ wxLua_wxPGSpinCtrlEditor_OnEvent, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGSpinCtrlEditor_OnEvent }};
//         wxWindow* wnd, wxEvent& event ) const;
static int LUACALL wxLua_wxPGSpinCtrlEditor_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 5, wxluatype_wxEvent);
    // wxWindow wnd
    wxWindow * wnd = (wxWindow *)wxluaT_getuserdatatype(L, 4, wxluatype_wxWindow);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGSpinCtrlEditor * self = (wxPGSpinCtrlEditor *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGSpinCtrlEditor);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, property, wnd, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



void wxLua_wxPGSpinCtrlEditor_delete_function(void** p)
{
    wxPGSpinCtrlEditor* o = (wxPGSpinCtrlEditor*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGSpinCtrlEditor_methods[] = {
#if (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "CreateControls", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGSpinCtrlEditor_CreateControls, 1, NULL },
#endif // (((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGSpinCtrlEditor_GetName, 1, NULL },

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGSpinCtrlEditor_OnEvent, 1, NULL },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGSpinCtrlEditor_methodCount = sizeof(wxPGSpinCtrlEditor_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxStringProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxStringProperty'
int wxluatype_wxStringProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_DoSetAttribute[] = { &wxluatype_wxStringProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxStringProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_DoSetAttribute[1] = {{ wxLua_wxStringProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxStringProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxStringProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxStringProperty * self = (wxStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStringProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_OnSetValue[] = { &wxluatype_wxStringProperty, NULL };
static int LUACALL wxLua_wxStringProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_OnSetValue[1] = {{ wxLua_wxStringProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxStringProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxStringProperty_OnSetValue(lua_State *L)
{
    // get this
    wxStringProperty * self = (wxStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStringProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_StringToValue[] = { &wxluatype_wxStringProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStringProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_StringToValue[1] = {{ wxLua_wxStringProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxStringProperty_StringToValue }};
//     virtual bool StringToValue( wxVariant& variant, const wxString& text, int argFlags = 0 ) const;
static int LUACALL wxLua_wxStringProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxStringProperty * self = (wxStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStringProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_ValueToString[] = { &wxluatype_wxStringProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxStringProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_ValueToString[1] = {{ wxLua_wxStringProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxStringProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxStringProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxStringProperty * self = (wxStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxStringProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_delete[] = { &wxluatype_wxStringProperty, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxStringProperty_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxStringProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxStringProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxStringProperty_constructor[1] = {{ wxLua_wxStringProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxStringProperty_constructor }};
//                       const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxStringProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxStringProperty* returns = new wxStringProperty(label, name, value);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxStringProperty);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxStringProperty);

    return 1;
}




void wxLua_wxStringProperty_delete_function(void** p)
{
    wxStringProperty* o = (wxStringProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxStringProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStringProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStringProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStringProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxStringProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxStringProperty_delete, 1, NULL },
    { "wxStringProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxStringProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxStringProperty_methodCount = sizeof(wxStringProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxNumericPropertyValidator
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxNumericPropertyValidator'
int wxluatype_wxNumericPropertyValidator = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxNumericPropertyValidator_Validate[] = { &wxluatype_wxNumericPropertyValidator, &wxluatype_wxWindow, NULL };
static int LUACALL wxLua_wxNumericPropertyValidator_Validate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxNumericPropertyValidator_Validate[1] = {{ wxLua_wxNumericPropertyValidator_Validate, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxNumericPropertyValidator_Validate }};
//     virtual bool Validate(wxWindow* parent);
static int LUACALL wxLua_wxNumericPropertyValidator_Validate(lua_State *L)
{
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxNumericPropertyValidator * self = (wxNumericPropertyValidator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxNumericPropertyValidator);
    // call Validate
    bool returns = (self->Validate(parent));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxNumericPropertyValidator_constructor[] = { &wxluatype_TINTEGER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxNumericPropertyValidator_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxNumericPropertyValidator_constructor[1] = {{ wxLua_wxNumericPropertyValidator_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxNumericPropertyValidator_constructor }};
//     wxNumericPropertyValidator( wxNumericPropertyValidator::NumericType numericType, int base = 10 );
static int LUACALL wxLua_wxNumericPropertyValidator_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int base = 10
    int base = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 10);
    // wxNumericPropertyValidator::NumericType numericType
    wxNumericPropertyValidator::NumericType numericType = (wxNumericPropertyValidator::NumericType)wxlua_getenumtype(L, 1);
    // call constructor
    wxNumericPropertyValidator* returns = new wxNumericPropertyValidator(numericType, base);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxNumericPropertyValidator);

    return 1;
}




void wxLua_wxNumericPropertyValidator_delete_function(void** p)
{
    wxNumericPropertyValidator* o = (wxNumericPropertyValidator*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxNumericPropertyValidator_methods[] = {
    { "Validate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxNumericPropertyValidator_Validate, 1, NULL },
    { "wxNumericPropertyValidator", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxNumericPropertyValidator_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxNumericPropertyValidator_methodCount = sizeof(wxNumericPropertyValidator_methods)/sizeof(wxLuaBindMethod) - 1;

wxLuaBindNumber wxNumericPropertyValidator_enums[] = {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "Float", wxNumericPropertyValidator::Float },
        { "Signed", wxNumericPropertyValidator::Signed },
        { "Unsigned", wxNumericPropertyValidator::Unsigned },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

    { NULL, 0, },
};
int wxNumericPropertyValidator_enumCount = sizeof(wxNumericPropertyValidator_enums)/sizeof(wxLuaBindNumber) - 1;
#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxNumericProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxNumericProperty'
int wxluatype_wxNumericProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxNumericProperty_AddSpinStepValue[] = { &wxluatype_wxNumericProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxNumericProperty_AddSpinStepValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxNumericProperty_AddSpinStepValue[1] = {{ wxLua_wxNumericProperty_AddSpinStepValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxNumericProperty_AddSpinStepValue }};
//     virtual wxVariant AddSpinStepValue(long stepScale) const;
static int LUACALL wxLua_wxNumericProperty_AddSpinStepValue(lua_State *L)
{
    // long stepScale
    long stepScale = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxNumericProperty * self = (wxNumericProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxNumericProperty);
    // call AddSpinStepValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->AddSpinStepValue(stepScale));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxNumericProperty_DoSetAttribute[] = { &wxluatype_wxNumericProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxNumericProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxNumericProperty_DoSetAttribute[1] = {{ wxLua_wxNumericProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxNumericProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute(const wxString& name, wxVariant& value);
static int LUACALL wxLua_wxNumericProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxNumericProperty * self = (wxNumericProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxNumericProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxNumericProperty_UseSpinMotion[] = { &wxluatype_wxNumericProperty, NULL };
static int LUACALL wxLua_wxNumericProperty_UseSpinMotion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxNumericProperty_UseSpinMotion[1] = {{ wxLua_wxNumericProperty_UseSpinMotion, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxNumericProperty_UseSpinMotion }};
//     bool UseSpinMotion() const;
static int LUACALL wxLua_wxNumericProperty_UseSpinMotion(lua_State *L)
{
    // get this
    wxNumericProperty * self = (wxNumericProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxNumericProperty);
    // call UseSpinMotion
    bool returns = (self->UseSpinMotion());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}




void wxLua_wxNumericProperty_delete_function(void** p)
{
    wxNumericProperty* o = (wxNumericProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxNumericProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AddSpinStepValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxNumericProperty_AddSpinStepValue, 1, NULL },
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxNumericProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "UseSpinMotion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxNumericProperty_UseSpinMotion, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxNumericProperty_methodCount = sizeof(wxNumericProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxIntProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxIntProperty'
int wxluatype_wxIntProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_AddSpinStepValue[] = { &wxluatype_wxIntProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxIntProperty_AddSpinStepValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_AddSpinStepValue[1] = {{ wxLua_wxIntProperty_AddSpinStepValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxIntProperty_AddSpinStepValue }};
//     virtual wxVariant AddSpinStepValue(long stepScale) const;
static int LUACALL wxLua_wxIntProperty_AddSpinStepValue(lua_State *L)
{
    // long stepScale
    long stepScale = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call AddSpinStepValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->AddSpinStepValue(stepScale));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_DoGetValidator[] = { &wxluatype_wxIntProperty, NULL };
static int LUACALL wxLua_wxIntProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_DoGetValidator[1] = {{ wxLua_wxIntProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxIntProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator() const;
static int LUACALL wxLua_wxIntProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

static int LUACALL wxLua_wxIntProperty_GetClassValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_GetClassValidator[1] = {{ wxLua_wxIntProperty_GetClassValidator, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxValidator* GetClassValidator();
static int LUACALL wxLua_wxIntProperty_GetClassValidator(lua_State *L)
{
    // call GetClassValidator
    wxValidator* returns = (wxValidator*)wxIntProperty::GetClassValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_IntToValue[] = { &wxluatype_wxIntProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxIntProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_IntToValue[1] = {{ wxLua_wxIntProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxIntProperty_IntToValue }};
//                              int argFlags = 0 ) const;
static int LUACALL wxLua_wxIntProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_StringToValue[] = { &wxluatype_wxIntProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxIntProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_StringToValue[1] = {{ wxLua_wxIntProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxIntProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxIntProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_ValidateValue[] = { &wxluatype_wxIntProperty, &wxluatype_wxVariant, &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxIntProperty_ValidateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_ValidateValue[1] = {{ wxLua_wxIntProperty_ValidateValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxIntProperty_ValidateValue }};
//                                 wxPGValidationInfo& validationInfo ) const;
static int LUACALL wxLua_wxIntProperty_ValidateValue(lua_State *L)
{
    // wxPGValidationInfo validationInfo
    wxPGValidationInfo * validationInfo = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGValidationInfo);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call ValidateValue
    bool returns = (self->ValidateValue(*value, *validationInfo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_ValueToString[] = { &wxluatype_wxIntProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxIntProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_ValueToString[1] = {{ wxLua_wxIntProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxIntProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxIntProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxIntProperty * self = (wxIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxIntProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxLongLong, NULL };
static int LUACALL wxLua_wxIntProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_constructor1[1] = {{ wxLua_wxIntProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxIntProperty_constructor1 }};
//                    const wxLongLong& value );
static int LUACALL wxLua_wxIntProperty_constructor1(lua_State *L)
{
    // const wxLongLong value
    const wxLongLong * value = (const wxLongLong *)wxluaT_getuserdatatype(L, 3, wxluatype_wxLongLong);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxIntProperty* returns = new wxIntProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxIntProperty);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

static wxLuaArgType s_wxluatypeArray_wxLua_wxIntProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxIntProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_constructor[1] = {{ wxLua_wxIntProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxIntProperty_constructor }};
//                    long value = 0 );
static int LUACALL wxLua_wxIntProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long value = 0
    long value = (argCount >= 3 ? (long)wxlua_getnumbertype(L, 3) : 0);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxIntProperty* returns = new wxIntProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxIntProperty);

    return 1;
}




#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxIntProperty_constructor_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxIntProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxIntProperty_constructor1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxIntProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxIntProperty_constructor },
};
static int s_wxluafunc_wxLua_wxIntProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxIntProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxIntProperty_delete_function(void** p)
{
    wxIntProperty* o = (wxIntProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxIntProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AddSpinStepValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_AddSpinStepValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_DoGetValidator, 1, NULL },
    { "GetClassValidator", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxIntProperty_GetClassValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_IntToValue, 1, NULL },
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_StringToValue, 1, NULL },
    { "ValidateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_ValidateValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxIntProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxIntProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxIntProperty_constructor_overload, s_wxluafunc_wxLua_wxIntProperty_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxIntProperty_methodCount = sizeof(wxIntProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxUIntProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxUIntProperty'
int wxluatype_wxUIntProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_AddSpinStepValue[] = { &wxluatype_wxUIntProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxUIntProperty_AddSpinStepValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_AddSpinStepValue[1] = {{ wxLua_wxUIntProperty_AddSpinStepValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxUIntProperty_AddSpinStepValue }};
//     virtual wxVariant AddSpinStepValue(long stepScale) const;
static int LUACALL wxLua_wxUIntProperty_AddSpinStepValue(lua_State *L)
{
    // long stepScale
    long stepScale = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call AddSpinStepValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->AddSpinStepValue(stepScale));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_DoGetValidator[] = { &wxluatype_wxUIntProperty, NULL };
static int LUACALL wxLua_wxUIntProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_DoGetValidator[1] = {{ wxLua_wxUIntProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxUIntProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator () const;
static int LUACALL wxLua_wxUIntProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_DoSetAttribute[] = { &wxluatype_wxUIntProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxUIntProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_DoSetAttribute[1] = {{ wxLua_wxUIntProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxUIntProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxUIntProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_IntToValue[] = { &wxluatype_wxUIntProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxUIntProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_IntToValue[1] = {{ wxLua_wxUIntProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxUIntProperty_IntToValue }};
//                              int argFlags = 0 ) const;
static int LUACALL wxLua_wxUIntProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_StringToValue[] = { &wxluatype_wxUIntProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxUIntProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_StringToValue[1] = {{ wxLua_wxUIntProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxUIntProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxUIntProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_ValidateValue[] = { &wxluatype_wxUIntProperty, &wxluatype_wxVariant, &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxUIntProperty_ValidateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_ValidateValue[1] = {{ wxLua_wxUIntProperty_ValidateValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxUIntProperty_ValidateValue }};
//                                 wxPGValidationInfo& validationInfo ) const;
static int LUACALL wxLua_wxUIntProperty_ValidateValue(lua_State *L)
{
    // wxPGValidationInfo validationInfo
    wxPGValidationInfo * validationInfo = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGValidationInfo);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call ValidateValue
    bool returns = (self->ValidateValue(*value, *validationInfo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_ValueToString[] = { &wxluatype_wxUIntProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxUIntProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_ValueToString[1] = {{ wxLua_wxUIntProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxUIntProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxUIntProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxUIntProperty * self = (wxUIntProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxUIntProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxULongLong, NULL };
static int LUACALL wxLua_wxUIntProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_constructor1[1] = {{ wxLua_wxUIntProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxUIntProperty_constructor1 }};
//                     const wxULongLong& value );
static int LUACALL wxLua_wxUIntProperty_constructor1(lua_State *L)
{
    // const wxULongLong value
    const wxULongLong * value = (const wxULongLong *)wxluaT_getuserdatatype(L, 3, wxluatype_wxULongLong);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxUIntProperty* returns = new wxUIntProperty(label, name, *value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxUIntProperty);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

static wxLuaArgType s_wxluatypeArray_wxLua_wxUIntProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxUIntProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_constructor[1] = {{ wxLua_wxUIntProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxUIntProperty_constructor }};
//                     unsigned long value = 0 );
static int LUACALL wxLua_wxUIntProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // unsigned long value = 0
    unsigned long value = (argCount >= 3 ? (unsigned long)wxlua_getuintegertype(L, 3) : 0);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxUIntProperty* returns = new wxUIntProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxUIntProperty);

    return 1;
}




#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxUIntProperty_constructor_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxUIntProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 3, s_wxluatypeArray_wxLua_wxUIntProperty_constructor1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxUIntProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxUIntProperty_constructor },
};
static int s_wxluafunc_wxLua_wxUIntProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxUIntProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxUIntProperty_delete_function(void** p)
{
    wxUIntProperty* o = (wxUIntProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxUIntProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AddSpinStepValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_AddSpinStepValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_DoGetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_DoSetAttribute, 1, NULL },
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_IntToValue, 1, NULL },
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_StringToValue, 1, NULL },
    { "ValidateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_ValidateValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxUIntProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxUIntProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxUIntProperty_constructor_overload, s_wxluafunc_wxLua_wxUIntProperty_constructor_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxUIntProperty_methodCount = sizeof(wxUIntProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxFloatProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFloatProperty'
int wxluatype_wxFloatProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_AddSpinStepValue[] = { &wxluatype_wxFloatProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFloatProperty_AddSpinStepValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_AddSpinStepValue[1] = {{ wxLua_wxFloatProperty_AddSpinStepValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFloatProperty_AddSpinStepValue }};
//     virtual wxVariant AddSpinStepValue(long stepScale) const;
static int LUACALL wxLua_wxFloatProperty_AddSpinStepValue(lua_State *L)
{
    // long stepScale
    long stepScale = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call AddSpinStepValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->AddSpinStepValue(stepScale));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_DoGetValidator[] = { &wxluatype_wxFloatProperty, NULL };
static int LUACALL wxLua_wxFloatProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_DoGetValidator[1] = {{ wxLua_wxFloatProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFloatProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator () const;
static int LUACALL wxLua_wxFloatProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_DoSetAttribute[] = { &wxluatype_wxFloatProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxFloatProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_DoSetAttribute[1] = {{ wxLua_wxFloatProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxFloatProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxFloatProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static int LUACALL wxLua_wxFloatProperty_GetClassValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_GetClassValidator[1] = {{ wxLua_wxFloatProperty_GetClassValidator, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxValidator* GetClassValidator();
static int LUACALL wxLua_wxFloatProperty_GetClassValidator(lua_State *L)
{
    // call GetClassValidator
    wxValidator* returns = (wxValidator*)wxFloatProperty::GetClassValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_StringToValue[] = { &wxluatype_wxFloatProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFloatProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_StringToValue[1] = {{ wxLua_wxFloatProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxFloatProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxFloatProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_ValidateValue[] = { &wxluatype_wxFloatProperty, &wxluatype_wxVariant, &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxFloatProperty_ValidateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_ValidateValue[1] = {{ wxLua_wxFloatProperty_ValidateValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxFloatProperty_ValidateValue }};
//                                 wxPGValidationInfo& validationInfo ) const;
static int LUACALL wxLua_wxFloatProperty_ValidateValue(lua_State *L)
{
    // wxPGValidationInfo validationInfo
    wxPGValidationInfo * validationInfo = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGValidationInfo);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call ValidateValue
    bool returns = (self->ValidateValue(*value, *validationInfo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_ValueToString[] = { &wxluatype_wxFloatProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFloatProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_ValueToString[1] = {{ wxLua_wxFloatProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxFloatProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxFloatProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFloatProperty * self = (wxFloatProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFloatProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFloatProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFloatProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFloatProperty_constructor[1] = {{ wxLua_wxFloatProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxFloatProperty_constructor }};
//                      double value = 0.0 );
static int LUACALL wxLua_wxFloatProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // double value = 0.0
    double value = (argCount >= 3 ? (double)wxlua_getnumbertype(L, 3) : 0.0);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxFloatProperty* returns = new wxFloatProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFloatProperty);

    return 1;
}




void wxLua_wxFloatProperty_delete_function(void** p)
{
    wxFloatProperty* o = (wxFloatProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFloatProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AddSpinStepValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_AddSpinStepValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_DoGetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "GetClassValidator", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxFloatProperty_GetClassValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_StringToValue, 1, NULL },
    { "ValidateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_ValidateValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFloatProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxFloatProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFloatProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxFloatProperty_methodCount = sizeof(wxFloatProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxBoolProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxBoolProperty'
int wxluatype_wxBoolProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxBoolProperty_DoSetAttribute[] = { &wxluatype_wxBoolProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxBoolProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBoolProperty_DoSetAttribute[1] = {{ wxLua_wxBoolProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxBoolProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxBoolProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxBoolProperty * self = (wxBoolProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxBoolProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxBoolProperty_IntToValue[] = { &wxluatype_wxBoolProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxBoolProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBoolProperty_IntToValue[1] = {{ wxLua_wxBoolProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxBoolProperty_IntToValue }};
//                              int number, int argFlags = 0 ) const;
static int LUACALL wxLua_wxBoolProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxBoolProperty * self = (wxBoolProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxBoolProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxBoolProperty_StringToValue[] = { &wxluatype_wxBoolProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxBoolProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBoolProperty_StringToValue[1] = {{ wxLua_wxBoolProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxBoolProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxBoolProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxBoolProperty * self = (wxBoolProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxBoolProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxBoolProperty_ValueToString[] = { &wxluatype_wxBoolProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxBoolProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBoolProperty_ValueToString[1] = {{ wxLua_wxBoolProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxBoolProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxBoolProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxBoolProperty * self = (wxBoolProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxBoolProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxBoolProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxBoolProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxBoolProperty_constructor[1] = {{ wxLua_wxBoolProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxBoolProperty_constructor }};
//                     bool value = false );
static int LUACALL wxLua_wxBoolProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool value = false
    bool value = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : false);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxBoolProperty* returns = new wxBoolProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBoolProperty);

    return 1;
}




void wxLua_wxBoolProperty_delete_function(void** p)
{
    wxBoolProperty* o = (wxBoolProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxBoolProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxBoolProperty_DoSetAttribute, 1, NULL },
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxBoolProperty_IntToValue, 1, NULL },
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxBoolProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxBoolProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxBoolProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxBoolProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxBoolProperty_methodCount = sizeof(wxBoolProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxEnumProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxEnumProperty'
int wxluatype_wxEnumProperty = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_GetChoiceSelection[] = { &wxluatype_wxEnumProperty, NULL };
static int LUACALL wxLua_wxEnumProperty_GetChoiceSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_GetChoiceSelection[1] = {{ wxLua_wxEnumProperty_GetChoiceSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxEnumProperty_GetChoiceSelection }};
//     virtual int GetChoiceSelection() const;
static int LUACALL wxLua_wxEnumProperty_GetChoiceSelection(lua_State *L)
{
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call GetChoiceSelection
    int returns = (self->GetChoiceSelection());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_GetIndexForValue[] = { &wxluatype_wxEnumProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_GetIndexForValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_GetIndexForValue[1] = {{ wxLua_wxEnumProperty_GetIndexForValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxEnumProperty_GetIndexForValue }};
//     virtual int GetIndexForValue( int value ) const;
static int LUACALL wxLua_wxEnumProperty_GetIndexForValue(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call GetIndexForValue
    int returns = (self->GetIndexForValue(value));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_GetItemCount[] = { &wxluatype_wxEnumProperty, NULL };
static int LUACALL wxLua_wxEnumProperty_GetItemCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_GetItemCount[1] = {{ wxLua_wxEnumProperty_GetItemCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxEnumProperty_GetItemCount }};
//     size_t GetItemCount() const;
static int LUACALL wxLua_wxEnumProperty_GetItemCount(lua_State *L)
{
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call GetItemCount
    size_t returns = (self->GetItemCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_IntToValue[] = { &wxluatype_wxEnumProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_IntToValue[1] = {{ wxLua_wxEnumProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxEnumProperty_IntToValue }};
//                              int argFlags = 0 ) const;
static int LUACALL wxLua_wxEnumProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_OnSetValue[] = { &wxluatype_wxEnumProperty, NULL };
static int LUACALL wxLua_wxEnumProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_OnSetValue[1] = {{ wxLua_wxEnumProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxEnumProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxEnumProperty_OnSetValue(lua_State *L)
{
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_StringToValue[] = { &wxluatype_wxEnumProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_StringToValue[1] = {{ wxLua_wxEnumProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxEnumProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxEnumProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_ValidateValue[] = { &wxluatype_wxEnumProperty, &wxluatype_wxVariant, &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxEnumProperty_ValidateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_ValidateValue[1] = {{ wxLua_wxEnumProperty_ValidateValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxEnumProperty_ValidateValue }};
//                                 wxPGValidationInfo& validationInfo ) const;
static int LUACALL wxLua_wxEnumProperty_ValidateValue(lua_State *L)
{
    // wxPGValidationInfo validationInfo
    wxPGValidationInfo * validationInfo = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGValidationInfo);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call ValidateValue
    bool returns = (self->ValidateValue(*value, *validationInfo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_ValueToString[] = { &wxluatype_wxEnumProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_ValueToString[1] = {{ wxLua_wxEnumProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxEnumProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxEnumProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxEnumProperty * self = (wxEnumProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEnumProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxArrayInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_constructor1[1] = {{ wxLua_wxEnumProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 5, s_wxluatypeArray_wxLua_wxEnumProperty_constructor1 }};
//                     int value = 0 );
static int LUACALL wxLua_wxEnumProperty_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = 0
    int value = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : 0);
    // const wxArrayInt values = wxLuaSmartwxArrayInt()
    wxLuaSmartwxArrayInt values = (argCount >= 4 ? wxlua_getwxArrayInt(L, 4) : wxLuaSmartwxArrayInt());
    // const wxArrayString labels
    wxLuaSmartwxArrayString labels = wxlua_getwxArrayString(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxEnumProperty* returns = new wxEnumProperty(label, name, labels, values, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxEnumProperty);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxEnumProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxPGChoices, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxEnumProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_constructor[1] = {{ wxLua_wxEnumProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxEnumProperty_constructor }};
//                     int value = 0 );
static int LUACALL wxLua_wxEnumProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = 0
    int value = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // wxPGChoices choices
    wxPGChoices * choices = (wxPGChoices *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGChoices);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxEnumProperty* returns = new wxEnumProperty(label, name, *choices, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxEnumProperty);

    return 1;
}




#if (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEnumProperty_constructor_overload[] =
{

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxEnumProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 5, s_wxluatypeArray_wxLua_wxEnumProperty_constructor1 },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxEnumProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxEnumProperty_constructor },
};
static int s_wxluafunc_wxLua_wxEnumProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxEnumProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxEnumProperty_delete_function(void** p)
{
    wxEnumProperty* o = (wxEnumProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxEnumProperty_methods[] = {
    { "GetChoiceSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_GetChoiceSelection, 1, NULL },
    { "GetIndexForValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_GetIndexForValue, 1, NULL },
    { "GetItemCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_GetItemCount, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_IntToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_StringToValue, 1, NULL },
    { "ValidateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_ValidateValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEnumProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxEnumProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxEnumProperty_constructor_overload, s_wxluafunc_wxLua_wxEnumProperty_constructor_overload_count, 0 },
#endif // (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxEnumProperty_methodCount = sizeof(wxEnumProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxEditEnumProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxEditEnumProperty'
int wxluatype_wxEditEnumProperty = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxPGChoices, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxEditEnumProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxEditEnumProperty_constructor1[1] = {{ wxLua_wxEditEnumProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor1 }};
//                         const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxEditEnumProperty_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // wxPGChoices choices
    wxPGChoices * choices = (wxPGChoices *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGChoices);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxEditEnumProperty* returns = new wxEditEnumProperty(label, name, *choices, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxEditEnumProperty);

    return 1;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxArrayInt, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxEditEnumProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxEditEnumProperty_constructor[1] = {{ wxLua_wxEditEnumProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 5, s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor }};
//                         const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxEditEnumProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 5 ? wxlua_getwxStringtype(L, 5) : wxString(wxEmptyString));
    // const wxArrayInt values = wxLuaSmartwxArrayInt()
    wxLuaSmartwxArrayInt values = (argCount >= 4 ? wxlua_getwxArrayInt(L, 4) : wxLuaSmartwxArrayInt());
    // const wxArrayString labels = wxLuaNullSmartwxArrayString
    wxLuaSmartwxArrayString labels = (argCount >= 3 ? wxlua_getwxArrayString(L, 3) : wxLuaNullSmartwxArrayString);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxEditEnumProperty* returns = new wxEditEnumProperty(label, name, labels, values, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxEditEnumProperty);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEditEnumProperty_constructor_overload[] =
{
    { wxLua_wxEditEnumProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor1 },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxEditEnumProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 5, s_wxluatypeArray_wxLua_wxEditEnumProperty_constructor },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxEditEnumProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxEditEnumProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

void wxLua_wxEditEnumProperty_delete_function(void** p)
{
    wxEditEnumProperty* o = (wxEditEnumProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxEditEnumProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "wxEditEnumProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxEditEnumProperty_constructor_overload, s_wxluafunc_wxLua_wxEditEnumProperty_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

    { 0, 0, 0, 0 },
};

int wxEditEnumProperty_methodCount = sizeof(wxEditEnumProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxFlagsProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFlagsProperty'
int wxluatype_wxFlagsProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_ChildChanged[] = { &wxluatype_wxFlagsProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxFlagsProperty_ChildChanged(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_ChildChanged[1] = {{ wxLua_wxFlagsProperty_ChildChanged, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxFlagsProperty_ChildChanged }};
//                                     wxVariant& childValue ) const;
static int LUACALL wxLua_wxFlagsProperty_ChildChanged(lua_State *L)
{
    // wxVariant childValue
    wxVariant * childValue = (wxVariant *)wxluaT_getuserdatatype(L, 4, wxluatype_wxVariant);
    // int childIndex
    int childIndex = (int)wxlua_getnumbertype(L, 3);
    // wxVariant thisValue
    wxVariant * thisValue = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call ChildChanged
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->ChildChanged(*thisValue, childIndex, *childValue));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_DoSetAttribute[] = { &wxluatype_wxFlagsProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxFlagsProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_DoSetAttribute[1] = {{ wxLua_wxFlagsProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxFlagsProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxFlagsProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_GetChoiceSelection[] = { &wxluatype_wxFlagsProperty, NULL };
static int LUACALL wxLua_wxFlagsProperty_GetChoiceSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_GetChoiceSelection[1] = {{ wxLua_wxFlagsProperty_GetChoiceSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFlagsProperty_GetChoiceSelection }};
//     virtual int GetChoiceSelection() const;
static int LUACALL wxLua_wxFlagsProperty_GetChoiceSelection(lua_State *L)
{
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call GetChoiceSelection
    int returns = (self->GetChoiceSelection());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_GetItemCount[] = { &wxluatype_wxFlagsProperty, NULL };
static int LUACALL wxLua_wxFlagsProperty_GetItemCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_GetItemCount[1] = {{ wxLua_wxFlagsProperty_GetItemCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFlagsProperty_GetItemCount }};
//     size_t GetItemCount() const;
static int LUACALL wxLua_wxFlagsProperty_GetItemCount(lua_State *L)
{
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call GetItemCount
    size_t returns = (self->GetItemCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_GetLabel[] = { &wxluatype_wxFlagsProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxFlagsProperty_GetLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_GetLabel[1] = {{ wxLua_wxFlagsProperty_GetLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxFlagsProperty_GetLabel }};
//     const wxString& GetLabel( size_t ind ) const;
static int LUACALL wxLua_wxFlagsProperty_GetLabel(lua_State *L)
{
    // size_t ind
    size_t ind = (size_t)wxlua_getuintegertype(L, 2);
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call GetLabel
    wxString returns = (self->GetLabel(ind));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_OnSetValue[] = { &wxluatype_wxFlagsProperty, NULL };
static int LUACALL wxLua_wxFlagsProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_OnSetValue[1] = {{ wxLua_wxFlagsProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFlagsProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxFlagsProperty_OnSetValue(lua_State *L)
{
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_RefreshChildren[] = { &wxluatype_wxFlagsProperty, NULL };
static int LUACALL wxLua_wxFlagsProperty_RefreshChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_RefreshChildren[1] = {{ wxLua_wxFlagsProperty_RefreshChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFlagsProperty_RefreshChildren }};
//     virtual void RefreshChildren();
static int LUACALL wxLua_wxFlagsProperty_RefreshChildren(lua_State *L)
{
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call RefreshChildren
    self->RefreshChildren();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_StringToValue[] = { &wxluatype_wxFlagsProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFlagsProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_StringToValue[1] = {{ wxLua_wxFlagsProperty_StringToValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxFlagsProperty_StringToValue }};
//                                 int flags ) const;
static int LUACALL wxLua_wxFlagsProperty_StringToValue(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 4);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_ValueToString[] = { &wxluatype_wxFlagsProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFlagsProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_ValueToString[1] = {{ wxLua_wxFlagsProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxFlagsProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxFlagsProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFlagsProperty * self = (wxFlagsProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFlagsProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_wxArrayInt, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFlagsProperty_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_constructor1[1] = {{ wxLua_wxFlagsProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 0, 5, s_wxluatypeArray_wxLua_wxFlagsProperty_constructor1 }};
//                      int value = 0 );
static int LUACALL wxLua_wxFlagsProperty_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = 0
    int value = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : 0);
    // const wxArrayInt values = wxLuaSmartwxArrayInt()
    wxLuaSmartwxArrayInt values = (argCount >= 4 ? wxlua_getwxArrayInt(L, 4) : wxLuaSmartwxArrayInt());
    // const wxArrayString labels = wxLuaNullSmartwxArrayString
    wxLuaSmartwxArrayString labels = (argCount >= 3 ? wxlua_getwxArrayString(L, 3) : wxLuaNullSmartwxArrayString);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxFlagsProperty* returns = new wxFlagsProperty(label, name, labels, values, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFlagsProperty);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFlagsProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxPGChoices, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFlagsProperty_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_constructor[1] = {{ wxLua_wxFlagsProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxFlagsProperty_constructor }};
//                      long value = 0 );
static int LUACALL wxLua_wxFlagsProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long value = 0
    long value = (argCount >= 4 ? (long)wxlua_getnumbertype(L, 4) : 0);
    // wxPGChoices choices
    wxPGChoices * choices = (wxPGChoices *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGChoices);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxFlagsProperty* returns = new wxFlagsProperty(label, name, *choices, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFlagsProperty);

    return 1;
}




#if (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFlagsProperty_constructor_overload[] =
{

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxFlagsProperty_constructor1, WXLUAMETHOD_CONSTRUCTOR, 0, 5, s_wxluatypeArray_wxLua_wxFlagsProperty_constructor1 },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxFlagsProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxFlagsProperty_constructor },
};
static int s_wxluafunc_wxLua_wxFlagsProperty_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxFlagsProperty_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxFlagsProperty_delete_function(void** p)
{
    wxFlagsProperty* o = (wxFlagsProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFlagsProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ChildChanged", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_ChildChanged, 1, NULL },
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetChoiceSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_GetChoiceSelection, 1, NULL },
    { "GetItemCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_GetItemCount, 1, NULL },
    { "GetLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_GetLabel, 1, NULL },
    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_OnSetValue, 1, NULL },
    { "RefreshChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_RefreshChildren, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFlagsProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxFlagsProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFlagsProperty_constructor_overload, s_wxluafunc_wxLua_wxFlagsProperty_constructor_overload_count, 0 },
#endif // (((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxFlagsProperty_methodCount = sizeof(wxFlagsProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxEditorDialogProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxEditorDialogProperty'
int wxluatype_wxEditorDialogProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxEditorDialogProperty_DoSetAttribute[] = { &wxluatype_wxEditorDialogProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxEditorDialogProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEditorDialogProperty_DoSetAttribute[1] = {{ wxLua_wxEditorDialogProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxEditorDialogProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxEditorDialogProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxEditorDialogProperty * self = (wxEditorDialogProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEditorDialogProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxEditorDialogProperty_GetEditorDialog[] = { &wxluatype_wxEditorDialogProperty, NULL };
static int LUACALL wxLua_wxEditorDialogProperty_GetEditorDialog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxEditorDialogProperty_GetEditorDialog[1] = {{ wxLua_wxEditorDialogProperty_GetEditorDialog, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxEditorDialogProperty_GetEditorDialog }};
//     virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
static int LUACALL wxLua_wxEditorDialogProperty_GetEditorDialog(lua_State *L)
{
    // get this
    wxEditorDialogProperty * self = (wxEditorDialogProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxEditorDialogProperty);
    // call GetEditorDialog
    wxPGEditorDialogAdapter* returns = (wxPGEditorDialogAdapter*)self->GetEditorDialog();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditorDialogAdapter);

    return 1;
}




void wxLua_wxEditorDialogProperty_delete_function(void** p)
{
    wxEditorDialogProperty* o = (wxEditorDialogProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxEditorDialogProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEditorDialogProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetEditorDialog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxEditorDialogProperty_GetEditorDialog, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxEditorDialogProperty_methodCount = sizeof(wxEditorDialogProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxFileProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxFileProperty'
int wxluatype_wxFileProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_DoGetValidator[] = { &wxluatype_wxFileProperty, NULL };
static int LUACALL wxLua_wxFileProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_DoGetValidator[1] = {{ wxLua_wxFileProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator() const;
static int LUACALL wxLua_wxFileProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_DoSetAttribute[] = { &wxluatype_wxFileProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxFileProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_DoSetAttribute[1] = {{ wxLua_wxFileProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxFileProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxFileProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static int LUACALL wxLua_wxFileProperty_GetClassValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_GetClassValidator[1] = {{ wxLua_wxFileProperty_GetClassValidator, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static wxValidator* GetClassValidator();
static int LUACALL wxLua_wxFileProperty_GetClassValidator(lua_State *L)
{
    // call GetClassValidator
    wxValidator* returns = (wxValidator*)wxFileProperty::GetClassValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxFileName) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_GetFileName[] = { &wxluatype_wxFileProperty, NULL };
static int LUACALL wxLua_wxFileProperty_GetFileName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_GetFileName[1] = {{ wxLua_wxFileProperty_GetFileName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileProperty_GetFileName }};
//     wxFileName GetFileName() const;
static int LUACALL wxLua_wxFileProperty_GetFileName(lua_State *L)
{
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call GetFileName
    // allocate a new object using the copy constructor
    wxFileName* returns = new wxFileName(self->GetFileName());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxFileName);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFileName);

    return 1;
}

#endif // (wxLUA_USE_wxFileName) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_OnSetValue[] = { &wxluatype_wxFileProperty, NULL };
static int LUACALL wxLua_wxFileProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_OnSetValue[1] = {{ wxLua_wxFileProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxFileProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxFileProperty_OnSetValue(lua_State *L)
{
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_StringToValue[] = { &wxluatype_wxFileProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFileProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_StringToValue[1] = {{ wxLua_wxFileProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxFileProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxFileProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_ValueToString[] = { &wxluatype_wxFileProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxFileProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_ValueToString[1] = {{ wxLua_wxFileProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxFileProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxFileProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxFileProperty * self = (wxFileProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxFileProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxFileProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxFileProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxFileProperty_constructor[1] = {{ wxLua_wxFileProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxFileProperty_constructor }};
//                     const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxFileProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxFileProperty* returns = new wxFileProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFileProperty);

    return 1;
}




void wxLua_wxFileProperty_delete_function(void** p)
{
    wxFileProperty* o = (wxFileProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxFileProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_DoGetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "GetClassValidator", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxFileProperty_GetClassValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxFileName) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetFileName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_GetFileName, 1, NULL },
#endif // (wxLUA_USE_wxFileName) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxFileProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxFileProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxFileProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxFileProperty_methodCount = sizeof(wxFileProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxLongStringProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxLongStringProperty'
int wxluatype_wxLongStringProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxLongStringProperty_StringToValue[] = { &wxluatype_wxLongStringProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxLongStringProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxLongStringProperty_StringToValue[1] = {{ wxLua_wxLongStringProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxLongStringProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxLongStringProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxLongStringProperty * self = (wxLongStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxLongStringProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxLongStringProperty_ValueToString[] = { &wxluatype_wxLongStringProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxLongStringProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxLongStringProperty_ValueToString[1] = {{ wxLua_wxLongStringProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxLongStringProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxLongStringProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxLongStringProperty * self = (wxLongStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxLongStringProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxLongStringProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxLongStringProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxLongStringProperty_constructor[1] = {{ wxLua_wxLongStringProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxLongStringProperty_constructor }};
//                           const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxLongStringProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxLongStringProperty* returns = new wxLongStringProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLongStringProperty);

    return 1;
}




void wxLua_wxLongStringProperty_delete_function(void** p)
{
    wxLongStringProperty* o = (wxLongStringProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxLongStringProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxLongStringProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxLongStringProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxLongStringProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxLongStringProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxLongStringProperty_methodCount = sizeof(wxLongStringProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxDirProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxDirProperty'
int wxluatype_wxDirProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDirProperty_DoGetValidator[] = { &wxluatype_wxDirProperty, NULL };
static int LUACALL wxLua_wxDirProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDirProperty_DoGetValidator[1] = {{ wxLua_wxDirProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxDirProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator() const;
static int LUACALL wxLua_wxDirProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxDirProperty * self = (wxDirProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDirProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxDirProperty_StringToValue[] = { &wxluatype_wxDirProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDirProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDirProperty_StringToValue[1] = {{ wxLua_wxDirProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxDirProperty_StringToValue }};
//                                int argFlags = 0) const;
static int LUACALL wxLua_wxDirProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxDirProperty * self = (wxDirProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDirProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxDirProperty_ValueToString[] = { &wxluatype_wxDirProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxDirProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDirProperty_ValueToString[1] = {{ wxLua_wxDirProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxDirProperty_ValueToString }};
//     virtual wxString ValueToString(wxVariant& value, int argFlags = 0) const;
static int LUACALL wxLua_wxDirProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxDirProperty * self = (wxDirProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxDirProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxDirProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxDirProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxDirProperty_constructor[1] = {{ wxLua_wxDirProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxDirProperty_constructor }};
//                    const wxString& value = wxEmptyString );
static int LUACALL wxLua_wxDirProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString value = wxEmptyString
    const wxString value = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxDirProperty* returns = new wxDirProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDirProperty);

    return 1;
}




void wxLua_wxDirProperty_delete_function(void** p)
{
    wxDirProperty* o = (wxDirProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxDirProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDirProperty_DoGetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDirProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxDirProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxDirProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxDirProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxDirProperty_methodCount = sizeof(wxDirProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxArrayStringProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxArrayStringProperty'
int wxluatype_wxArrayStringProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_ArrayStringToString[] = { &wxluatype_TSTRING, &wxluatype_wxArrayString, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxArrayStringProperty_ArrayStringToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_ArrayStringToString[1] = {{ wxLua_wxArrayStringProperty_ArrayStringToString, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 4, 4, s_wxluatypeArray_wxLua_wxArrayStringProperty_ArrayStringToString }};
//                                      wxUniChar delimiter, int flags );
static int LUACALL wxLua_wxArrayStringProperty_ArrayStringToString(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 4);
    // wxUniChar delimiter
    wxUniChar delimiter = wxlua_getwxUniChartype(L, 3);
    // const wxArrayString src
    wxLuaSmartwxArrayString src = wxlua_getwxArrayString(L, 2);
    // wxString dst
    wxString dst = wxlua_getwxStringtype(L, 1);
    // call ArrayStringToString
    wxArrayStringProperty::ArrayStringToString(dst, src, delimiter, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_ConvertArrayToString[] = { &wxluatype_wxArrayStringProperty, &wxluatype_wxArrayString, &wxluatype_TLIGHTUSERDATA, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxArrayStringProperty_ConvertArrayToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_ConvertArrayToString[1] = {{ wxLua_wxArrayStringProperty_ConvertArrayToString, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxArrayStringProperty_ConvertArrayToString }};
//                                       const wxUniChar& delimiter) const;
static int LUACALL wxLua_wxArrayStringProperty_ConvertArrayToString(lua_State *L)
{
    // const wxUniChar delimiter
    const wxUniChar * delimiter = (const wxUniChar *)wxlua_touserdata(L, 4);
    // wxString pString
    wxString * pString = (wxString *)wxlua_touserdata(L, 3);
    // const wxArrayString arr
    wxLuaSmartwxArrayString arr = wxlua_getwxArrayString(L, 2);
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call ConvertArrayToString
    self->ConvertArrayToString(arr, pString, *delimiter);

    return 0;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_CreateEditorDialog[] = { &wxluatype_wxArrayStringProperty, NULL };
static int LUACALL wxLua_wxArrayStringProperty_CreateEditorDialog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_CreateEditorDialog[1] = {{ wxLua_wxArrayStringProperty_CreateEditorDialog, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxArrayStringProperty_CreateEditorDialog }};
//     virtual wxPGArrayEditorDialog* CreateEditorDialog();
static int LUACALL wxLua_wxArrayStringProperty_CreateEditorDialog(lua_State *L)
{
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call CreateEditorDialog
    wxPGArrayEditorDialog* returns = (wxPGArrayEditorDialog*)self->CreateEditorDialog();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGArrayEditorDialog);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_DoSetAttribute[] = { &wxluatype_wxArrayStringProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxArrayStringProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_DoSetAttribute[1] = {{ wxLua_wxArrayStringProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxArrayStringProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxArrayStringProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_OnCustomStringEdit[] = { &wxluatype_wxArrayStringProperty, &wxluatype_wxWindow, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxArrayStringProperty_OnCustomStringEdit(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_OnCustomStringEdit[1] = {{ wxLua_wxArrayStringProperty_OnCustomStringEdit, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxArrayStringProperty_OnCustomStringEdit }};
//     virtual bool OnCustomStringEdit( wxWindow* parent, wxString& value );
static int LUACALL wxLua_wxArrayStringProperty_OnCustomStringEdit(lua_State *L)
{
    // wxString value
    wxString value = wxlua_getwxStringtype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call OnCustomStringEdit
    bool returns = (self->OnCustomStringEdit(parent, value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_OnSetValue[] = { &wxluatype_wxArrayStringProperty, NULL };
static int LUACALL wxLua_wxArrayStringProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_OnSetValue[1] = {{ wxLua_wxArrayStringProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxArrayStringProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxArrayStringProperty_OnSetValue(lua_State *L)
{
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_StringToValue[] = { &wxluatype_wxArrayStringProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxArrayStringProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_StringToValue[1] = {{ wxLua_wxArrayStringProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxArrayStringProperty_StringToValue }};
//                                 int argFlags = 0 ) const;
static int LUACALL wxLua_wxArrayStringProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_ValueToString[] = { &wxluatype_wxArrayStringProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxArrayStringProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_ValueToString[1] = {{ wxLua_wxArrayStringProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxArrayStringProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxArrayStringProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxArrayStringProperty * self = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxArrayStringProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxArrayStringProperty_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxArrayStringProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxArrayStringProperty_constructor[1] = {{ wxLua_wxArrayStringProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxArrayStringProperty_constructor }};
//                            const wxArrayString& value = wxLuaNullSmartwxArrayString );
static int LUACALL wxLua_wxArrayStringProperty_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxArrayString value = wxLuaNullSmartwxArrayString
    wxLuaSmartwxArrayString value = (argCount >= 3 ? wxlua_getwxArrayString(L, 3) : wxLuaNullSmartwxArrayString);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label = wxPG_LABEL
    const wxString label = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxPG_LABEL));
    // call constructor
    wxArrayStringProperty* returns = new wxArrayStringProperty(label, name, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayStringProperty);

    return 1;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)



void wxLua_wxArrayStringProperty_delete_function(void** p)
{
    wxArrayStringProperty* o = (wxArrayStringProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxArrayStringProperty_methods[] = {
#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "ArrayStringToString", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxArrayStringProperty_ArrayStringToString, 1, NULL },
    { "ConvertArrayToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_ConvertArrayToString, 1, NULL },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "CreateEditorDialog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_CreateEditorDialog, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "OnCustomStringEdit", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_OnCustomStringEdit, 1, NULL },
    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_StringToValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxArrayStringProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxArrayStringProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxArrayStringProperty_constructor, 1, NULL },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxArrayStringProperty_methodCount = sizeof(wxArrayStringProperty_methods)/sizeof(wxLuaBindMethod) - 1;

wxLuaBindNumber wxArrayStringProperty_enums[] = {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "Escape", wxArrayStringProperty::Escape },
        { "QuoteStrings", wxArrayStringProperty::QuoteStrings },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

    { NULL, 0, },
};
int wxArrayStringProperty_enumCount = sizeof(wxArrayStringProperty_enums)/sizeof(wxLuaBindNumber) - 1;
#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGArrayEditorDialog
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGArrayEditorDialog'
int wxluatype_wxPGArrayEditorDialog = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_Create[] = { &wxluatype_wxPGArrayEditorDialog, &wxluatype_wxWindow, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxPoint, &wxluatype_wxSize, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_Create(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_Create[1] = {{ wxLua_wxPGArrayEditorDialog_Create, WXLUAMETHOD_METHOD, 4, 7, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_Create }};
//                  const wxSize& sz = wxDefaultSize );
static int LUACALL wxLua_wxPGArrayEditorDialog_Create(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxSize sz = wxDefaultSize
    const wxSize * sz = (argCount >= 7 ? (const wxSize *)wxluaT_getuserdatatype(L, 7, wxluatype_wxSize) : &wxDefaultSize);
    // const wxPoint pos = wxDefaultPosition
    const wxPoint * pos = (argCount >= 6 ? (const wxPoint *)wxluaT_getuserdatatype(L, 6, wxluatype_wxPoint) : &wxDefaultPosition);
    // long style = wxAEDIALOG_STYLE
    long style = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : wxAEDIALOG_STYLE);
    // const wxString caption
    const wxString caption = wxlua_getwxStringtype(L, 4);
    // const wxString message
    const wxString message = wxlua_getwxStringtype(L, 3);
    // wxWindow parent
    wxWindow * parent = (wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call Create
    bool returns = (self->Create(parent, message, caption, style, *pos, *sz));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_EnableCustomNewAction[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_EnableCustomNewAction(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_EnableCustomNewAction[1] = {{ wxLua_wxPGArrayEditorDialog_EnableCustomNewAction, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_EnableCustomNewAction }};
//     void EnableCustomNewAction();
static int LUACALL wxLua_wxPGArrayEditorDialog_EnableCustomNewAction(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call EnableCustomNewAction
    self->EnableCustomNewAction();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetDialogValue[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_GetDialogValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetDialogValue[1] = {{ wxLua_wxPGArrayEditorDialog_GetDialogValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetDialogValue }};
//     virtual wxVariant GetDialogValue() const;
static int LUACALL wxLua_wxPGArrayEditorDialog_GetDialogValue(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call GetDialogValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetDialogValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetSelection[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetSelection[1] = {{ wxLua_wxPGArrayEditorDialog_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetSelection }};
//     int GetSelection() const;
static int LUACALL wxLua_wxPGArrayEditorDialog_GetSelection(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call GetSelection
    int returns = (self->GetSelection());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator[1] = {{ wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator }};
//     virtual wxValidator* GetTextCtrlValidator() const;
static int LUACALL wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call GetTextCtrlValidator
    wxValidator* returns = (wxValidator*)self->GetTextCtrlValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_Init[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_Init(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_Init[1] = {{ wxLua_wxPGArrayEditorDialog_Init, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_Init }};
//     void Init();
static int LUACALL wxLua_wxPGArrayEditorDialog_Init(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call Init
    self->Init();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_IsModified[] = { &wxluatype_wxPGArrayEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_IsModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_IsModified[1] = {{ wxLua_wxPGArrayEditorDialog_IsModified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_IsModified }};
//     bool IsModified() const;
static int LUACALL wxLua_wxPGArrayEditorDialog_IsModified(lua_State *L)
{
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call IsModified
    bool returns = (self->IsModified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_SetDialogValue[] = { &wxluatype_wxPGArrayEditorDialog, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_SetDialogValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_SetDialogValue[1] = {{ wxLua_wxPGArrayEditorDialog_SetDialogValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_SetDialogValue }};
//     virtual void SetDialogValue( const wxVariant& value );
static int LUACALL wxLua_wxPGArrayEditorDialog_SetDialogValue(lua_State *L)
{
    // const wxVariant value
    const wxVariant * value = (const wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call SetDialogValue
    self->SetDialogValue(*value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_SetNewButtonText[] = { &wxluatype_wxPGArrayEditorDialog, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGArrayEditorDialog_SetNewButtonText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayEditorDialog_SetNewButtonText[1] = {{ wxLua_wxPGArrayEditorDialog_SetNewButtonText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGArrayEditorDialog_SetNewButtonText }};
//     void SetNewButtonText(const wxString& text);
static int LUACALL wxLua_wxPGArrayEditorDialog_SetNewButtonText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGArrayEditorDialog * self = (wxPGArrayEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayEditorDialog);
    // call SetNewButtonText
    self->SetNewButtonText(text);

    return 0;
}




void wxLua_wxPGArrayEditorDialog_delete_function(void** p)
{
    wxPGArrayEditorDialog* o = (wxPGArrayEditorDialog*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGArrayEditorDialog_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Create", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_Create, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "EnableCustomNewAction", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_EnableCustomNewAction, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetDialogValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetDialogValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetSelection, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "GetTextCtrlValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_GetTextCtrlValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

    { "Init", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_Init, 1, NULL },
    { "IsModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_IsModified, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetDialogValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_SetDialogValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetNewButtonText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayEditorDialog_SetNewButtonText, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGArrayEditorDialog_methodCount = sizeof(wxPGArrayEditorDialog_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGArrayStringEditorDialog
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGArrayStringEditorDialog'
int wxluatype_wxPGArrayStringEditorDialog = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_GetDialogValue[] = { &wxluatype_wxPGArrayStringEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayStringEditorDialog_GetDialogValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_GetDialogValue[1] = {{ wxLua_wxPGArrayStringEditorDialog_GetDialogValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_GetDialogValue }};
//     virtual wxVariant GetDialogValue() const;
static int LUACALL wxLua_wxPGArrayStringEditorDialog_GetDialogValue(lua_State *L)
{
    // get this
    wxPGArrayStringEditorDialog * self = (wxPGArrayStringEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayStringEditorDialog);
    // call GetDialogValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetDialogValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_Init[] = { &wxluatype_wxPGArrayStringEditorDialog, NULL };
static int LUACALL wxLua_wxPGArrayStringEditorDialog_Init(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_Init[1] = {{ wxLua_wxPGArrayStringEditorDialog_Init, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_Init }};
//     void Init();
static int LUACALL wxLua_wxPGArrayStringEditorDialog_Init(lua_State *L)
{
    // get this
    wxPGArrayStringEditorDialog * self = (wxPGArrayStringEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayStringEditorDialog);
    // call Init
    self->Init();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction[] = { &wxluatype_wxPGArrayStringEditorDialog, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction[1] = {{ wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction }};
//     virtual bool OnCustomNewAction(wxString* resString);
static int LUACALL wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction(lua_State *L)
{
    // wxString resString
    wxString * resString = (wxString *)wxlua_touserdata(L, 2);
    // get this
    wxPGArrayStringEditorDialog * self = (wxPGArrayStringEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayStringEditorDialog);
    // call OnCustomNewAction
    bool returns = (self->OnCustomNewAction(resString));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_SetCustomButton[] = { &wxluatype_wxPGArrayStringEditorDialog, &wxluatype_TSTRING, &wxluatype_wxArrayStringProperty, NULL };
static int LUACALL wxLua_wxPGArrayStringEditorDialog_SetCustomButton(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_SetCustomButton[1] = {{ wxLua_wxPGArrayStringEditorDialog_SetCustomButton, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_SetCustomButton }};
//                           wxArrayStringProperty* pcc );
static int LUACALL wxLua_wxPGArrayStringEditorDialog_SetCustomButton(lua_State *L)
{
    // wxArrayStringProperty pcc
    wxArrayStringProperty * pcc = (wxArrayStringProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxArrayStringProperty);
    // const wxString custBtText
    const wxString custBtText = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGArrayStringEditorDialog * self = (wxPGArrayStringEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayStringEditorDialog);
    // call SetCustomButton
    self->SetCustomButton(custBtText, pcc);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_SetDialogValue[] = { &wxluatype_wxPGArrayStringEditorDialog, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGArrayStringEditorDialog_SetDialogValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_SetDialogValue[1] = {{ wxLua_wxPGArrayStringEditorDialog_SetDialogValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGArrayStringEditorDialog_SetDialogValue }};
//     virtual void SetDialogValue( const wxVariant& value );
static int LUACALL wxLua_wxPGArrayStringEditorDialog_SetDialogValue(lua_State *L)
{
    // const wxVariant value
    const wxVariant * value = (const wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGArrayStringEditorDialog * self = (wxPGArrayStringEditorDialog *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGArrayStringEditorDialog);
    // call SetDialogValue
    self->SetDialogValue(*value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static int LUACALL wxLua_wxPGArrayStringEditorDialog_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_constructor[1] = {{ wxLua_wxPGArrayStringEditorDialog_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGArrayStringEditorDialog();
static int LUACALL wxLua_wxPGArrayStringEditorDialog_constructor(lua_State *L)
{
    // call constructor
    wxPGArrayStringEditorDialog* returns = new wxPGArrayStringEditorDialog();
    // add to tracked window list, it will check validity
    wxluaW_addtrackedwindow(L, returns);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGArrayStringEditorDialog);

    return 1;
}




void wxLua_wxPGArrayStringEditorDialog_delete_function(void** p)
{
    wxPGArrayStringEditorDialog* o = (wxPGArrayStringEditorDialog*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGArrayStringEditorDialog_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetDialogValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_GetDialogValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "Init", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_Init, 1, NULL },
    { "OnCustomNewAction", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_OnCustomNewAction, 1, NULL },
    { "SetCustomButton", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_SetCustomButton, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetDialogValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_SetDialogValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxPGArrayStringEditorDialog", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGArrayStringEditorDialog_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGArrayStringEditorDialog_methodCount = sizeof(wxPGArrayStringEditorDialog_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridHitTestResult
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridHitTestResult'
int wxluatype_wxPropertyGridHitTestResult = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetColumn[] = { &wxluatype_wxPropertyGridHitTestResult, NULL };
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetColumn(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetColumn[1] = {{ wxLua_wxPropertyGridHitTestResult_GetColumn, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetColumn }};
//     int GetColumn() const;
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetColumn(lua_State *L)
{
    // get this
    wxPropertyGridHitTestResult * self = (wxPropertyGridHitTestResult *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridHitTestResult);
    // call GetColumn
    int returns = (self->GetColumn());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetProperty[] = { &wxluatype_wxPropertyGridHitTestResult, NULL };
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetProperty[1] = {{ wxLua_wxPropertyGridHitTestResult_GetProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetProperty }};
//     %ungc wxPGProperty* GetProperty() const;
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetProperty(lua_State *L)
{
    // get this
    wxPropertyGridHitTestResult * self = (wxPropertyGridHitTestResult *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridHitTestResult);
    // call GetProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetSplitter[] = { &wxluatype_wxPropertyGridHitTestResult, NULL };
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetSplitter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetSplitter[1] = {{ wxLua_wxPropertyGridHitTestResult_GetSplitter, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetSplitter }};
//     int GetSplitter() const;
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetSplitter(lua_State *L)
{
    // get this
    wxPropertyGridHitTestResult * self = (wxPropertyGridHitTestResult *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridHitTestResult);
    // call GetSplitter
    int returns = (self->GetSplitter());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset[] = { &wxluatype_wxPropertyGridHitTestResult, NULL };
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset[1] = {{ wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset }};
//     int GetSplitterHitOffset() const;
static int LUACALL wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset(lua_State *L)
{
    // get this
    wxPropertyGridHitTestResult * self = (wxPropertyGridHitTestResult *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridHitTestResult);
    // call GetSplitterHitOffset
    int returns = (self->GetSplitterHitOffset());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_delete[] = { &wxluatype_wxPropertyGridHitTestResult, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridHitTestResult_delete }};

static int LUACALL wxLua_wxPropertyGridHitTestResult_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridHitTestResult_constructor[1] = {{ wxLua_wxPropertyGridHitTestResult_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGridHitTestResult();
static int LUACALL wxLua_wxPropertyGridHitTestResult_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGridHitTestResult* returns = new wxPropertyGridHitTestResult();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridHitTestResult);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridHitTestResult);

    return 1;
}




void wxLua_wxPropertyGridHitTestResult_delete_function(void** p)
{
    wxPropertyGridHitTestResult* o = (wxPropertyGridHitTestResult*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridHitTestResult_methods[] = {
    { "GetColumn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetColumn, 1, NULL },
    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetProperty, 1, NULL },
    { "GetSplitter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetSplitter, 1, NULL },
    { "GetSplitterHitOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_GetSplitterHitOffset, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_delete, 1, NULL },
    { "wxPropertyGridHitTestResult", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridHitTestResult_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPropertyGridHitTestResult_methodCount = sizeof(wxPropertyGridHitTestResult_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridIteratorBase
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridIteratorBase'
int wxluatype_wxPropertyGridIteratorBase = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Assign[] = { &wxluatype_wxPropertyGridIteratorBase, &wxluatype_wxPropertyGridIteratorBase, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_Assign(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Assign[1] = {{ wxLua_wxPropertyGridIteratorBase_Assign, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Assign }};
//     void Assign( const wxPropertyGridIteratorBase& it );
static int LUACALL wxLua_wxPropertyGridIteratorBase_Assign(lua_State *L)
{
    // const wxPropertyGridIteratorBase it
    const wxPropertyGridIteratorBase * it = (const wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridIteratorBase);
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call Assign
    self->Assign(*it);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_AtEnd[] = { &wxluatype_wxPropertyGridIteratorBase, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_AtEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_AtEnd[1] = {{ wxLua_wxPropertyGridIteratorBase_AtEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_AtEnd }};
//     bool AtEnd() const;
static int LUACALL wxLua_wxPropertyGridIteratorBase_AtEnd(lua_State *L)
{
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call AtEnd
    bool returns = (self->AtEnd());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_GetProperty[] = { &wxluatype_wxPropertyGridIteratorBase, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_GetProperty[1] = {{ wxLua_wxPropertyGridIteratorBase_GetProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_GetProperty }};
//     %ungc wxPGProperty* GetProperty() const;
static int LUACALL wxLua_wxPropertyGridIteratorBase_GetProperty(lua_State *L)
{
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call GetProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init1[] = { &wxluatype_wxPropertyGridIteratorBase, &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_Init1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init1[1] = {{ wxLua_wxPropertyGridIteratorBase_Init1, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init1 }};
//                int dir = 0 );
static int LUACALL wxLua_wxPropertyGridIteratorBase_Init1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int dir = 0
    int dir = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : 0);
    // int startPos = wxTOP
    int startPos = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxTOP);
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 3);
    // wxPropertyGridPageState state
    wxPropertyGridPageState * state = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridPageState);
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call Init
    self->Init(state, flags, startPos, dir);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init[] = { &wxluatype_wxPropertyGridIteratorBase, &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_Init(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init[1] = {{ wxLua_wxPropertyGridIteratorBase_Init, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init }};
//                int dir = 1 );
static int LUACALL wxLua_wxPropertyGridIteratorBase_Init(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int dir = 1
    int dir = (argCount >= 5 ? (int)wxlua_getnumbertype(L, 5) : 1);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 3);
    // wxPropertyGridPageState state
    wxPropertyGridPageState * state = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridPageState);
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call Init
    self->Init(state, flags, property, dir);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Next[] = { &wxluatype_wxPropertyGridIteratorBase, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_Next(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Next[1] = {{ wxLua_wxPropertyGridIteratorBase_Next, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Next }};
//     void Next( bool iterateChildren = true );
static int LUACALL wxLua_wxPropertyGridIteratorBase_Next(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool iterateChildren = true
    bool iterateChildren = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call Next
    self->Next(iterateChildren);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Prev[] = { &wxluatype_wxPropertyGridIteratorBase, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_Prev(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Prev[1] = {{ wxLua_wxPropertyGridIteratorBase_Prev, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Prev }};
//     void Prev();
static int LUACALL wxLua_wxPropertyGridIteratorBase_Prev(lua_State *L)
{
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call Prev
    self->Prev();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_SetBaseParent[] = { &wxluatype_wxPropertyGridIteratorBase, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridIteratorBase_SetBaseParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_SetBaseParent[1] = {{ wxLua_wxPropertyGridIteratorBase_SetBaseParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_SetBaseParent }};
//     void SetBaseParent( wxPGProperty* baseParent );
static int LUACALL wxLua_wxPropertyGridIteratorBase_SetBaseParent(lua_State *L)
{
    // wxPGProperty baseParent
    wxPGProperty * baseParent = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridIteratorBase * self = (wxPropertyGridIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridIteratorBase);
    // call SetBaseParent
    self->SetBaseParent(baseParent);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_delete[] = { &wxluatype_wxPropertyGridIteratorBase, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_delete }};

static int LUACALL wxLua_wxPropertyGridIteratorBase_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_constructor[1] = {{ wxLua_wxPropertyGridIteratorBase_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGridIteratorBase();
static int LUACALL wxLua_wxPropertyGridIteratorBase_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGridIteratorBase* returns = new wxPropertyGridIteratorBase();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridIteratorBase);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridIteratorBase);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init_overload[] =
{
    { wxLua_wxPropertyGridIteratorBase_Init1, WXLUAMETHOD_METHOD, 3, 5, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init1 },
    { wxLua_wxPropertyGridIteratorBase_Init, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridIteratorBase_Init },
};
static int s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridIteratorBase_delete_function(void** p)
{
    wxPropertyGridIteratorBase* o = (wxPropertyGridIteratorBase*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridIteratorBase_methods[] = {
    { "Assign", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Assign, 1, NULL },
    { "AtEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_AtEnd, 1, NULL },
    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_GetProperty, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Init", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init_overload, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Init_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "Next", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Next, 1, NULL },
    { "Prev", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_Prev, 1, NULL },
    { "SetBaseParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_SetBaseParent, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_delete, 1, NULL },
    { "wxPropertyGridIteratorBase", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridIteratorBase_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPropertyGridIteratorBase_methodCount = sizeof(wxPropertyGridIteratorBase_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridConstIterator
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridConstIterator'
int wxluatype_wxPropertyGridConstIterator = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_delete[] = { &wxluatype_wxPropertyGridConstIterator, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor3[] = { &wxluatype_wxPropertyGridConstIterator, NULL };
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor3[1] = {{ wxLua_wxPropertyGridConstIterator_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor3 }};
//     wxPropertyGridConstIterator( const wxPropertyGridConstIterator& it );
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor3(lua_State *L)
{
    // const wxPropertyGridConstIterator it
    const wxPropertyGridConstIterator * it = (const wxPropertyGridConstIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridConstIterator);
    // call constructor
    wxPropertyGridConstIterator* returns = new wxPropertyGridConstIterator(*it);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridConstIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridConstIterator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor2[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor2[1] = {{ wxLua_wxPropertyGridConstIterator_constructor2, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor2 }};
//                                  int flags, int startPos, int dir = 0 );
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int dir = 0
    int dir = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int startPos
    int startPos = (int)wxlua_getnumbertype(L, 3);
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // wxPropertyGridPageState state
    wxPropertyGridPageState * state = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call constructor
    wxPropertyGridConstIterator* returns = new wxPropertyGridConstIterator(state, flags, startPos, dir);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridConstIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridConstIterator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor1[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor1[1] = {{ wxLua_wxPropertyGridConstIterator_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 4, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor1 }};
//                                  const wxPGProperty* property = NULL, int dir = 1 );
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int dir = 1
    int dir = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 1);
    // const wxPGProperty property = NULL
    const wxPGProperty * property = (argCount >= 3 ? (const wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty) : NULL);
    // int flags = wxPG_ITERATE_DEFAULT
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_DEFAULT);
    // const wxPropertyGridPageState state
    const wxPropertyGridPageState * state = (const wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call constructor
    wxPropertyGridConstIterator* returns = new wxPropertyGridConstIterator(state, flags, property, dir);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridConstIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridConstIterator);

    return 1;
}

static int LUACALL wxLua_wxPropertyGridConstIterator_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor[1] = {{ wxLua_wxPropertyGridConstIterator_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGridConstIterator();
static int LUACALL wxLua_wxPropertyGridConstIterator_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGridConstIterator* returns = new wxPropertyGridConstIterator();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridConstIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridConstIterator);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor_overload[] =
{
    { wxLua_wxPropertyGridConstIterator_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor3 },
    { wxLua_wxPropertyGridConstIterator_constructor2, WXLUAMETHOD_CONSTRUCTOR, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor2 },
    { wxLua_wxPropertyGridConstIterator_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 4, s_wxluatypeArray_wxLua_wxPropertyGridConstIterator_constructor1 },
    { wxLua_wxPropertyGridConstIterator_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridConstIterator_delete_function(void** p)
{
    wxPropertyGridConstIterator* o = (wxPropertyGridConstIterator*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridConstIterator_methods[] = {
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridConstIterator_delete, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPropertyGridConstIterator", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor_overload, s_wxluafunc_wxLua_wxPropertyGridConstIterator_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyGridConstIterator_methodCount = sizeof(wxPropertyGridConstIterator_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGVIteratorBase
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGVIteratorBase'
int wxluatype_wxPGVIteratorBase = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIteratorBase_Next[] = { &wxluatype_wxPGVIteratorBase, NULL };
static int LUACALL wxLua_wxPGVIteratorBase_Next(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIteratorBase_Next[1] = {{ wxLua_wxPGVIteratorBase_Next, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGVIteratorBase_Next }};
//     virtual void Next() = 0;
static int LUACALL wxLua_wxPGVIteratorBase_Next(lua_State *L)
{
    // get this
    wxPGVIteratorBase * self = (wxPGVIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIteratorBase);
    // call Next
    self->Next();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIteratorBase_delete[] = { &wxluatype_wxPGVIteratorBase, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIteratorBase_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGVIteratorBase_delete }};




// %override wxLua_wxPGVIteratorBase_delete_function
// delete is private in wxPGVIteratorBase
void wxLua_wxPGVIteratorBase_delete_function(void** p)
{
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGVIteratorBase_methods[] = {
    { "Next", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIteratorBase_Next, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGVIteratorBase_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGVIteratorBase_methodCount = sizeof(wxPGVIteratorBase_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGVIterator
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGVIterator'
int wxluatype_wxPGVIterator = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_AtEnd[] = { &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_AtEnd(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_AtEnd[1] = {{ wxLua_wxPGVIterator_AtEnd, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_AtEnd }};
//     bool AtEnd() const;
static int LUACALL wxLua_wxPGVIterator_AtEnd(lua_State *L)
{
    // get this
    wxPGVIterator * self = (wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call AtEnd
    bool returns = (self->AtEnd());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_GetProperty[] = { &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_GetProperty[1] = {{ wxLua_wxPGVIterator_GetProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_GetProperty }};
//     %ungc wxPGProperty* GetProperty() const;
static int LUACALL wxLua_wxPGVIterator_GetProperty(lua_State *L)
{
    // get this
    wxPGVIterator * self = (wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call GetProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetProperty();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_Next[] = { &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_Next(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_Next[1] = {{ wxLua_wxPGVIterator_Next, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_Next }};
//     void Next();
static int LUACALL wxLua_wxPGVIterator_Next(lua_State *L)
{
    // get this
    wxPGVIterator * self = (wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call Next
    self->Next();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_UnRef[] = { &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_UnRef(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_UnRef[1] = {{ wxLua_wxPGVIterator_UnRef, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_UnRef }};
//     void UnRef();
static int LUACALL wxLua_wxPGVIterator_UnRef(lua_State *L)
{
    // get this
    wxPGVIterator * self = (wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call UnRef
    self->UnRef();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_delete[] = { &wxluatype_wxPGVIterator, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_op_set[] = { &wxluatype_wxPGVIterator, &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_op_set[1] = {{ wxLua_wxPGVIterator_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGVIterator_op_set }};
//     const wxPGVIterator& operator=( const wxPGVIterator& it );
static int LUACALL wxLua_wxPGVIterator_op_set(lua_State *L)
{
    // const wxPGVIterator it
    const wxPGVIterator * it = (const wxPGVIterator *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGVIterator);
    // get this
    wxPGVIterator * self = (wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call op_set
    (*self)=(*it);
    const wxPGVIterator* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_constructor2[] = { &wxluatype_wxPGVIterator, NULL };
static int LUACALL wxLua_wxPGVIterator_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_constructor2[1] = {{ wxLua_wxPGVIterator_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_constructor2 }};
//     wxPGVIterator( const wxPGVIterator& it );
static int LUACALL wxLua_wxPGVIterator_constructor2(lua_State *L)
{
    // const wxPGVIterator it
    const wxPGVIterator * it = (const wxPGVIterator *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIterator);
    // call constructor
    wxPGVIterator* returns = new wxPGVIterator(*it);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGVIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGVIterator_constructor1[] = { &wxluatype_wxPGVIteratorBase, NULL };
static int LUACALL wxLua_wxPGVIterator_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_constructor1[1] = {{ wxLua_wxPGVIterator_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_constructor1 }};
//     wxPGVIterator( wxPGVIteratorBase* obj );
static int LUACALL wxLua_wxPGVIterator_constructor1(lua_State *L)
{
    // wxPGVIteratorBase obj
    wxPGVIteratorBase * obj = (wxPGVIteratorBase *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGVIteratorBase);
    // call constructor
    wxPGVIterator* returns = new wxPGVIterator(obj);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGVIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}

static int LUACALL wxLua_wxPGVIterator_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_constructor[1] = {{ wxLua_wxPGVIterator_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGVIterator();
static int LUACALL wxLua_wxPGVIterator_constructor(lua_State *L)
{
    // call constructor
    wxPGVIterator* returns = new wxPGVIterator();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGVIterator);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGVIterator_constructor_overload[] =
{
    { wxLua_wxPGVIterator_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_constructor2 },
    { wxLua_wxPGVIterator_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGVIterator_constructor1 },
    { wxLua_wxPGVIterator_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPGVIterator_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGVIterator_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGVIterator_delete_function(void** p)
{
    wxPGVIterator* o = (wxPGVIterator*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGVIterator_methods[] = {
    { "AtEnd", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIterator_AtEnd, 1, NULL },
    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIterator_GetProperty, 1, NULL },
    { "Next", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIterator_Next, 1, NULL },
    { "UnRef", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIterator_UnRef, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGVIterator_delete, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGVIterator_op_set, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPGVIterator", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGVIterator_constructor_overload, s_wxluafunc_wxLua_wxPGVIterator_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGVIterator_methodCount = sizeof(wxPGVIterator_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridPageState
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridPageState'
int wxluatype_wxPropertyGridPageState = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_BaseGetPropertyByName[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_BaseGetPropertyByName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_BaseGetPropertyByName[1] = {{ wxLua_wxPropertyGridPageState_BaseGetPropertyByName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_BaseGetPropertyByName }};
//     %ungc wxPGProperty* BaseGetPropertyByName( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridPageState_BaseGetPropertyByName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call BaseGetPropertyByName
    wxPGProperty* returns = (wxPGProperty*)self->BaseGetPropertyByName(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff[1] = {{ wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff }};
//     void CalculateFontAndBitmapStuff( int vspacing );
static int LUACALL wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff(lua_State *L)
{
    // int vspacing
    int vspacing = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call CalculateFontAndBitmapStuff
    self->CalculateFontAndBitmapStuff(vspacing);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_CheckColumnWidths[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_CheckColumnWidths(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_CheckColumnWidths[1] = {{ wxLua_wxPropertyGridPageState_CheckColumnWidths, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_CheckColumnWidths }};
//     void CheckColumnWidths( int widthChange = 0 );
static int LUACALL wxLua_wxPropertyGridPageState_CheckColumnWidths(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int widthChange = 0
    int widthChange = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call CheckColumnWidths
    self->CheckColumnWidths(widthChange);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoAppend[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoAppend(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoAppend[1] = {{ wxLua_wxPropertyGridPageState_DoAppend, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoAppend }};
//     %ungc wxPGProperty* DoAppend( %ungc wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridPageState_DoAppend(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, property)) wxluaO_undeletegcobject(L, property);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoAppend
    wxPGProperty* returns = (wxPGProperty*)self->DoAppend(property);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoClear[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoClear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoClear[1] = {{ wxLua_wxPropertyGridPageState_DoClear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoClear }};
//     void DoClear();
static int LUACALL wxLua_wxPropertyGridPageState_DoClear(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoClear
    self->DoClear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoClearSelection[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoClearSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoClearSelection[1] = {{ wxLua_wxPropertyGridPageState_DoClearSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoClearSelection }};
//     bool DoClearSelection();
static int LUACALL wxLua_wxPropertyGridPageState_DoClearSelection(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoClearSelection
    bool returns = (self->DoClearSelection());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoCollapse[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoCollapse(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoCollapse[1] = {{ wxLua_wxPropertyGridPageState_DoCollapse, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoCollapse }};
//     bool DoCollapse( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGridPageState_DoCollapse(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoCollapse
    bool returns = (self->DoCollapse(p));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoDelete[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoDelete(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoDelete[1] = {{ wxLua_wxPropertyGridPageState_DoDelete, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoDelete }};
//     virtual void DoDelete( wxPGProperty* item, bool doDelete = true );
static int LUACALL wxLua_wxPropertyGridPageState_DoDelete(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool doDelete = true
    bool doDelete = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // wxPGProperty item
    wxPGProperty * item = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoDelete
    self->DoDelete(item, doDelete);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoExpand[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoExpand(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoExpand[1] = {{ wxLua_wxPropertyGridPageState_DoExpand, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoExpand }};
//     bool DoExpand( wxPGProperty* p );
static int LUACALL wxLua_wxPropertyGridPageState_DoExpand(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoExpand
    bool returns = (self->DoExpand(p));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoFitColumns[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoFitColumns(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoFitColumns[1] = {{ wxLua_wxPropertyGridPageState_DoFitColumns, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoFitColumns }};
//     wxSize DoFitColumns( bool allowGridResize = false );
static int LUACALL wxLua_wxPropertyGridPageState_DoFitColumns(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool allowGridResize = false
    bool allowGridResize = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoFitColumns
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->DoFitColumns(allowGridResize));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetColumnProportion[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoGetColumnProportion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetColumnProportion[1] = {{ wxLua_wxPropertyGridPageState_DoGetColumnProportion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetColumnProportion }};
//     int DoGetColumnProportion( unsigned int column ) const;
static int LUACALL wxLua_wxPropertyGridPageState_DoGetColumnProportion(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoGetColumnProportion
    int returns = (self->DoGetColumnProportion(column));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetItemAtY[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoGetItemAtY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetItemAtY[1] = {{ wxLua_wxPropertyGridPageState_DoGetItemAtY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetItemAtY }};
//     %ungc wxPGProperty* DoGetItemAtY( int y ) const;
static int LUACALL wxLua_wxPropertyGridPageState_DoGetItemAtY(lua_State *L)
{
    // int y
    int y = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoGetItemAtY
    wxPGProperty* returns = (wxPGProperty*)self->DoGetItemAtY(y);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetPropertyValues[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TSTRING, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoGetPropertyValues(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetPropertyValues[1] = {{ wxLua_wxPropertyGridPageState_DoGetPropertyValues, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetPropertyValues }};
//                                    long flags ) const;
static int LUACALL wxLua_wxPropertyGridPageState_DoGetPropertyValues(lua_State *L)
{
    // long flags
    long flags = (long)wxlua_getnumbertype(L, 4);
    // wxPGProperty baseparent
    wxPGProperty * baseparent = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxString listname
    const wxString listname = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoGetPropertyValues
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->DoGetPropertyValues(listname, baseparent, flags));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetRoot[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoGetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetRoot[1] = {{ wxLua_wxPropertyGridPageState_DoGetRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoGetRoot }};
//     %ungc wxPGProperty* DoGetRoot() const;
static int LUACALL wxLua_wxPropertyGridPageState_DoGetRoot(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoGetRoot
    wxPGProperty* returns = (wxPGProperty*)self->DoGetRoot();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoHideProperty[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoHideProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoHideProperty[1] = {{ wxLua_wxPropertyGridPageState_DoHideProperty, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoHideProperty }};
//     bool DoHideProperty( wxPGProperty* p, bool hide, int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridPageState_DoHideProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // bool hide
    bool hide = wxlua_getbooleantype(L, 3);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoHideProperty
    bool returns = (self->DoHideProperty(p, hide, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoInsert[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoInsert(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoInsert[1] = {{ wxLua_wxPropertyGridPageState_DoInsert, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoInsert }};
//                                     %ungc wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridPageState_DoInsert(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // wxPGProperty parent
    wxPGProperty * parent = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, property)) wxluaO_undeletegcobject(L, property);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoInsert
    wxPGProperty* returns = (wxPGProperty*)self->DoInsert(parent, index, property);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoIsPropertySelected[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoIsPropertySelected(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoIsPropertySelected[1] = {{ wxLua_wxPropertyGridPageState_DoIsPropertySelected, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoIsPropertySelected }};
//     bool DoIsPropertySelected( wxPGProperty* prop ) const;
static int LUACALL wxLua_wxPropertyGridPageState_DoIsPropertySelected(lua_State *L)
{
    // wxPGProperty prop
    wxPGProperty * prop = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoIsPropertySelected
    bool returns = (self->DoIsPropertySelected(prop));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoLimitPropertyEditing[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoLimitPropertyEditing(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoLimitPropertyEditing[1] = {{ wxLua_wxPropertyGridPageState_DoLimitPropertyEditing, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoLimitPropertyEditing }};
//     void DoLimitPropertyEditing( wxPGProperty* p, bool limit = true );
static int LUACALL wxLua_wxPropertyGridPageState_DoLimitPropertyEditing(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool limit = true
    bool limit = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoLimitPropertyEditing
    self->DoLimitPropertyEditing(p, limit);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoRemoveFromSelection[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoRemoveFromSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoRemoveFromSelection[1] = {{ wxLua_wxPropertyGridPageState_DoRemoveFromSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoRemoveFromSelection }};
//     void DoRemoveFromSelection( wxPGProperty* prop );
static int LUACALL wxLua_wxPropertyGridPageState_DoRemoveFromSelection(lua_State *L)
{
    // wxPGProperty prop
    wxPGProperty * prop = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoRemoveFromSelection
    self->DoRemoveFromSelection(prop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSelectProperty[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSelectProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSelectProperty[1] = {{ wxLua_wxPropertyGridPageState_DoSelectProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSelectProperty }};
//     bool DoSelectProperty( wxPGProperty* p, unsigned int flags = 0 );
static int LUACALL wxLua_wxPropertyGridPageState_DoSelectProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // unsigned int flags = 0
    unsigned int flags = (argCount >= 3 ? (unsigned int)wxlua_getuintegertype(L, 3) : 0);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSelectProperty
    bool returns = (self->DoSelectProperty(p, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetColumnProportion[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TINTEGER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetColumnProportion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetColumnProportion[1] = {{ wxLua_wxPropertyGridPageState_DoSetColumnProportion, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetColumnProportion }};
//     void DoSetColumnProportion( unsigned int column, int proportion );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetColumnProportion(lua_State *L)
{
    // int proportion
    int proportion = (int)wxlua_getnumbertype(L, 3);
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetColumnProportion
    self->DoSetColumnProportion(column, proportion);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyName[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyName[1] = {{ wxLua_wxPropertyGridPageState_DoSetPropertyName, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyName }};
//     void DoSetPropertyName( wxPGProperty* p, const wxString& newName );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyName(lua_State *L)
{
    // const wxString newName
    const wxString newName = wxlua_getwxStringtype(L, 3);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetPropertyName
    self->DoSetPropertyName(p, newName);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValue[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValue[1] = {{ wxLua_wxPropertyGridPageState_DoSetPropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValue }};
//     bool DoSetPropertyValue( wxPGProperty* p, wxVariant& value );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValue(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetPropertyValue
    bool returns = (self->DoSetPropertyValue(p, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValueString[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValueString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValueString[1] = {{ wxLua_wxPropertyGridPageState_DoSetPropertyValueString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValueString }};
//     bool DoSetPropertyValueString( wxPGProperty* p, const wxString& value );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValueString(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetPropertyValueString
    bool returns = (self->DoSetPropertyValueString(p, value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_wxObject, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr[1] = {{ wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr }};
//     bool DoSetPropertyValueWxObjectPtr( wxPGProperty* p, wxObject* value );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr(lua_State *L)
{
    // wxObject value
    wxObject * value = (wxObject *)wxluaT_getuserdatatype(L, 3, wxluatype_wxObject);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetPropertyValueWxObjectPtr
    bool returns = (self->DoSetPropertyValueWxObjectPtr(p, value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetSelection[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetSelection[1] = {{ wxLua_wxPropertyGridPageState_DoSetSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetSelection }};
//     void DoSetSelection( wxPGProperty* prop );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetSelection(lua_State *L)
{
    // wxPGProperty prop
    wxPGProperty * prop = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetSelection
    self->DoSetSelection(prop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetSplitterPosition[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSetSplitterPosition(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetSplitterPosition[1] = {{ wxLua_wxPropertyGridPageState_DoSetSplitterPosition, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSetSplitterPosition }};
//                                         int flags = 0 );
static int LUACALL wxLua_wxPropertyGridPageState_DoSetSplitterPosition(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int splitterColumn = 0
    int splitterColumn = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // int pos
    int pos = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSetSplitterPosition
    self->DoSetSplitterPosition(pos, splitterColumn, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSort[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSort(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSort[1] = {{ wxLua_wxPropertyGridPageState_DoSort, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSort }};
//     void DoSort( int flags = 0 );
static int LUACALL wxLua_wxPropertyGridPageState_DoSort(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSort
    self->DoSort(flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSortChildren[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_DoSortChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_DoSortChildren[1] = {{ wxLua_wxPropertyGridPageState_DoSortChildren, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridPageState_DoSortChildren }};
//     void DoSortChildren( wxPGProperty* p, int flags = 0 );
static int LUACALL wxLua_wxPropertyGridPageState_DoSortChildren(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call DoSortChildren
    self->DoSortChildren(p, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_EnableCategories[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_EnableCategories(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_EnableCategories[1] = {{ wxLua_wxPropertyGridPageState_EnableCategories, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_EnableCategories }};
//     bool EnableCategories( bool enable );
static int LUACALL wxLua_wxPropertyGridPageState_EnableCategories(lua_State *L)
{
    // bool enable
    bool enable = wxlua_getbooleantype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call EnableCategories
    bool returns = (self->EnableCategories(enable));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_EnsureVirtualHeight[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_EnsureVirtualHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_EnsureVirtualHeight[1] = {{ wxLua_wxPropertyGridPageState_EnsureVirtualHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_EnsureVirtualHeight }};
//     void EnsureVirtualHeight();
static int LUACALL wxLua_wxPropertyGridPageState_EnsureVirtualHeight(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call EnsureVirtualHeight
    self->EnsureVirtualHeight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetActualVirtualHeight[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetActualVirtualHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetActualVirtualHeight[1] = {{ wxLua_wxPropertyGridPageState_GetActualVirtualHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetActualVirtualHeight }};
//     inline unsigned int GetActualVirtualHeight() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetActualVirtualHeight(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetActualVirtualHeight
    unsigned int returns = (self->GetActualVirtualHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnCount[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnCount[1] = {{ wxLua_wxPropertyGridPageState_GetColumnCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnCount }};
//     unsigned int GetColumnCount() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnCount(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetColumnCount
    unsigned int returns = (self->GetColumnCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnFitWidth[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxClientDC, &wxluatype_wxPGProperty, &wxluatype_TINTEGER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnFitWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnFitWidth[1] = {{ wxLua_wxPropertyGridPageState_GetColumnFitWidth, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnFitWidth }};
//                           bool subProps) const;
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnFitWidth(lua_State *L)
{
    // bool subProps
    bool subProps = wxlua_getbooleantype(L, 5);
    // unsigned int col
    unsigned int col = (unsigned int)wxlua_getuintegertype(L, 4);
    // wxPGProperty pwc
    wxPGProperty * pwc = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxClientDC dc
    wxClientDC * dc = (wxClientDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxClientDC);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetColumnFitWidth
    int returns = (self->GetColumnFitWidth(*dc, pwc, col, subProps));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnFullWidth[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxClientDC, &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnFullWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnFullWidth[1] = {{ wxLua_wxPropertyGridPageState_GetColumnFullWidth, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnFullWidth }};
//     int GetColumnFullWidth(wxClientDC &dc, wxPGProperty *p, unsigned int col);
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnFullWidth(lua_State *L)
{
    // unsigned int col
    unsigned int col = (unsigned int)wxlua_getuintegertype(L, 4);
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // wxClientDC dc
    wxClientDC * dc = (wxClientDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxClientDC);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetColumnFullWidth
    int returns = (self->GetColumnFullWidth(*dc, p, col));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnMinWidth[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnMinWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnMinWidth[1] = {{ wxLua_wxPropertyGridPageState_GetColumnMinWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnMinWidth }};
//     int GetColumnMinWidth( int column ) const;
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnMinWidth(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetColumnMinWidth
    int returns = (self->GetColumnMinWidth(column));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnWidth[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnWidth[1] = {{ wxLua_wxPropertyGridPageState_GetColumnWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetColumnWidth }};
//     int GetColumnWidth( unsigned int column ) const;
static int LUACALL wxLua_wxPropertyGridPageState_GetColumnWidth(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetColumnWidth
    int returns = (self->GetColumnWidth(column));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetGrid[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetGrid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetGrid[1] = {{ wxLua_wxPropertyGridPageState_GetGrid, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetGrid }};
//     wxPropertyGrid* GetGrid() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetGrid(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetGrid
    wxPropertyGrid* returns = (wxPropertyGrid*)self->GetGrid();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem1[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetLastItem1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem1[1] = {{ wxLua_wxPropertyGridPageState_GetLastItem1, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem1 }};
//     const wxPGProperty* GetLastItem( int flags = wxPG_ITERATE_DEFAULT ) const;
static int LUACALL wxLua_wxPropertyGridPageState_GetLastItem1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_ITERATE_DEFAULT
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_DEFAULT);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetLastItem
    const wxPGProperty* returns = (const wxPGProperty*)self->GetLastItem(flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetLastItem(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem[1] = {{ wxLua_wxPropertyGridPageState_GetLastItem, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem }};
//     %ungc wxPGProperty* GetLastItem( int flags = wxPG_ITERATE_DEFAULT );
static int LUACALL wxLua_wxPropertyGridPageState_GetLastItem(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_ITERATE_DEFAULT
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_DEFAULT);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetLastItem
    wxPGProperty* returns = (wxPGProperty*)self->GetLastItem(flags);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetPropertyCategory[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetPropertyCategory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetPropertyCategory[1] = {{ wxLua_wxPropertyGridPageState_GetPropertyCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetPropertyCategory }};
//     wxPropertyCategory* GetPropertyCategory( const wxPGProperty* p ) const;
static int LUACALL wxLua_wxPropertyGridPageState_GetPropertyCategory(lua_State *L)
{
    // const wxPGProperty p
    const wxPGProperty * p = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetPropertyCategory
    wxPropertyCategory* returns = (wxPropertyCategory*)self->GetPropertyCategory(p);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyCategory);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetSelection[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetSelection[1] = {{ wxLua_wxPropertyGridPageState_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetSelection }};
//     %ungc wxPGProperty* GetSelection() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetSelection(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetSelection
    wxPGProperty* returns = (wxPGProperty*)self->GetSelection();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight1[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualHeight1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight1[1] = {{ wxLua_wxPropertyGridPageState_GetVirtualHeight1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight1 }};
//     unsigned int GetVirtualHeight();
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualHeight1(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetVirtualHeight
    unsigned int returns = (self->GetVirtualHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualHeight(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight[1] = {{ wxLua_wxPropertyGridPageState_GetVirtualHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight }};
//     unsigned int GetVirtualHeight() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualHeight(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetVirtualHeight
    unsigned int returns = (self->GetVirtualHeight());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualWidth[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualWidth[1] = {{ wxLua_wxPropertyGridPageState_GetVirtualWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualWidth }};
//     int GetVirtualWidth() const;
static int LUACALL wxLua_wxPropertyGridPageState_GetVirtualWidth(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call GetVirtualWidth
    int returns = (self->GetVirtualWidth());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_HitTest[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_wxPoint, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_HitTest(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_HitTest[1] = {{ wxLua_wxPropertyGridPageState_HitTest, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_HitTest }};
//     wxPropertyGridHitTestResult HitTest( const wxPoint& pt ) const;
static int LUACALL wxLua_wxPropertyGridPageState_HitTest(lua_State *L)
{
    // const wxPoint pt
    const wxPoint * pt = (const wxPoint *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPoint);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call HitTest
    // allocate a new object using the copy constructor
    wxPropertyGridHitTestResult* returns = new wxPropertyGridHitTestResult(self->HitTest(*pt));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridHitTestResult);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridHitTestResult);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_IsDisplayed[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_IsDisplayed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_IsDisplayed[1] = {{ wxLua_wxPropertyGridPageState_IsDisplayed, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_IsDisplayed }};
//     inline bool IsDisplayed() const;
static int LUACALL wxLua_wxPropertyGridPageState_IsDisplayed(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call IsDisplayed
    bool returns = (self->IsDisplayed());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_IsInNonCatMode[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_IsInNonCatMode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_IsInNonCatMode[1] = {{ wxLua_wxPropertyGridPageState_IsInNonCatMode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_IsInNonCatMode }};
//     bool IsInNonCatMode() const;
static int LUACALL wxLua_wxPropertyGridPageState_IsInNonCatMode(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call IsInNonCatMode
    bool returns = (self->IsInNonCatMode());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_OnClientWidthChange[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_OnClientWidthChange(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_OnClientWidthChange[1] = {{ wxLua_wxPropertyGridPageState_OnClientWidthChange, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_OnClientWidthChange }};
//                               bool fromOnResize = false );
static int LUACALL wxLua_wxPropertyGridPageState_OnClientWidthChange(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool fromOnResize = false
    bool fromOnResize = (argCount >= 4 ? wxlua_getbooleantype(L, 4) : false);
    // int widthChange
    int widthChange = (int)wxlua_getnumbertype(L, 3);
    // int newWidth
    int newWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call OnClientWidthChange
    self->OnClientWidthChange(newWidth, widthChange, fromOnResize);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded[1] = {{ wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded }};
//     bool PrepareAfterItemsAdded();
static int LUACALL wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call PrepareAfterItemsAdded
    bool returns = (self->PrepareAfterItemsAdded());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_PropagateColSizeDec[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_PropagateColSizeDec(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_PropagateColSizeDec[1] = {{ wxLua_wxPropertyGridPageState_PropagateColSizeDec, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridPageState_PropagateColSizeDec }};
//     void PropagateColSizeDec( int column, int decrease, int dir );
static int LUACALL wxLua_wxPropertyGridPageState_PropagateColSizeDec(lua_State *L)
{
    // int dir
    int dir = (int)wxlua_getnumbertype(L, 4);
    // int decrease
    int decrease = (int)wxlua_getnumbertype(L, 3);
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call PropagateColSizeDec
    self->PropagateColSizeDec(column, decrease, dir);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_RecalculateVirtualHeight[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_RecalculateVirtualHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_RecalculateVirtualHeight[1] = {{ wxLua_wxPropertyGridPageState_RecalculateVirtualHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_RecalculateVirtualHeight }};
//     void RecalculateVirtualHeight();
static int LUACALL wxLua_wxPropertyGridPageState_RecalculateVirtualHeight(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call RecalculateVirtualHeight
    self->RecalculateVirtualHeight();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_ResetColumnSizes[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_ResetColumnSizes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_ResetColumnSizes[1] = {{ wxLua_wxPropertyGridPageState_ResetColumnSizes, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_ResetColumnSizes }};
//     void ResetColumnSizes( int setSplitterFlags );
static int LUACALL wxLua_wxPropertyGridPageState_ResetColumnSizes(lua_State *L)
{
    // int setSplitterFlags
    int setSplitterFlags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call ResetColumnSizes
    self->ResetColumnSizes(setSplitterFlags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetColumnCount[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_SetColumnCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_SetColumnCount[1] = {{ wxLua_wxPropertyGridPageState_SetColumnCount, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetColumnCount }};
//     void SetColumnCount( int colCount );
static int LUACALL wxLua_wxPropertyGridPageState_SetColumnCount(lua_State *L)
{
    // int colCount
    int colCount = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call SetColumnCount
    self->SetColumnCount(colCount);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetSplitterLeft[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_SetSplitterLeft(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_SetSplitterLeft[1] = {{ wxLua_wxPropertyGridPageState_SetSplitterLeft, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetSplitterLeft }};
//     void SetSplitterLeft( bool subProps = false );
static int LUACALL wxLua_wxPropertyGridPageState_SetSplitterLeft(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool subProps = false
    bool subProps = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call SetSplitterLeft
    self->SetSplitterLeft(subProps);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetVirtualWidth[] = { &wxluatype_wxPropertyGridPageState, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_SetVirtualWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_SetVirtualWidth[1] = {{ wxLua_wxPropertyGridPageState_SetVirtualWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_SetVirtualWidth }};
//     void SetVirtualWidth( int width );
static int LUACALL wxLua_wxPropertyGridPageState_SetVirtualWidth(lua_State *L)
{
    // int width
    int width = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call SetVirtualWidth
    self->SetVirtualWidth(width);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_VirtualHeightChanged[] = { &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridPageState_VirtualHeightChanged(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_VirtualHeightChanged[1] = {{ wxLua_wxPropertyGridPageState_VirtualHeightChanged, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_VirtualHeightChanged }};
//     void VirtualHeightChanged();
static int LUACALL wxLua_wxPropertyGridPageState_VirtualHeightChanged(lua_State *L)
{
    // get this
    wxPropertyGridPageState * self = (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridPageState);
    // call VirtualHeightChanged
    self->VirtualHeightChanged();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridPageState_delete[] = { &wxluatype_wxPropertyGridPageState, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_delete }};

static int LUACALL wxLua_wxPropertyGridPageState_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_constructor[1] = {{ wxLua_wxPropertyGridPageState_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyGridPageState();
static int LUACALL wxLua_wxPropertyGridPageState_constructor(lua_State *L)
{
    // call constructor
    wxPropertyGridPageState* returns = new wxPropertyGridPageState();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyGridPageState);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGridPageState);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem_overload[] =
{
    { wxLua_wxPropertyGridPageState_GetLastItem1, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem1 },
    { wxLua_wxPropertyGridPageState_GetLastItem, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetLastItem },
};
static int s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight_overload[] =
{
    { wxLua_wxPropertyGridPageState_GetVirtualHeight1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight1 },
    { wxLua_wxPropertyGridPageState_GetVirtualHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridPageState_GetVirtualHeight },
};
static int s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridPageState_delete_function(void** p)
{
    wxPropertyGridPageState* o = (wxPropertyGridPageState*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridPageState_methods[] = {
    { "BaseGetPropertyByName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_BaseGetPropertyByName, 1, NULL },
    { "CalculateFontAndBitmapStuff", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_CalculateFontAndBitmapStuff, 1, NULL },
    { "CheckColumnWidths", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_CheckColumnWidths, 1, NULL },
    { "DoAppend", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoAppend, 1, NULL },
    { "DoClear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoClear, 1, NULL },
    { "DoClearSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoClearSelection, 1, NULL },
    { "DoCollapse", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoCollapse, 1, NULL },
    { "DoDelete", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoDelete, 1, NULL },
    { "DoExpand", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoExpand, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DoFitColumns", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoFitColumns, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "DoGetColumnProportion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetColumnProportion, 1, NULL },
    { "DoGetItemAtY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetItemAtY, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoGetPropertyValues", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetPropertyValues, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "DoGetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoGetRoot, 1, NULL },
    { "DoHideProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoHideProperty, 1, NULL },
    { "DoInsert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoInsert, 1, NULL },
    { "DoIsPropertySelected", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoIsPropertySelected, 1, NULL },
    { "DoLimitPropertyEditing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoLimitPropertyEditing, 1, NULL },
    { "DoRemoveFromSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoRemoveFromSelection, 1, NULL },
    { "DoSelectProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSelectProperty, 1, NULL },
    { "DoSetColumnProportion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetColumnProportion, 1, NULL },
    { "DoSetPropertyName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoSetPropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "DoSetPropertyValueString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValueString, 1, NULL },

#if (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DoSetPropertyValueWxObjectPtr", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetPropertyValueWxObjectPtr, 1, NULL },
#endif // (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "DoSetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetSelection, 1, NULL },
    { "DoSetSplitterPosition", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSetSplitterPosition, 1, NULL },
    { "DoSort", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSort, 1, NULL },
    { "DoSortChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_DoSortChildren, 1, NULL },
    { "EnableCategories", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_EnableCategories, 1, NULL },
    { "EnsureVirtualHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_EnsureVirtualHeight, 1, NULL },
    { "GetActualVirtualHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetActualVirtualHeight, 1, NULL },
    { "GetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnCount, 1, NULL },

#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetColumnFitWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnFitWidth, 1, NULL },
    { "GetColumnFullWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnFullWidth, 1, NULL },
#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetColumnMinWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnMinWidth, 1, NULL },
    { "GetColumnWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetColumnWidth, 1, NULL },
    { "GetGrid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetGrid, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetLastItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem_overload, s_wxluafunc_wxLua_wxPropertyGridPageState_GetLastItem_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetPropertyCategory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetPropertyCategory, 1, NULL },
    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetSelection, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetVirtualHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight_overload, s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualHeight_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetVirtualWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_GetVirtualWidth, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "HitTest", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_HitTest, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "IsDisplayed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_IsDisplayed, 1, NULL },
    { "IsInNonCatMode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_IsInNonCatMode, 1, NULL },
    { "OnClientWidthChange", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_OnClientWidthChange, 1, NULL },
    { "PrepareAfterItemsAdded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_PrepareAfterItemsAdded, 1, NULL },
    { "PropagateColSizeDec", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_PropagateColSizeDec, 1, NULL },
    { "RecalculateVirtualHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_RecalculateVirtualHeight, 1, NULL },
    { "ResetColumnSizes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_ResetColumnSizes, 1, NULL },
    { "SetColumnCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_SetColumnCount, 1, NULL },
    { "SetSplitterLeft", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_SetSplitterLeft, 1, NULL },
    { "SetVirtualWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_SetVirtualWidth, 1, NULL },
    { "VirtualHeightChanged", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridPageState_VirtualHeightChanged, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyGridPageState_delete, 1, NULL },
    { "wxPropertyGridPageState", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyGridPageState_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPropertyGridPageState_methodCount = sizeof(wxPropertyGridPageState_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGPropArgCls
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGPropArgCls'
int wxluatype_wxPGPropArgCls = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_GetName[] = { &wxluatype_wxPGPropArgCls, NULL };
static int LUACALL wxLua_wxPGPropArgCls_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetName[1] = {{ wxLua_wxPGPropArgCls_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetName }};
//     const wxString& GetName();
static int LUACALL wxLua_wxPGPropArgCls_GetName(lua_State *L)
{
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr2[] = { &wxluatype_wxPGPropArgCls, &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPGPropArgCls_GetPtr2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr2[1] = {{ wxLua_wxPGPropArgCls_GetPtr2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr2 }};
//     %ungc wxPGProperty* GetPtr( const wxPropertyGridInterface* iface ) const;
static int LUACALL wxLua_wxPGPropArgCls_GetPtr2(lua_State *L)
{
    // const wxPropertyGridInterface iface
    const wxPropertyGridInterface * iface = (const wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridInterface);
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call GetPtr
    wxPGProperty* returns = (wxPGProperty*)self->GetPtr(iface);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr1[] = { &wxluatype_wxPGPropArgCls, &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPGPropArgCls_GetPtr1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr1[1] = {{ wxLua_wxPGPropArgCls_GetPtr1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr1 }};
//     %ungc wxPGProperty* GetPtr( wxPropertyGridInterface* iface ) const;
static int LUACALL wxLua_wxPGPropArgCls_GetPtr1(lua_State *L)
{
    // wxPropertyGridInterface iface
    wxPropertyGridInterface * iface = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridInterface);
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call GetPtr
    wxPGProperty* returns = (wxPGProperty*)self->GetPtr(iface);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr[] = { &wxluatype_wxPGPropArgCls, NULL };
static int LUACALL wxLua_wxPGPropArgCls_GetPtr(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr[1] = {{ wxLua_wxPGPropArgCls_GetPtr, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr }};
//     %ungc wxPGProperty* GetPtr() const;
static int LUACALL wxLua_wxPGPropArgCls_GetPtr(lua_State *L)
{
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call GetPtr
    wxPGProperty* returns = (wxPGProperty*)self->GetPtr();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr0[] = { &wxluatype_wxPGPropArgCls, NULL };
static int LUACALL wxLua_wxPGPropArgCls_GetPtr0(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr0[1] = {{ wxLua_wxPGPropArgCls_GetPtr0, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr0 }};
//     %ungc wxPGProperty* GetPtr0() const;
static int LUACALL wxLua_wxPGPropArgCls_GetPtr0(lua_State *L)
{
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call GetPtr0
    wxPGProperty* returns = (wxPGProperty*)self->GetPtr0();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_HasName[] = { &wxluatype_wxPGPropArgCls, NULL };
static int LUACALL wxLua_wxPGPropArgCls_HasName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_HasName[1] = {{ wxLua_wxPGPropArgCls_HasName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_HasName }};
//     bool HasName() const;
static int LUACALL wxLua_wxPGPropArgCls_HasName(lua_State *L)
{
    // get this
    wxPGPropArgCls * self = (wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call HasName
    bool returns = (self->HasName());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_delete[] = { &wxluatype_wxPGPropArgCls, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor5[] = { &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor5(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor5[1] = {{ wxLua_wxPGPropArgCls_constructor5, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor5 }};
//     wxPGPropArgCls( int );
static int LUACALL wxLua_wxPGPropArgCls_constructor5(lua_State *L)
{
    // int arg1
    int arg1 = (int)wxlua_getnumbertype(L, 1);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(arg1);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor4[] = { &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor4[1] = {{ wxLua_wxPGPropArgCls_constructor4, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor4 }};
//     wxPGPropArgCls( const wchar_t* str );
static int LUACALL wxLua_wxPGPropArgCls_constructor4(lua_State *L)
{
    // const wchar_t str
    const wchar_t * str = (const wchar_t *)wxlua_touserdata(L, 1);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(str);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor3[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor3[1] = {{ wxLua_wxPGPropArgCls_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor3 }};
//     wxPGPropArgCls( const char* str );
static int LUACALL wxLua_wxPGPropArgCls_constructor3(lua_State *L)
{
    // const char str
    const char * str = wxlua_getstringtype(L, 1);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(str);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor2[] = { &wxluatype_wxPGPropArgCls, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor2[1] = {{ wxLua_wxPGPropArgCls_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor2 }};
//     wxPGPropArgCls( const wxPGPropArgCls& id );
static int LUACALL wxLua_wxPGPropArgCls_constructor2(lua_State *L)
{
    // const wxPGPropArgCls id
    const wxPGPropArgCls * id = (const wxPGPropArgCls *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPropArgCls);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(*id);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor1[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor1[1] = {{ wxLua_wxPGPropArgCls_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor1 }};
//     wxPGPropArgCls( const wxString& str );
static int LUACALL wxLua_wxPGPropArgCls_constructor1(lua_State *L)
{
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(str);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGPropArgCls_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor[1] = {{ wxLua_wxPGPropArgCls_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor }};
//     wxPGPropArgCls( const wxPGProperty* property );
static int LUACALL wxLua_wxPGPropArgCls_constructor(lua_State *L)
{
    // const wxPGProperty property
    const wxPGProperty * property = (const wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call constructor
    wxPGPropArgCls* returns = new wxPGPropArgCls(property);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGPropArgCls);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGPropArgCls);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr_overload[] =
{
    { wxLua_wxPGPropArgCls_GetPtr2, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr2 },
    { wxLua_wxPGPropArgCls_GetPtr1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr1 },
    { wxLua_wxPGPropArgCls_GetPtr, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_GetPtr },
};
static int s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr_overload_count = sizeof(s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPropArgCls_constructor_overload[] =
{
    { wxLua_wxPGPropArgCls_constructor5, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor5 },
    { wxLua_wxPGPropArgCls_constructor4, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor4 },
    { wxLua_wxPGPropArgCls_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor3 },
    { wxLua_wxPGPropArgCls_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor2 },
    { wxLua_wxPGPropArgCls_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor1 },
    { wxLua_wxPGPropArgCls_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGPropArgCls_constructor },
};
static int s_wxluafunc_wxLua_wxPGPropArgCls_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGPropArgCls_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGPropArgCls_delete_function(void** p)
{
    wxPGPropArgCls* o = (wxPGPropArgCls*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGPropArgCls_methods[] = {
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPropArgCls_GetName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPtr", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr_overload, s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetPtr0", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPropArgCls_GetPtr0, 1, NULL },
    { "HasName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPropArgCls_HasName, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGPropArgCls_delete, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPGPropArgCls", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGPropArgCls_constructor_overload, s_wxluafunc_wxLua_wxPGPropArgCls_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGPropArgCls_methodCount = sizeof(wxPGPropArgCls_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyGridInterface
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyGridInterface'
int wxluatype_wxPropertyGridInterface = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Append[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Append(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Append[1] = {{ wxLua_wxPropertyGridInterface_Append, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Append }};
//     %ungc wxPGProperty* Append( %ungc wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridInterface_Append(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, property)) wxluaO_undeletegcobject(L, property);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Append
    wxPGProperty* returns = (wxPGProperty*)self->Append(property);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_AppendIn1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn1[1] = {{ wxLua_wxPropertyGridInterface_AppendIn1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn1 }};
//     %ungc wxPGProperty* AppendIn( const wxString& id, wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_AppendIn1(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call AppendIn
    wxPGProperty* returns = (wxPGProperty*)self->AppendIn(id, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_AppendIn(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn[1] = {{ wxLua_wxPropertyGridInterface_AppendIn, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn }};
//     %ungc wxPGProperty* AppendIn( const wxPGProperty*& id, wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_AppendIn(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call AppendIn
    wxPGProperty* returns = (wxPGProperty*)self->AppendIn(id, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_BeginAddChildren1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren1[1] = {{ wxLua_wxPropertyGridInterface_BeginAddChildren1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren1 }};
//     void BeginAddChildren( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_BeginAddChildren1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call BeginAddChildren
    self->BeginAddChildren(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_BeginAddChildren(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren[1] = {{ wxLua_wxPropertyGridInterface_BeginAddChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren }};
//     void BeginAddChildren( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_BeginAddChildren(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call BeginAddChildren
    self->BeginAddChildren(id);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ChangePropertyValue1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue1[1] = {{ wxLua_wxPropertyGridInterface_ChangePropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue1 }};
//     bool ChangePropertyValue( const wxString& id, wxVariant newValue );
static int LUACALL wxLua_wxPropertyGridInterface_ChangePropertyValue1(lua_State *L)
{
    // wxVariant newValue
    wxVariant newValue = wxlua_getwxVarianttype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ChangePropertyValue
    bool returns = (self->ChangePropertyValue(id, newValue));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ChangePropertyValue(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue[1] = {{ wxLua_wxPropertyGridInterface_ChangePropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue }};
//     bool ChangePropertyValue( const wxPGProperty*& id, wxVariant newValue );
static int LUACALL wxLua_wxPropertyGridInterface_ChangePropertyValue(lua_State *L)
{
    // wxVariant newValue
    wxVariant newValue = wxlua_getwxVarianttype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ChangePropertyValue
    bool returns = (self->ChangePropertyValue(id, newValue));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Clear[] = { &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Clear[1] = {{ wxLua_wxPropertyGridInterface_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Clear }};
//     virtual void Clear() = 0;
static int LUACALL wxLua_wxPropertyGridInterface_Clear(lua_State *L)
{
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ClearModifiedStatus[] = { &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ClearModifiedStatus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ClearModifiedStatus[1] = {{ wxLua_wxPropertyGridInterface_ClearModifiedStatus, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ClearModifiedStatus }};
//     void ClearModifiedStatus();
static int LUACALL wxLua_wxPropertyGridInterface_ClearModifiedStatus(lua_State *L)
{
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ClearModifiedStatus
    self->ClearModifiedStatus();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ClearSelection[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ClearSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ClearSelection[1] = {{ wxLua_wxPropertyGridInterface_ClearSelection, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ClearSelection }};
//     bool ClearSelection( bool validation = false);
static int LUACALL wxLua_wxPropertyGridInterface_ClearSelection(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool validation = false
    bool validation = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : false);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ClearSelection
    bool returns = (self->ClearSelection(validation));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Collapse1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse1[1] = {{ wxLua_wxPropertyGridInterface_Collapse1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse1 }};
//     bool Collapse( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_Collapse1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Collapse
    bool returns = (self->Collapse(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Collapse(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse[1] = {{ wxLua_wxPropertyGridInterface_Collapse, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse }};
//     bool Collapse( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_Collapse(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Collapse
    bool returns = (self->Collapse(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_CollapseAll[] = { &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_CollapseAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_CollapseAll[1] = {{ wxLua_wxPropertyGridInterface_CollapseAll, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_CollapseAll }};
//     bool CollapseAll();
static int LUACALL wxLua_wxPropertyGridInterface_CollapseAll(lua_State *L)
{
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call CollapseAll
    bool returns = (self->CollapseAll());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_DeleteProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty1[1] = {{ wxLua_wxPropertyGridInterface_DeleteProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty1 }};
//     void DeleteProperty( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_DeleteProperty1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call DeleteProperty
    self->DeleteProperty(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_DeleteProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty[1] = {{ wxLua_wxPropertyGridInterface_DeleteProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty }};
//     void DeleteProperty( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_DeleteProperty(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call DeleteProperty
    self->DeleteProperty(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_DisableProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty1[1] = {{ wxLua_wxPropertyGridInterface_DisableProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty1 }};
//     bool DisableProperty( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_DisableProperty1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call DisableProperty
    bool returns = (self->DisableProperty(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_DisableProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty[1] = {{ wxLua_wxPropertyGridInterface_DisableProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty }};
//     bool DisableProperty( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_DisableProperty(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call DisableProperty
    bool returns = (self->DisableProperty(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_EditorValidate[] = { &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_EditorValidate(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EditorValidate[1] = {{ wxLua_wxPropertyGridInterface_EditorValidate, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EditorValidate }};
//     bool EditorValidate();
static int LUACALL wxLua_wxPropertyGridInterface_EditorValidate(lua_State *L)
{
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call EditorValidate
    bool returns = (self->EditorValidate());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_EnableProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty1[1] = {{ wxLua_wxPropertyGridInterface_EnableProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty1 }};
//     bool EnableProperty( const wxString& id, bool enable = true );
static int LUACALL wxLua_wxPropertyGridInterface_EnableProperty1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call EnableProperty
    bool returns = (self->EnableProperty(id, enable));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_EnableProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty[1] = {{ wxLua_wxPropertyGridInterface_EnableProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty }};
//     bool EnableProperty( const wxPGProperty*& id, bool enable = true );
static int LUACALL wxLua_wxPropertyGridInterface_EnableProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call EnableProperty
    bool returns = (self->EnableProperty(id, enable));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_EndAddChildren1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren1[1] = {{ wxLua_wxPropertyGridInterface_EndAddChildren1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren1 }};
//     void EndAddChildren( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_EndAddChildren1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call EndAddChildren
    self->EndAddChildren(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_EndAddChildren(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren[1] = {{ wxLua_wxPropertyGridInterface_EndAddChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren }};
//     void EndAddChildren( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_EndAddChildren(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call EndAddChildren
    self->EndAddChildren(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Expand1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Expand1[1] = {{ wxLua_wxPropertyGridInterface_Expand1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand1 }};
//     bool Expand( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_Expand1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Expand
    bool returns = (self->Expand(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Expand(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Expand[1] = {{ wxLua_wxPropertyGridInterface_Expand, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand }};
//     bool Expand( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_Expand(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Expand
    bool returns = (self->Expand(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ExpandAll[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ExpandAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ExpandAll[1] = {{ wxLua_wxPropertyGridInterface_ExpandAll, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ExpandAll }};
//     bool ExpandAll( bool expand = true );
static int LUACALL wxLua_wxPropertyGridInterface_ExpandAll(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool expand = true
    bool expand = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ExpandAll
    bool returns = (self->ExpandAll(expand));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetColumnProportion[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetColumnProportion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetColumnProportion[1] = {{ wxLua_wxPropertyGridInterface_GetColumnProportion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetColumnProportion }};
//     int GetColumnProportion( unsigned int column ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetColumnProportion(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetColumnProportion
    int returns = (self->GetColumnProportion(column));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetEditorByName[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetEditorByName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetEditorByName[1] = {{ wxLua_wxPropertyGridInterface_GetEditorByName, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetEditorByName }};
//     static wxPGEditor* GetEditorByName( const wxString& editorName );
static int LUACALL wxLua_wxPropertyGridInterface_GetEditorByName(lua_State *L)
{
    // const wxString editorName
    const wxString editorName = wxlua_getwxStringtype(L, 1);
    // call GetEditorByName
    wxPGEditor* returns = (wxPGEditor*)wxPropertyGridInterface::GetEditorByName(editorName);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetFirst1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst1[1] = {{ wxLua_wxPropertyGridInterface_GetFirst1, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst1 }};
//     const wxPGProperty* GetFirst( int flags = wxPG_ITERATE_ALL ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetFirst1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_ITERATE_ALL
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_ALL);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetFirst
    const wxPGProperty* returns = (const wxPGProperty*)self->GetFirst(flags);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetFirst(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst[1] = {{ wxLua_wxPropertyGridInterface_GetFirst, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst }};
//     %ungc wxPGProperty* GetFirst( int flags = wxPG_ITERATE_ALL );
static int LUACALL wxLua_wxPropertyGridInterface_GetFirst(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_ITERATE_ALL
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_ITERATE_ALL);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetFirst
    wxPGProperty* returns = (wxPGProperty*)self->GetFirst(flags);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetFirstChild1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild1[1] = {{ wxLua_wxPropertyGridInterface_GetFirstChild1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild1 }};
//     %ungc wxPGProperty* GetFirstChild( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetFirstChild1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetFirstChild
    wxPGProperty* returns = (wxPGProperty*)self->GetFirstChild(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetFirstChild(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild[1] = {{ wxLua_wxPropertyGridInterface_GetFirstChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild }};
//     %ungc wxPGProperty* GetFirstChild( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetFirstChild(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetFirstChild
    wxPGProperty* returns = (wxPGProperty*)self->GetFirstChild(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetProperty[1] = {{ wxLua_wxPropertyGridInterface_GetProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetProperty }};
//     %ungc wxPGProperty* GetProperty( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetProperty(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetProperty
    wxPGProperty* returns = (wxPGProperty*)self->GetProperty(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttribute1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyAttribute1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute1 }};
//     wxVariant GetPropertyAttribute( const wxString& id, const wxString& attrName ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttribute1(lua_State *L)
{
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyAttribute
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyAttribute(id, attrName));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttribute(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute }};
//     wxVariant GetPropertyAttribute( const wxPGProperty*& id, const wxString& attrName ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttribute(lua_State *L)
{
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyAttribute
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyAttribute(id, attrName));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttributes1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyAttributes1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes1 }};
//     const wxPGAttributeStorage& GetPropertyAttributes( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttributes1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyAttributes
    const wxPGAttributeStorage* returns = (const wxPGAttributeStorage*)&self->GetPropertyAttributes(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGAttributeStorage);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttributes(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyAttributes, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes }};
//     const wxPGAttributeStorage& GetPropertyAttributes( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyAttributes(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyAttributes
    const wxPGAttributeStorage* returns = (const wxPGAttributeStorage*)&self->GetPropertyAttributes(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGAttributeStorage);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1 }};
//     wxColour GetPropertyBackgroundColour( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyBackgroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetPropertyBackgroundColour(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour }};
//     wxColour GetPropertyBackgroundColour( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyBackgroundColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetPropertyBackgroundColour(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByLabel[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByLabel[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyByLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByLabel }};
//     %ungc wxPGProperty* GetPropertyByLabel( const wxString& label ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByLabel(lua_State *L)
{
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyByLabel
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyByLabel(label);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByName1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyByName1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName1 }};
//                                      const wxString& subname ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByName1(lua_State *L)
{
    // const wxString subname
    const wxString subname = wxlua_getwxStringtype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyByName
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyByName(name, subname);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByName(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyByName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName }};
//     %ungc wxPGProperty* GetPropertyByName( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyByName
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyByName(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByNameA[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByNameA(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByNameA[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyByNameA, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByNameA }};
//     %ungc wxPGProperty* GetPropertyByNameA( const wxString& name ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyByNameA(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyByNameA
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyByNameA(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyCategory1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory1 }};
//     %ungc wxPropertyCategory* GetPropertyCategory( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyCategory1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyCategory
    wxPropertyCategory* returns = (wxPropertyCategory*)self->GetPropertyCategory(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyCategory);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyCategory(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory }};
//     %ungc wxPropertyCategory* GetPropertyCategory( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyCategory(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyCategory
    wxPropertyCategory* returns = (wxPropertyCategory*)self->GetPropertyCategory(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyCategory);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyClientData1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyClientData1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData1 }};
//     void* GetPropertyClientData( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyClientData1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyClientData
    void* returns = (void*)self->GetPropertyClientData(id);
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyClientData(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyClientData, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData }};
//     %ungc void* GetPropertyClientData( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyClientData(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyClientData
    void* returns = (void*)self->GetPropertyClientData(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyEditor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyEditor1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor1 }};
//     const wxPGEditor* GetPropertyEditor( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyEditor1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyEditor
    const wxPGEditor* returns = (const wxPGEditor*)self->GetPropertyEditor(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyEditor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyEditor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor }};
//     const wxPGEditor* GetPropertyEditor( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyEditor(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyEditor
    const wxPGEditor* returns = (const wxPGEditor*)self->GetPropertyEditor(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyHelpString1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyHelpString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString1 }};
//     wxString GetPropertyHelpString( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyHelpString1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyHelpString
    wxString returns = (self->GetPropertyHelpString(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyHelpString(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyHelpString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString }};
//     wxString GetPropertyHelpString( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyHelpString(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyHelpString
    wxString returns = (self->GetPropertyHelpString(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyImage1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyImage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage1 }};
//     wxBitmap* GetPropertyImage( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyImage1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyImage
    wxBitmap* returns = (wxBitmap*)self->GetPropertyImage(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBitmap);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyImage(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage }};
//     wxBitmap* GetPropertyImage( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyImage(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyImage
    wxBitmap* returns = (wxBitmap*)self->GetPropertyImage(id);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBitmap);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyLabel1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyLabel1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel1 }};
//     const wxString& GetPropertyLabel( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyLabel1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyLabel
    wxString returns = (self->GetPropertyLabel(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyLabel(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel }};
//     const wxString& GetPropertyLabel( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyLabel(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyLabel
    wxString returns = (self->GetPropertyLabel(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyName[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyName[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyName }};
//     wxString GetPropertyName( wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyName(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyName
    wxString returns = (self->GetPropertyName(property));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyParent1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyParent1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent1 }};
//     %ungc wxPGProperty* GetPropertyParent( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyParent1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyParent
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyParent(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyParent(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent }};
//     %ungc wxPGProperty* GetPropertyParent( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyParent(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyParent
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyParent(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyTextColour1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyTextColour1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour1 }};
//     wxColour GetPropertyTextColour( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyTextColour1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyTextColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetPropertyTextColour(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyTextColour(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour }};
//     wxColour GetPropertyTextColour( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyTextColour(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyTextColour
    // allocate a new object using the copy constructor
    wxColour* returns = new wxColour(self->GetPropertyTextColour(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxColour);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValidator1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValidator1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator1 }};
//     %ungc wxValidator* GetPropertyValidator( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValidator1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValidator
    wxValidator* returns = (wxValidator*)self->GetPropertyValidator(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValidator(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValidator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator }};
//     %ungc wxValidator* GetPropertyValidator( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValidator(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValidator
    wxValidator* returns = (wxValidator*)self->GetPropertyValidator(id);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValue1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValue1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue1 }};
//     wxVariant GetPropertyValue( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValue1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyValue(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValue(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue }};
//     wxVariant GetPropertyValue( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValue(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyValue(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1 }};
//     wxArrayInt GetPropertyValueAsArrayInt( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsArrayInt
    // allocate a new object using the copy constructor
    wxArrayInt* returns = new wxArrayInt(self->GetPropertyValueAsArrayInt(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayInt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayInt);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt }};
//     wxArrayInt GetPropertyValueAsArrayInt( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsArrayInt
    // allocate a new object using the copy constructor
    wxArrayInt* returns = new wxArrayInt(self->GetPropertyValueAsArrayInt(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayInt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayInt);

    return 1;
}

#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1 }};
//     wxArrayString GetPropertyValueAsArrayString( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsArrayString
    // allocate a new object using the copy constructor
    wxArrayString* returns = new wxArrayString(self->GetPropertyValueAsArrayString(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayString);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayString);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString }};
//     wxArrayString GetPropertyValueAsArrayString( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsArrayString
    // allocate a new object using the copy constructor
    wxArrayString* returns = new wxArrayString(self->GetPropertyValueAsArrayString(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayString);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayString);

    return 1;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1 }};
//     bool GetPropertyValueAsBool( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsBool
    bool returns = (self->GetPropertyValueAsBool(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsBool(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsBool, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool }};
//     bool GetPropertyValueAsBool( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsBool(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsBool
    bool returns = (self->GetPropertyValueAsBool(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1 }};
//     wxDateTime GetPropertyValueAsDateTime( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsDateTime
    // allocate a new object using the copy constructor
    wxDateTime* returns = new wxDateTime(self->GetPropertyValueAsDateTime(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxDateTime);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDateTime);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime }};
//     wxDateTime GetPropertyValueAsDateTime( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsDateTime
    // allocate a new object using the copy constructor
    wxDateTime* returns = new wxDateTime(self->GetPropertyValueAsDateTime(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxDateTime);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxDateTime);

    return 1;
}

#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1 }};
//     double GetPropertyValueAsDouble( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsDouble
    double returns = (self->GetPropertyValueAsDouble(id));
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble }};
//     double GetPropertyValueAsDouble( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsDouble
    double returns = (self->GetPropertyValueAsDouble(id));
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1 }};
//     int GetPropertyValueAsInt( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsInt
    int returns = (self->GetPropertyValueAsInt(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsInt(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsInt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt }};
//     int GetPropertyValueAsInt( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsInt(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsInt
    int returns = (self->GetPropertyValueAsInt(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1 }};
//     long GetPropertyValueAsLong( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsLong
    long returns = (self->GetPropertyValueAsLong(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLong(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong }};
//     long GetPropertyValueAsLong( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLong(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsLong
    long returns = (self->GetPropertyValueAsLong(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1 }};
//     wxLongLong GetPropertyValueAsLongLong( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsLongLong
    // allocate a new object using the copy constructor
    wxLongLong* returns = new wxLongLong(self->GetPropertyValueAsLongLong(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxLongLong);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLongLong);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong }};
//     wxLongLong GetPropertyValueAsLongLong( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsLongLong
    // allocate a new object using the copy constructor
    wxLongLong* returns = new wxLongLong(self->GetPropertyValueAsLongLong(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxLongLong);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxLongLong);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsString1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString1 }};
//     wxString GetPropertyValueAsString( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsString1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsString
    wxString returns = (self->GetPropertyValueAsString(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsString(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString }};
//     wxString GetPropertyValueAsString( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsString(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsString
    wxString returns = (self->GetPropertyValueAsString(id));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1 }};
//     unsigned long GetPropertyValueAsULong( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsULong
    unsigned long returns = (self->GetPropertyValueAsULong(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULong(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsULong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong }};
//     unsigned long GetPropertyValueAsULong( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULong(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsULong
    unsigned long returns = (self->GetPropertyValueAsULong(id));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1 }};
//     wxULongLong GetPropertyValueAsULongLong( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsULongLong
    // allocate a new object using the copy constructor
    wxULongLong* returns = new wxULongLong(self->GetPropertyValueAsULongLong(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxULongLong);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxULongLong);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong }};
//     wxULongLong GetPropertyValueAsULongLong( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValueAsULongLong
    // allocate a new object using the copy constructor
    wxULongLong* returns = new wxULongLong(self->GetPropertyValueAsULongLong(id));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxULongLong);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxULongLong);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValues[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValues(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValues[1] = {{ wxLua_wxPropertyGridInterface_GetPropertyValues, WXLUAMETHOD_METHOD, 1, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValues }};
//                                  wxPGProperty* baseparent = NULL, long flags = 0 ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetPropertyValues(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long flags = 0
    long flags = (argCount >= 4 ? (long)wxlua_getnumbertype(L, 4) : 0);
    // wxPGProperty baseparent = NULL
    wxPGProperty * baseparent = (argCount >= 3 ? (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty) : NULL);
    // const wxString listname = wxEmptyString
    const wxString listname = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetPropertyValues
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetPropertyValues(listname, baseparent, flags));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetSelection[] = { &wxluatype_wxPropertyGridInterface, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetSelection[1] = {{ wxLua_wxPropertyGridInterface_GetSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetSelection }};
//     %ungc wxPGProperty* GetSelection() const;
static int LUACALL wxLua_wxPropertyGridInterface_GetSelection(lua_State *L)
{
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetSelection
    wxPGProperty* returns = (wxPGProperty*)self->GetSelection();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetVIterator[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_GetVIterator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetVIterator[1] = {{ wxLua_wxPropertyGridInterface_GetVIterator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetVIterator }};
//     virtual wxPGVIterator GetVIterator( int flags ) const;
static int LUACALL wxLua_wxPropertyGridInterface_GetVIterator(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call GetVIterator
    // allocate a new object using the copy constructor
    wxPGVIterator* returns = new wxPGVIterator(self->GetVIterator(flags));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGVIterator);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGVIterator);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_HideProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty1[1] = {{ wxLua_wxPropertyGridInterface_HideProperty1, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty1 }};
//     bool HideProperty( const wxString& id, bool hide = true, int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_HideProperty1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // bool hide = true
    bool hide = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call HideProperty
    bool returns = (self->HideProperty(id, hide, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_HideProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty[1] = {{ wxLua_wxPropertyGridInterface_HideProperty, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty }};
//     bool HideProperty( const wxPGProperty*& id, bool hide = true, int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_HideProperty(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // bool hide = true
    bool hide = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call HideProperty
    bool returns = (self->HideProperty(id, hide, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static int LUACALL wxLua_wxPropertyGridInterface_InitAllTypeHandlers(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_InitAllTypeHandlers[1] = {{ wxLua_wxPropertyGridInterface_InitAllTypeHandlers, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static void InitAllTypeHandlers();
static int LUACALL wxLua_wxPropertyGridInterface_InitAllTypeHandlers(lua_State *L)
{
    // call InitAllTypeHandlers
    wxPropertyGridInterface::InitAllTypeHandlers();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert3[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Insert3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Insert3[1] = {{ wxLua_wxPropertyGridInterface_Insert3, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert3 }};
//     %ungc wxPGProperty* Insert( const wxString& parent, int index, %ungc wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_Insert3(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxString parent
    const wxString parent = wxlua_getwxStringtype(L, 2);
    if (wxluaO_isgcobject(L, newProperty)) wxluaO_undeletegcobject(L, newProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Insert
    wxPGProperty* returns = (wxPGProperty*)self->Insert(parent, index, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert2[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Insert2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Insert2[1] = {{ wxLua_wxPropertyGridInterface_Insert2, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert2 }};
//     %ungc wxPGProperty* Insert( const wxPGProperty*& parent, int index, %ungc wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_Insert2(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGProperty);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty parent
    const wxPGProperty * parent = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, newProperty)) wxluaO_undeletegcobject(L, newProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Insert
    wxPGProperty* returns = (wxPGProperty*)self->Insert(parent, index, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Insert1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Insert1[1] = {{ wxLua_wxPropertyGridInterface_Insert1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert1 }};
//     %ungc wxPGProperty* Insert( const wxString& priorThis, %ungc wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_Insert1(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxString priorThis
    const wxString priorThis = wxlua_getwxStringtype(L, 2);
    if (wxluaO_isgcobject(L, newProperty)) wxluaO_undeletegcobject(L, newProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Insert
    wxPGProperty* returns = (wxPGProperty*)self->Insert(priorThis, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Insert(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Insert[1] = {{ wxLua_wxPropertyGridInterface_Insert, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert }};
//     %ungc wxPGProperty* Insert( const wxPGProperty*& priorThis, %ungc wxPGProperty* newProperty );
static int LUACALL wxLua_wxPropertyGridInterface_Insert(lua_State *L)
{
    // wxPGProperty newProperty
    wxPGProperty * newProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxPGProperty priorThis
    const wxPGProperty * priorThis = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, newProperty)) wxluaO_undeletegcobject(L, newProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Insert
    wxPGProperty* returns = (wxPGProperty*)self->Insert(priorThis, newProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyCategory1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory1 }};
//     bool IsPropertyCategory( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyCategory1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyCategory
    bool returns = (self->IsPropertyCategory(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyCategory(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory }};
//     bool IsPropertyCategory( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyCategory(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyCategory
    bool returns = (self->IsPropertyCategory(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyEnabled1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyEnabled1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled1 }};
//     bool IsPropertyEnabled( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyEnabled1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyEnabled
    bool returns = (self->IsPropertyEnabled(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyEnabled(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyEnabled, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled }};
//     bool IsPropertyEnabled( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyEnabled(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyEnabled
    bool returns = (self->IsPropertyEnabled(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyExpanded1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyExpanded1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded1 }};
//     bool IsPropertyExpanded( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyExpanded1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyExpanded
    bool returns = (self->IsPropertyExpanded(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyExpanded(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyExpanded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded }};
//     bool IsPropertyExpanded( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyExpanded(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyExpanded
    bool returns = (self->IsPropertyExpanded(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyModified1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyModified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified1 }};
//     bool IsPropertyModified( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyModified1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyModified
    bool returns = (self->IsPropertyModified(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyModified(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyModified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified }};
//     bool IsPropertyModified( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyModified(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyModified
    bool returns = (self->IsPropertyModified(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertySelected1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertySelected1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected1 }};
//     bool IsPropertySelected( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertySelected1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertySelected
    bool returns = (self->IsPropertySelected(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertySelected(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected[1] = {{ wxLua_wxPropertyGridInterface_IsPropertySelected, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected }};
//     bool IsPropertySelected( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertySelected(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertySelected
    bool returns = (self->IsPropertySelected(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyShown1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyShown1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown1 }};
//     bool IsPropertyShown( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyShown1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyShown
    bool returns = (self->IsPropertyShown(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyShown(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyShown, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown }};
//     bool IsPropertyShown( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyShown(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyShown
    bool returns = (self->IsPropertyShown(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1 }};
//     bool IsPropertyValueUnspecified( const wxString& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyValueUnspecified
    bool returns = (self->IsPropertyValueUnspecified(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified[1] = {{ wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified }};
//     bool IsPropertyValueUnspecified( const wxPGProperty*& id ) const;
static int LUACALL wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call IsPropertyValueUnspecified
    bool returns = (self->IsPropertyValueUnspecified(id));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_LimitPropertyEditing1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing1[1] = {{ wxLua_wxPropertyGridInterface_LimitPropertyEditing1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing1 }};
//     void LimitPropertyEditing( const wxString& id, bool limit = true );
static int LUACALL wxLua_wxPropertyGridInterface_LimitPropertyEditing1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool limit = true
    bool limit = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call LimitPropertyEditing
    self->LimitPropertyEditing(id, limit);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_LimitPropertyEditing(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing[1] = {{ wxLua_wxPropertyGridInterface_LimitPropertyEditing, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing }};
//     void LimitPropertyEditing( const wxPGProperty*& id, bool limit = true );
static int LUACALL wxLua_wxPropertyGridInterface_LimitPropertyEditing(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool limit = true
    bool limit = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call LimitPropertyEditing
    self->LimitPropertyEditing(id, limit);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_RefreshGrid[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPropertyGridPageState, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_RefreshGrid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RefreshGrid[1] = {{ wxLua_wxPropertyGridInterface_RefreshGrid, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RefreshGrid }};
//     virtual void RefreshGrid( wxPropertyGridPageState* state = NULL );
static int LUACALL wxLua_wxPropertyGridInterface_RefreshGrid(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxPropertyGridPageState state = NULL
    wxPropertyGridPageState * state = (argCount >= 2 ? (wxPropertyGridPageState *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGridPageState) : NULL);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call RefreshGrid
    self->RefreshGrid(state);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_RefreshProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_RefreshProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RefreshProperty[1] = {{ wxLua_wxPropertyGridInterface_RefreshProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RefreshProperty }};
//     virtual void RefreshProperty( wxPGProperty* p ) = 0;
static int LUACALL wxLua_wxPropertyGridInterface_RefreshProperty(lua_State *L)
{
    // wxPGProperty p
    wxPGProperty * p = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call RefreshProperty
    self->RefreshProperty(p);

    return 0;
}

static int LUACALL wxLua_wxPropertyGridInterface_RegisterAdditionalEditors(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RegisterAdditionalEditors[1] = {{ wxLua_wxPropertyGridInterface_RegisterAdditionalEditors, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 0, 0, g_wxluaargtypeArray_None }};
//     static void RegisterAdditionalEditors();
static int LUACALL wxLua_wxPropertyGridInterface_RegisterAdditionalEditors(lua_State *L)
{
    // call RegisterAdditionalEditors
    wxPropertyGridInterface::RegisterAdditionalEditors();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_RemoveProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty1[1] = {{ wxLua_wxPropertyGridInterface_RemoveProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty1 }};
//     %gc wxPGProperty* RemoveProperty( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_RemoveProperty1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call RemoveProperty
    wxPGProperty* returns = (wxPGProperty*)self->RemoveProperty(id);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxPGProperty);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_RemoveProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty[1] = {{ wxLua_wxPropertyGridInterface_RemoveProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty }};
//     %gc wxPGProperty* RemoveProperty( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_RemoveProperty(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call RemoveProperty
    wxPGProperty* returns = (wxPGProperty*)self->RemoveProperty(id);
    if (!wxluaO_isgcobject(L, returns)) wxluaO_addgcobject(L, returns, wxluatype_wxPGProperty);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ReplaceProperty1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty1[1] = {{ wxLua_wxPropertyGridInterface_ReplaceProperty1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty1 }};
//     %ungc wxPGProperty* ReplaceProperty( const wxString& id, %ungc wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridInterface_ReplaceProperty1(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    if (wxluaO_isgcobject(L, property)) wxluaO_undeletegcobject(L, property);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ReplaceProperty
    wxPGProperty* returns = (wxPGProperty*)self->ReplaceProperty(id, property);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_ReplaceProperty(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty[1] = {{ wxLua_wxPropertyGridInterface_ReplaceProperty, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty }};
//     %ungc wxPGProperty* ReplaceProperty( const wxPGProperty*& id, %ungc wxPGProperty* property );
static int LUACALL wxLua_wxPropertyGridInterface_ReplaceProperty(lua_State *L)
{
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, property)) wxluaO_undeletegcobject(L, property);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call ReplaceProperty
    wxPGProperty* returns = (wxPGProperty*)self->ReplaceProperty(id, property);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_RestoreEditableState[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_RestoreEditableState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RestoreEditableState[1] = {{ wxLua_wxPropertyGridInterface_RestoreEditableState, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RestoreEditableState }};
//                                int restoreStates = wxPropertyGridInterface::EditableStateFlags::AllStates );
static int LUACALL wxLua_wxPropertyGridInterface_RestoreEditableState(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int restoreStates = wxPropertyGridInterface::EditableStateFlags::AllStates
    int restoreStates = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPropertyGridInterface::EditableStateFlags::AllStates);
    // const wxString src
    const wxString src = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call RestoreEditableState
    bool returns = (self->RestoreEditableState(src, restoreStates));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SaveEditableState[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SaveEditableState(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SaveEditableState[1] = {{ wxLua_wxPropertyGridInterface_SaveEditableState, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SaveEditableState }};
//     wxString SaveEditableState( int includedStates = wxPropertyGridInterface::EditableStateFlags::AllStates ) const;
static int LUACALL wxLua_wxPropertyGridInterface_SaveEditableState(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int includedStates = wxPropertyGridInterface::EditableStateFlags::AllStates
    int includedStates = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPropertyGridInterface::EditableStateFlags::AllStates);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SaveEditableState
    wxString returns = (self->SaveEditableState(includedStates));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetBoolChoices[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetBoolChoices(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetBoolChoices[1] = {{ wxLua_wxPropertyGridInterface_SetBoolChoices, WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetBoolChoices }};
//                                 const wxString& falseChoice );
static int LUACALL wxLua_wxPropertyGridInterface_SetBoolChoices(lua_State *L)
{
    // const wxString falseChoice
    const wxString falseChoice = wxlua_getwxStringtype(L, 2);
    // const wxString trueChoice
    const wxString trueChoice = wxlua_getwxStringtype(L, 1);
    // call SetBoolChoices
    wxPropertyGridInterface::SetBoolChoices(trueChoice, falseChoice);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetColumnProportion[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TINTEGER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetColumnProportion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetColumnProportion[1] = {{ wxLua_wxPropertyGridInterface_SetColumnProportion, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetColumnProportion }};
//     bool SetColumnProportion( unsigned int column, int proportion );
static int LUACALL wxLua_wxPropertyGridInterface_SetColumnProportion(lua_State *L)
{
    // int proportion
    int proportion = (int)wxlua_getnumbertype(L, 3);
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetColumnProportion
    bool returns = (self->SetColumnProportion(column, proportion));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropVal1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal1[1] = {{ wxLua_wxPropertyGridInterface_SetPropVal1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal1 }};
//     void SetPropVal( const wxString& id, wxVariant& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropVal1(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropVal
    self->SetPropVal(id, *value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropVal(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal[1] = {{ wxLua_wxPropertyGridInterface_SetPropVal, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal }};
//     void SetPropVal( const wxPGProperty*& id, wxVariant& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropVal(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropVal
    self->SetPropVal(id, *value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TANY, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttribute1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyAttribute1, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute1 }};
//     void SetPropertyAttribute( const wxString& id, const wxString& attrName, wxVariant value, long argFlags = 0 );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttribute1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long argFlags = 0
    long argFlags = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : 0);
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 4);
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyAttribute
    self->SetPropertyAttribute(id, attrName, value, argFlags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TANY, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttribute(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyAttribute, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute }};
//     void SetPropertyAttribute( const wxPGProperty*& id, const wxString& attrName, wxVariant value, long argFlags = 0 );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttribute(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // long argFlags = 0
    long argFlags = (argCount >= 5 ? (long)wxlua_getnumbertype(L, 5) : 0);
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 4);
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyAttribute
    self->SetPropertyAttribute(id, attrName, value, argFlags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttributeAll[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttributeAll(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttributeAll[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyAttributeAll, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttributeAll }};
//     void SetPropertyAttributeAll( const wxString& attrName, wxVariant value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyAttributeAll(lua_State *L)
{
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 3);
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyAttributeAll
    self->SetPropertyAttributeAll(attrName, value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1 }};
//                                       int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyBackgroundColour
    self->SetPropertyBackgroundColour(id, *colour, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour }};
//                                       int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyBackgroundColour
    self->SetPropertyBackgroundColour(id, *colour, flags);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyCell1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyCell1, WXLUAMETHOD_METHOD, 3, 7, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell1 }};
//                           const wxColour& bgCol = wxNullColour );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyCell1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour bgCol = wxNullColour
    const wxColour * bgCol = (argCount >= 7 ? (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour) : &wxNullColour);
    // const wxColour fgCol = wxNullColour
    const wxColour * fgCol = (argCount >= 6 ? (const wxColour *)wxluaT_getuserdatatype(L, 6, wxluatype_wxColour) : &wxNullColour);
    // const wxBitmap bitmap = wxNullBitmap
    const wxBitmap * bitmap = (argCount >= 5 ? (const wxBitmap *)wxluaT_getuserdatatype(L, 5, wxluatype_wxBitmap) : &wxNullBitmap);
    // const wxString text = wxEmptyString
    const wxString text = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // int column
    int column = (int)wxlua_getnumbertype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyCell
    self->SetPropertyCell(id, column, text, *bitmap, *fgCol, *bgCol);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyCell(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyCell, WXLUAMETHOD_METHOD, 3, 7, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell }};
//                           const wxColour& bgCol = wxNullColour );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyCell(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour bgCol = wxNullColour
    const wxColour * bgCol = (argCount >= 7 ? (const wxColour *)wxluaT_getuserdatatype(L, 7, wxluatype_wxColour) : &wxNullColour);
    // const wxColour fgCol = wxNullColour
    const wxColour * fgCol = (argCount >= 6 ? (const wxColour *)wxluaT_getuserdatatype(L, 6, wxluatype_wxColour) : &wxNullColour);
    // const wxBitmap bitmap = wxNullBitmap
    const wxBitmap * bitmap = (argCount >= 5 ? (const wxBitmap *)wxluaT_getuserdatatype(L, 5, wxluatype_wxBitmap) : &wxNullBitmap);
    // const wxString text = wxEmptyString
    const wxString text = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // int column
    int column = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyCell
    self->SetPropertyCell(id, column, text, *bitmap, *fgCol, *bgCol);

    return 0;
}

#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyClientData1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyClientData1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData1 }};
//     void SetPropertyClientData( const wxString& id, void* clientData );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyClientData1(lua_State *L)
{
    // void clientData
    void * clientData = (void *)wxlua_touserdata(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyClientData
    self->SetPropertyClientData(id, clientData);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyClientData(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyClientData, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData }};
//     void SetPropertyClientData( const wxPGProperty*& id, void* clientData );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyClientData(lua_State *L)
{
    // void clientData
    void * clientData = (void *)wxlua_touserdata(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyClientData
    self->SetPropertyClientData(id, clientData);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1 }};
//     void SetPropertyColoursToDefault(const wxString& id, int flags = wxPG_DONT_RECURSE);
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_DONT_RECURSE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_DONT_RECURSE);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyColoursToDefault
    self->SetPropertyColoursToDefault(id, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault }};
//     void SetPropertyColoursToDefault(const wxPGProperty*& id, int flags = wxPG_DONT_RECURSE);
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_DONT_RECURSE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_DONT_RECURSE);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyColoursToDefault
    self->SetPropertyColoursToDefault(id, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor3[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor3[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyEditor3, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor3 }};
//     void SetPropertyEditor( const wxString& id, const wxString& editorName );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor3(lua_State *L)
{
    // const wxString editorName
    const wxString editorName = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyEditor
    self->SetPropertyEditor(id, editorName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor2[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor2[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyEditor2, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor2 }};
//     void SetPropertyEditor( const wxPGProperty*& id, const wxString& editorName );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor2(lua_State *L)
{
    // const wxString editorName
    const wxString editorName = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyEditor
    self->SetPropertyEditor(id, editorName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxPGEditor, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyEditor1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor1 }};
//     void SetPropertyEditor( const wxString& id, const wxPGEditor* editor );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor1(lua_State *L)
{
    // const wxPGEditor editor
    const wxPGEditor * editor = (const wxPGEditor *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGEditor);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyEditor
    self->SetPropertyEditor(id, editor);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxPGEditor, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyEditor, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor }};
//     void SetPropertyEditor( const wxPGProperty*& id, const wxPGEditor* editor );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyEditor(lua_State *L)
{
    // const wxPGEditor editor
    const wxPGEditor * editor = (const wxPGEditor *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGEditor);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyEditor
    self->SetPropertyEditor(id, editor);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyHelpString1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyHelpString1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString1 }};
//     void SetPropertyHelpString( const wxString& id, const wxString& helpString );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyHelpString1(lua_State *L)
{
    // const wxString helpString
    const wxString helpString = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyHelpString
    self->SetPropertyHelpString(id, helpString);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyHelpString(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyHelpString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString }};
//     void SetPropertyHelpString( const wxPGProperty*& id, const wxString& helpString );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyHelpString(lua_State *L)
{
    // const wxString helpString
    const wxString helpString = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyHelpString
    self->SetPropertyHelpString(id, helpString);

    return 0;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyImage1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyImage1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage1 }};
//     void SetPropertyImage( const wxString& id, wxBitmap& bmp );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyImage1(lua_State *L)
{
    // wxBitmap bmp
    wxBitmap * bmp = (wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyImage
    self->SetPropertyImage(id, *bmp);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyImage(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyImage, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage }};
//     void SetPropertyImage( const wxPGProperty*& id, wxBitmap& bmp );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyImage(lua_State *L)
{
    // wxBitmap bmp
    wxBitmap * bmp = (wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyImage
    self->SetPropertyImage(id, *bmp);

    return 0;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyLabel1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyLabel1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel1 }};
//     void SetPropertyLabel( const wxString& id, const wxString& newproplabel );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyLabel1(lua_State *L)
{
    // const wxString newproplabel
    const wxString newproplabel = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyLabel
    self->SetPropertyLabel(id, newproplabel);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyLabel(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyLabel, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel }};
//     void SetPropertyLabel( const wxPGProperty*& id, const wxString& newproplabel );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyLabel(lua_State *L)
{
    // const wxString newproplabel
    const wxString newproplabel = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyLabel
    self->SetPropertyLabel(id, newproplabel);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyMaxLength1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyMaxLength1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength1 }};
//     bool SetPropertyMaxLength( const wxString& id, int maxLen );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyMaxLength1(lua_State *L)
{
    // int maxLen
    int maxLen = (int)wxlua_getnumbertype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyMaxLength
    bool returns = (self->SetPropertyMaxLength(id, maxLen));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyMaxLength(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyMaxLength, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength }};
//     bool SetPropertyMaxLength( const wxPGProperty*& id, int maxLen );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyMaxLength(lua_State *L)
{
    // int maxLen
    int maxLen = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyMaxLength
    bool returns = (self->SetPropertyMaxLength(id, maxLen));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyName1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyName1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName1 }};
//     void SetPropertyName( const wxString& id, const wxString& newName );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyName1(lua_State *L)
{
    // const wxString newName
    const wxString newName = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyName
    self->SetPropertyName(id, newName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyName(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyName, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName }};
//     void SetPropertyName( const wxPGProperty*& id, const wxString& newName );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyName(lua_State *L)
{
    // const wxString newName
    const wxString newName = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyName
    self->SetPropertyName(id, newName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyReadOnly1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyReadOnly1, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly1 }};
//                               int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyReadOnly1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // bool set = true
    bool set = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyReadOnly
    self->SetPropertyReadOnly(id, set, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyReadOnly(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyReadOnly, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly }};
//                               int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyReadOnly(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // bool set = true
    bool set = (argCount >= 3 ? wxlua_getbooleantype(L, 3) : true);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyReadOnly
    self->SetPropertyReadOnly(id, set, flags);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyTextColour1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyTextColour1, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour1 }};
//                                 int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyTextColour1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyTextColour
    self->SetPropertyTextColour(id, *colour, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyTextColour(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyTextColour, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour }};
//                                 int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyTextColour(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyTextColour
    self->SetPropertyTextColour(id, *colour, flags);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxValidator, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValidator1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValidator1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator1 }};
//     void SetPropertyValidator( const wxString& id, const wxValidator& validator );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValidator1(lua_State *L)
{
    // const wxValidator validator
    const wxValidator * validator = (const wxValidator *)wxluaT_getuserdatatype(L, 3, wxluatype_wxValidator);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValidator
    self->SetPropertyValidator(id, *validator);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxValidator, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValidator(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValidator, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator }};
//     void SetPropertyValidator( const wxPGProperty*& id, const wxValidator& validator );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValidator(lua_State *L)
{
    // const wxValidator validator
    const wxValidator * validator = (const wxValidator *)wxluaT_getuserdatatype(L, 3, wxluatype_wxValidator);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValidator
    self->SetPropertyValidator(id, *validator);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue19[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue19(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue19[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue19, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue19 }};
//     void SetPropertyValue( const wxString& id, wxVariant value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue19(lua_State *L)
{
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue18[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue18(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue18[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue18, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue18 }};
//     void SetPropertyValue( const wxPGProperty*& id, wxVariant value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue18(lua_State *L)
{
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue17[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxArrayInt, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue17(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue17[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue17, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue17 }};
//     void SetPropertyValue( const wxString& id, const wxArrayInt& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue17(lua_State *L)
{
    // const wxArrayInt value
    wxLuaSmartwxArrayInt value = wxlua_getwxArrayInt(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue16[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxArrayInt, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue16(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue16[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue16, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue16 }};
//     void SetPropertyValue( const wxPGProperty*& id, const wxArrayInt& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue16(lua_State *L)
{
    // const wxArrayInt value
    wxLuaSmartwxArrayInt value = wxlua_getwxArrayInt(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue15[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxObject, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue15(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue15[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue15, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue15 }};
//     void SetPropertyValue( const wxString& id, wxObject& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue15(lua_State *L)
{
    // wxObject value
    wxObject * value = (wxObject *)wxluaT_getuserdatatype(L, 3, wxluatype_wxObject);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, *value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue14[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxObject, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue14(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue14[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue14, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue14 }};
//     void SetPropertyValue( const wxPGProperty*& id, wxObject& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue14(lua_State *L)
{
    // wxObject value
    wxObject * value = (wxObject *)wxluaT_getuserdatatype(L, 3, wxluatype_wxObject);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, *value);

    return 0;
}

#endif // (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue13[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxDateTime, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue13(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue13[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue13, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue13 }};
//     void SetPropertyValue( const wxString& id, const wxDateTime& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue13(lua_State *L)
{
    // const wxDateTime value
    const wxDateTime * value = (const wxDateTime *)wxluaT_getuserdatatype(L, 3, wxluatype_wxDateTime);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, *value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue12[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxDateTime, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue12(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue12[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue12, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue12 }};
//     void SetPropertyValue( const wxPGProperty*& id, const wxDateTime& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue12(lua_State *L)
{
    // const wxDateTime value
    const wxDateTime * value = (const wxDateTime *)wxluaT_getuserdatatype(L, 3, wxluatype_wxDateTime);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, *value);

    return 0;
}

#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue11[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue11(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue11[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue11, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue11 }};
//     void SetPropertyValue( const wxString& id, const wxArrayString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue11(lua_State *L)
{
    // const wxArrayString value
    wxLuaSmartwxArrayString value = wxlua_getwxArrayString(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue10[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue10(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue10[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue10, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue10 }};
//     void SetPropertyValue( const wxPGProperty*& id, const wxArrayString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue10(lua_State *L)
{
    // const wxArrayString value
    wxLuaSmartwxArrayString value = wxlua_getwxArrayString(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue9[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue9(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue9[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue9, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue9 }};
//     void SetPropertyValue( const wxString& id, const wxString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue9(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue8[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue8(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue8[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue8, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue8 }};
//     void SetPropertyValue( const wxPGProperty*& id, const wxString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue8(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue7[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue7(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue7[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue7, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue7 }};
//     void SetPropertyValue( const wxString& id, bool value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue7(lua_State *L)
{
    // bool value
    bool value = wxlua_getbooleantype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue6[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue6(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue6[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue6, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue6 }};
//     void SetPropertyValue( const wxPGProperty*& id, bool value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue6(lua_State *L)
{
    // bool value
    bool value = wxlua_getbooleantype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue5[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue5(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue5[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue5, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue5 }};
//     void SetPropertyValue( const wxString& id, double value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue5(lua_State *L)
{
    // double value
    double value = (double)wxlua_getnumbertype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue4[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue4(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue4[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue4, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue4 }};
//     void SetPropertyValue( const wxPGProperty*& id, double value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue4(lua_State *L)
{
    // double value
    double value = (double)wxlua_getnumbertype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue3[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue3[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue3, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue3 }};
//     void SetPropertyValue( const wxString& id, int value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue3(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue2[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue2[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue2, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue2 }};
//     void SetPropertyValue( const wxPGProperty*& id, int value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue2(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue1 }};
//     void SetPropertyValue( const wxString& id, long value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue1(lua_State *L)
{
    // long value
    long value = (long)wxlua_getnumbertype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue }};
//     void SetPropertyValue( const wxPGProperty*& id, long value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValue(lua_State *L)
{
    // long value
    long value = (long)wxlua_getnumbertype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValue
    self->SetPropertyValue(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueString1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValueString1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString1 }};
//     void SetPropertyValueString( const wxString& id, const wxString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueString1(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValueString
    self->SetPropertyValueString(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueString(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValueString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString }};
//     void SetPropertyValueString( const wxPGProperty*& id, const wxString& value );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueString(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValueString
    self->SetPropertyValueString(id, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1 }};
//     void SetPropertyValueUnspecified( const wxString& id );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1(lua_State *L)
{
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValueUnspecified
    self->SetPropertyValueUnspecified(id);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified }};
//     void SetPropertyValueUnspecified( const wxPGProperty*& id );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified(lua_State *L)
{
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValueUnspecified
    self->SetPropertyValueUnspecified(id);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValues[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxVariant, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValues(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValues[1] = {{ wxLua_wxPropertyGridInterface_SetPropertyValues, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValues }};
//                             const wxPGProperty*& defaultCategory = wxNullProperty );
static int LUACALL wxLua_wxPropertyGridInterface_SetPropertyValues(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxPGProperty defaultCategory = wxNullProperty
    const wxPGProperty * defaultCategory = (argCount >= 3 ? (const wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty) : wxNullProperty);
    // const wxVariant list
    const wxVariant * list = (const wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetPropertyValues
    self->SetPropertyValues(*list, defaultCategory);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetValidationFailureBehavior[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SetValidationFailureBehavior(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetValidationFailureBehavior[1] = {{ wxLua_wxPropertyGridInterface_SetValidationFailureBehavior, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetValidationFailureBehavior }};
//     void SetValidationFailureBehavior( int vfbFlags );
static int LUACALL wxLua_wxPropertyGridInterface_SetValidationFailureBehavior(lua_State *L)
{
    // int vfbFlags
    int vfbFlags = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SetValidationFailureBehavior
    self->SetValidationFailureBehavior(vfbFlags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_Sort[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_Sort(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Sort[1] = {{ wxLua_wxPropertyGridInterface_Sort, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Sort }};
//     void Sort( int flags = 0 );
static int LUACALL wxLua_wxPropertyGridInterface_Sort(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call Sort
    self->Sort(flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren1[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SortChildren1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren1[1] = {{ wxLua_wxPropertyGridInterface_SortChildren1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren1 }};
//     void SortChildren( const wxString& id, int flags = 0 );
static int LUACALL wxLua_wxPropertyGridInterface_SortChildren1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxString id
    const wxString id = wxlua_getwxStringtype(L, 2);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SortChildren
    self->SortChildren(id, flags);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyGridInterface_SortChildren(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren[1] = {{ wxLua_wxPropertyGridInterface_SortChildren, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren }};
//     void SortChildren( const wxPGProperty*& id, int flags = 0 );
static int LUACALL wxLua_wxPropertyGridInterface_SortChildren(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // const wxPGProperty id
    const wxPGProperty * id = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPropertyGridInterface * self = (wxPropertyGridInterface *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyGridInterface);
    // call SortChildren
    self->SortChildren(id, flags);

    return 0;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn_overload[] =
{
    { wxLua_wxPropertyGridInterface_AppendIn1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn1 },
    { wxLua_wxPropertyGridInterface_AppendIn, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_AppendIn },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren_overload[] =
{
    { wxLua_wxPropertyGridInterface_BeginAddChildren1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren1 },
    { wxLua_wxPropertyGridInterface_BeginAddChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_BeginAddChildren },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_ChangePropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_ChangePropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ChangePropertyValue },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse_overload[] =
{
    { wxLua_wxPropertyGridInterface_Collapse1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse1 },
    { wxLua_wxPropertyGridInterface_Collapse, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Collapse },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_DeleteProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty1 },
    { wxLua_wxPropertyGridInterface_DeleteProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DeleteProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_DisableProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty1 },
    { wxLua_wxPropertyGridInterface_DisableProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_DisableProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_EnableProperty1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty1 },
    { wxLua_wxPropertyGridInterface_EnableProperty, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EnableProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren_overload[] =
{
    { wxLua_wxPropertyGridInterface_EndAddChildren1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren1 },
    { wxLua_wxPropertyGridInterface_EndAddChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_EndAddChildren },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Expand_overload[] =
{
    { wxLua_wxPropertyGridInterface_Expand1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand1 },
    { wxLua_wxPropertyGridInterface_Expand, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Expand },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_Expand_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_Expand_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetFirst1, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst1 },
    { wxLua_wxPropertyGridInterface_GetFirst, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirst },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetFirstChild1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild1 },
    { wxLua_wxPropertyGridInterface_GetFirstChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetFirstChild },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_GetPropertyAttribute1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_GetPropertyAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttribute },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyAttributes1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes1 },
    { wxLua_wxPropertyGridInterface_GetPropertyAttributes, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyAttributes },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyByName1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName1 },
    { wxLua_wxPropertyGridInterface_GetPropertyByName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyByName },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory1 },
    { wxLua_wxPropertyGridInterface_GetPropertyCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyCategory },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyClientData1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData1 },
    { wxLua_wxPropertyGridInterface_GetPropertyClientData, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyClientData },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyEditor1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor1 },
    { wxLua_wxPropertyGridInterface_GetPropertyEditor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyEditor },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyHelpString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString1 },
    { wxLua_wxPropertyGridInterface_GetPropertyHelpString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyHelpString },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage_overload[] =
{

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyImage1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage1 },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyImage },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyLabel1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel1 },
    { wxLua_wxPropertyGridInterface_GetPropertyLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyLabel },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyParent1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent1 },
    { wxLua_wxPropertyGridInterface_GetPropertyParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyParent },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyTextColour1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyTextColour, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyTextColour },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { wxLua_wxPropertyGridInterface_GetPropertyValidator1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { wxLua_wxPropertyGridInterface_GetPropertyValidator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValidator },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_GetPropertyValue1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_GetPropertyValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValue },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt_overload[] =
{

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt1 },
#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt },
#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString_overload[] =
{

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString1 },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsBool, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime_overload[] =
{

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime1 },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsInt, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsString1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsString },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong_overload[] =
{
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong1 },
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsULong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
    { wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_HideProperty1, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty1 },
    { wxLua_wxPropertyGridInterface_HideProperty, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_HideProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_Insert_overload[] =
{
    { wxLua_wxPropertyGridInterface_Insert3, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert3 },
    { wxLua_wxPropertyGridInterface_Insert2, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert2 },
    { wxLua_wxPropertyGridInterface_Insert1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert1 },
    { wxLua_wxPropertyGridInterface_Insert, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_Insert },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_Insert_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_Insert_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyCategory1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory1 },
    { wxLua_wxPropertyGridInterface_IsPropertyCategory, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyCategory },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyEnabled1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled1 },
    { wxLua_wxPropertyGridInterface_IsPropertyEnabled, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyEnabled },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyExpanded1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded1 },
    { wxLua_wxPropertyGridInterface_IsPropertyExpanded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyExpanded },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyModified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified1 },
    { wxLua_wxPropertyGridInterface_IsPropertyModified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyModified },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertySelected1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected1 },
    { wxLua_wxPropertyGridInterface_IsPropertySelected, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertySelected },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyShown1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown1 },
    { wxLua_wxPropertyGridInterface_IsPropertyShown, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyShown },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified_overload[] =
{
    { wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified1 },
    { wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing_overload[] =
{
    { wxLua_wxPropertyGridInterface_LimitPropertyEditing1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing1 },
    { wxLua_wxPropertyGridInterface_LimitPropertyEditing, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_LimitPropertyEditing },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_RemoveProperty1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty1 },
    { wxLua_wxPropertyGridInterface_RemoveProperty, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_RemoveProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty_overload[] =
{
    { wxLua_wxPropertyGridInterface_ReplaceProperty1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty1 },
    { wxLua_wxPropertyGridInterface_ReplaceProperty, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_ReplaceProperty },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropVal1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropVal, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropVal },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropertyAttribute1, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropertyAttribute, WXLUAMETHOD_METHOD, 4, 5, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyAttribute },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell_overload[] =
{

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyCell1, WXLUAMETHOD_METHOD, 3, 7, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell1 },
#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyCell, WXLUAMETHOD_METHOD, 3, 7, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyCell },
#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyClientData1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData1 },
    { wxLua_wxPropertyGridInterface_SetPropertyClientData, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyClientData },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault1 },
    { wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyEditor3, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor3 },
    { wxLua_wxPropertyGridInterface_SetPropertyEditor2, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor2 },
    { wxLua_wxPropertyGridInterface_SetPropertyEditor1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor1 },
    { wxLua_wxPropertyGridInterface_SetPropertyEditor, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyEditor },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyHelpString1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString1 },
    { wxLua_wxPropertyGridInterface_SetPropertyHelpString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyHelpString },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage_overload[] =
{

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyImage1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage1 },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyImage, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyImage },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyLabel1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel1 },
    { wxLua_wxPropertyGridInterface_SetPropertyLabel, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyLabel },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyMaxLength1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength1 },
    { wxLua_wxPropertyGridInterface_SetPropertyMaxLength, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyMaxLength },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyName1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName1 },
    { wxLua_wxPropertyGridInterface_SetPropertyName, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyName },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyReadOnly1, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly1 },
    { wxLua_wxPropertyGridInterface_SetPropertyReadOnly, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyReadOnly },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour_overload[] =
{

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyTextColour1, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour1 },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyTextColour, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyTextColour },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { wxLua_wxPropertyGridInterface_SetPropertyValidator1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator1 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { wxLua_wxPropertyGridInterface_SetPropertyValidator, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValidator },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))||((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue_overload[] =
{

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropertyValue19, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue19 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPropertyGridInterface_SetPropertyValue18, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue18 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue17, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue17 },
#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue16, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue16 },
#endif // (wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue15, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue15 },
#endif // (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue14, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue14 },
#endif // (wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue13, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue13 },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue12, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue12 },
#endif // (wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue11, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue11 },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue10, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue10 },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPropertyGridInterface_SetPropertyValue9, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue9 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue8, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue8 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue7, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue7 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue6, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue6 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue5, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue5 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue4, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue4 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue3, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue3 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue2, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue2 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue1 },
    { wxLua_wxPropertyGridInterface_SetPropertyValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValue },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue_overload)/sizeof(wxLuaBindCFunc);

#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))||((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyValueString1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString1 },
    { wxLua_wxPropertyGridInterface_SetPropertyValueString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueString },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified_overload[] =
{
    { wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified1 },
    { wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren_overload[] =
{
    { wxLua_wxPropertyGridInterface_SortChildren1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren1 },
    { wxLua_wxPropertyGridInterface_SortChildren, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPropertyGridInterface_SortChildren },
};
static int s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyGridInterface_delete_function(void** p)
{
    wxPropertyGridInterface* o = (wxPropertyGridInterface*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyGridInterface_methods[] = {
    { "Append", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Append, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "AppendIn", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_AppendIn_overload_count, 0 },
    { "BeginAddChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_BeginAddChildren_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "ChangePropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_ChangePropertyValue_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Clear, 1, NULL },
    { "ClearModifiedStatus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_ClearModifiedStatus, 1, NULL },
    { "ClearSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_ClearSelection, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Collapse", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_Collapse_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "CollapseAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_CollapseAll, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DeleteProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_DeleteProperty_overload_count, 0 },
    { "DisableProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_DisableProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "EditorValidate", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_EditorValidate, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "EnableProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_EnableProperty_overload_count, 0 },
    { "EndAddChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_EndAddChildren_overload_count, 0 },
    { "Expand", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Expand_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_Expand_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "ExpandAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_ExpandAll, 1, NULL },
    { "GetColumnProportion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetColumnProportion, 1, NULL },
    { "GetEditorByName", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGridInterface_GetEditorByName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetFirst", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirst_overload_count, 0 },
    { "GetFirstChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetFirstChild_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetProperty, 1, NULL },

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "GetPropertyAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttribute_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyAttributes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyAttributes_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyBackgroundColour_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

    { "GetPropertyByLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByLabel, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyByName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByName_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetPropertyByNameA", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyByNameA, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyCategory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyCategory_overload_count, 0 },
    { "GetPropertyClientData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyClientData_overload_count, 0 },
    { "GetPropertyEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyEditor_overload_count, 0 },
    { "GetPropertyHelpString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyHelpString_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyImage_overload_count, 0 },
#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyLabel_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetPropertyName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyParent_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyTextColour_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))
    { "GetPropertyValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValidator_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "GetPropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValue_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyValueAsArrayInt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayInt_overload_count, 0 },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyValueAsArrayString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsArrayString_overload_count, 0 },
#endif // ((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyValueAsBool", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsBool_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "GetPropertyValueAsDateTime", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDateTime_overload_count, 0 },
#endif // ((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyValueAsDouble", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsDouble_overload_count, 0 },
    { "GetPropertyValueAsInt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsInt_overload_count, 0 },
    { "GetPropertyValueAsLong", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLong_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))
    { "GetPropertyValueAsLongLong", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsLongLong_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetPropertyValueAsString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsString_overload_count, 0 },
    { "GetPropertyValueAsULong", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULong_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))
    { "GetPropertyValueAsULongLong", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValueAsULongLong_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_LONGLONG))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetPropertyValues", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetPropertyValues, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetSelection, 1, NULL },
    { "GetVIterator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_GetVIterator, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "HideProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_HideProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "InitAllTypeHandlers", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGridInterface_InitAllTypeHandlers, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Insert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Insert_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_Insert_overload_count, 0 },
    { "IsPropertyCategory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyCategory_overload_count, 0 },
    { "IsPropertyEnabled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyEnabled_overload_count, 0 },
    { "IsPropertyExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyExpanded_overload_count, 0 },
    { "IsPropertyModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyModified_overload_count, 0 },
    { "IsPropertySelected", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertySelected_overload_count, 0 },
    { "IsPropertyShown", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyShown_overload_count, 0 },
    { "IsPropertyValueUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_IsPropertyValueUnspecified_overload_count, 0 },
    { "LimitPropertyEditing", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_LimitPropertyEditing_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "RefreshGrid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_RefreshGrid, 1, NULL },
    { "RefreshProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_RefreshProperty, 1, NULL },
    { "RegisterAdditionalEditors", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGridInterface_RegisterAdditionalEditors, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "RemoveProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_RemoveProperty_overload_count, 0 },
    { "ReplaceProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_ReplaceProperty_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "RestoreEditableState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_RestoreEditableState, 1, NULL },
    { "SaveEditableState", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SaveEditableState, 1, NULL },
    { "SetBoolChoices", WXLUAMETHOD_METHOD|WXLUAMETHOD_STATIC, s_wxluafunc_wxLua_wxPropertyGridInterface_SetBoolChoices, 1, NULL },
    { "SetColumnProportion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetColumnProportion, 1, NULL },

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "SetPropVal", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropVal_overload_count, 0 },
    { "SetPropertyAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttribute_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetPropertyAttributeAll", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyAttributeAll, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "SetPropertyBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyBackgroundColour_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "SetPropertyCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyCell_overload_count, 0 },
#endif // (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetPropertyClientData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyClientData_overload_count, 0 },
    { "SetPropertyColoursToDefault", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyColoursToDefault_overload_count, 0 },
    { "SetPropertyEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyEditor_overload_count, 0 },
    { "SetPropertyHelpString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyHelpString_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "SetPropertyImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyImage_overload_count, 0 },
#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetPropertyLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyLabel_overload_count, 0 },
    { "SetPropertyMaxLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyMaxLength_overload_count, 0 },
    { "SetPropertyName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyName_overload_count, 0 },
    { "SetPropertyReadOnly", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyReadOnly_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "SetPropertyTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyTextColour_overload_count, 0 },
#endif // ((wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))
    { "SetPropertyValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValidator_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS))

#if ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))||((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetPropertyValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValue_overload_count, 0 },
#endif // ((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))||((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxObject) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxDateTime && wxUSE_DATETIME) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||((wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetPropertyValueString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueString_overload_count, 0 },
    { "SetPropertyValueUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValueUnspecified_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetPropertyValues", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetPropertyValues, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetValidationFailureBehavior", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SetValidationFailureBehavior, 1, NULL },
    { "Sort", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_Sort, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SortChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren_overload, s_wxluafunc_wxLua_wxPropertyGridInterface_SortChildren_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyGridInterface_methodCount = sizeof(wxPropertyGridInterface_methods)/sizeof(wxLuaBindMethod) - 1;

wxLuaBindNumber wxPropertyGridInterface_enums[] = {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "AllStates", wxPropertyGridInterface::AllStates },
        { "DescBoxState", wxPropertyGridInterface::DescBoxState },
        { "ExpandedState", wxPropertyGridInterface::ExpandedState },
        { "PageState", wxPropertyGridInterface::PageState },
        { "ScrollPosState", wxPropertyGridInterface::ScrollPosState },
        { "SelectionState", wxPropertyGridInterface::SelectionState },
        { "SplitterPosState", wxPropertyGridInterface::SplitterPosState },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

    { NULL, 0, },
};
int wxPropertyGridInterface_enumCount = sizeof(wxPropertyGridInterface_enums)/sizeof(wxLuaBindNumber) - 1;
#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind struct wxPGPaintData
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGPaintData'
int wxluatype_wxPGPaintData = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_choiceItem[] = { &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxPGPaintData_Get_m_choiceItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Get_m_choiceItem[1] = {{ wxLua_wxPGPaintData_Get_m_choiceItem, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_choiceItem }};
//     int m_choiceItem;
static int LUACALL wxLua_wxPGPaintData_Get_m_choiceItem(lua_State *L)
{
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    // push the result integer? number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)(self->m_choiceItem) == (double)(self->m_choiceItem)) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, self->m_choiceItem);
} else
#endif
{
    lua_pushnumber(L, self->m_choiceItem);
}
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_drawnHeight[] = { &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxPGPaintData_Get_m_drawnHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnHeight[1] = {{ wxLua_wxPGPaintData_Get_m_drawnHeight, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_drawnHeight }};
//     int m_drawnHeight;
static int LUACALL wxLua_wxPGPaintData_Get_m_drawnHeight(lua_State *L)
{
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    // push the result integer? number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)(self->m_drawnHeight) == (double)(self->m_drawnHeight)) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, self->m_drawnHeight);
} else
#endif
{
    lua_pushnumber(L, self->m_drawnHeight);
}
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_drawnWidth[] = { &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxPGPaintData_Get_m_drawnWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnWidth[1] = {{ wxLua_wxPGPaintData_Get_m_drawnWidth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_drawnWidth }};
//     int m_drawnWidth;
static int LUACALL wxLua_wxPGPaintData_Get_m_drawnWidth(lua_State *L)
{
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    // push the result integer? number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)(self->m_drawnWidth) == (double)(self->m_drawnWidth)) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, self->m_drawnWidth);
} else
#endif
{
    lua_pushnumber(L, self->m_drawnWidth);
}
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_parent[] = { &wxluatype_wxPGPaintData, NULL };
static int LUACALL wxLua_wxPGPaintData_Get_m_parent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Get_m_parent[1] = {{ wxLua_wxPGPaintData_Get_m_parent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGPaintData_Get_m_parent }};
//     const wxPropertyGrid* m_parent;
static int LUACALL wxLua_wxPGPaintData_Get_m_parent(lua_State *L)
{
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    // push the result datatype
    wxluaT_pushuserdatatype(L, self->m_parent, wxluatype_wxPropertyGrid);
    // return the number of values
    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_choiceItem[] = { &wxluatype_wxPGPaintData, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGPaintData_Set_m_choiceItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Set_m_choiceItem[1] = {{ wxLua_wxPGPaintData_Set_m_choiceItem, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_choiceItem }};
//     int m_choiceItem;
static int LUACALL wxLua_wxPGPaintData_Set_m_choiceItem(lua_State *L)
{
    // get the number value
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    self->m_choiceItem = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_drawnHeight[] = { &wxluatype_wxPGPaintData, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGPaintData_Set_m_drawnHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnHeight[1] = {{ wxLua_wxPGPaintData_Set_m_drawnHeight, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_drawnHeight }};
//     int m_drawnHeight;
static int LUACALL wxLua_wxPGPaintData_Set_m_drawnHeight(lua_State *L)
{
    // get the number value
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    self->m_drawnHeight = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_drawnWidth[] = { &wxluatype_wxPGPaintData, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGPaintData_Set_m_drawnWidth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnWidth[1] = {{ wxLua_wxPGPaintData_Set_m_drawnWidth, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGPaintData_Set_m_drawnWidth }};
//     int m_drawnWidth;
static int LUACALL wxLua_wxPGPaintData_Set_m_drawnWidth(lua_State *L)
{
    // get the number value
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGPaintData *self = (wxPGPaintData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGPaintData);
    self->m_drawnWidth = val;
    // return the number of values
    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGPaintData_delete[] = { &wxluatype_wxPGPaintData, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGPaintData_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGPaintData_delete }};




void wxLua_wxPGPaintData_delete_function(void** p)
{
    wxPGPaintData* o = (wxPGPaintData*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGPaintData_methods[] = {
    // %member    { "Get_m_choiceItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Get_m_choiceItem, 1, NULL },
    // %member    { "Get_m_drawnHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnHeight, 1, NULL },
    // %member    { "Get_m_drawnWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnWidth, 1, NULL },
    // %member    { "Get_m_parent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Get_m_parent, 1, NULL },
    // %member    { "Set_m_choiceItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Set_m_choiceItem, 1, NULL },
    // %member    { "Set_m_drawnHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnHeight, 1, NULL },
    // %member    { "Set_m_drawnWidth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnWidth, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGPaintData_delete, 1, NULL },
    { "m_choiceItem", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPGPaintData_Set_m_choiceItem, 1, NULL },
    { "m_choiceItem", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPGPaintData_Get_m_choiceItem, 1, NULL },
    { "m_drawnHeight", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnHeight, 1, NULL },
    { "m_drawnHeight", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnHeight, 1, NULL },
    { "m_drawnWidth", WXLUAMETHOD_SETPROP, s_wxluafunc_wxLua_wxPGPaintData_Set_m_drawnWidth, 1, NULL },
    { "m_drawnWidth", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPGPaintData_Get_m_drawnWidth, 1, NULL },
    { "m_parent", WXLUAMETHOD_GETPROP, s_wxluafunc_wxLua_wxPGPaintData_Get_m_parent, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGPaintData_methodCount = sizeof(wxPGPaintData_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGProperty'
int wxluatype_wxPGProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AdaptListToValue[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_AdaptListToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AdaptListToValue[1] = {{ wxLua_wxPGProperty_AdaptListToValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_AdaptListToValue }};
//     void AdaptListToValue( wxVariant& list, wxVariant* value ) const;
static int LUACALL wxLua_wxPGProperty_AdaptListToValue(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // wxVariant list
    wxVariant * list = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AdaptListToValue
    self->AdaptListToValue(*list, value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AddChild[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_AddChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AddChild[1] = {{ wxLua_wxPGProperty_AddChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_AddChild }};
//     %wxcompat_1_4 void AddChild( wxPGProperty* prop );
static int LUACALL wxLua_wxPGProperty_AddChild(lua_State *L)
{
    // wxPGProperty prop
    wxPGProperty * prop = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AddChild
    self->AddChild(prop);

    return 0;
}

#endif // (((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AddChoice[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_AddChoice(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AddChoice[1] = {{ wxLua_wxPGProperty_AddChoice, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_AddChoice }};
//     int AddChoice( const wxString& label, int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGProperty_AddChoice(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_INVALID_VALUE);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AddChoice
    int returns = (self->AddChoice(label, value));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AddPrivateChild[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_AddPrivateChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AddPrivateChild[1] = {{ wxLua_wxPGProperty_AddPrivateChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_AddPrivateChild }};
//     void AddPrivateChild( wxPGProperty* prop );
static int LUACALL wxLua_wxPGProperty_AddPrivateChild(lua_State *L)
{
    // wxPGProperty prop
    wxPGProperty * prop = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AddPrivateChild
    self->AddPrivateChild(prop);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AppendChild[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_AppendChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AppendChild[1] = {{ wxLua_wxPGProperty_AppendChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_AppendChild }};
//     %ungc wxPGProperty* AppendChild( %ungc wxPGProperty* childProperty );
static int LUACALL wxLua_wxPGProperty_AppendChild(lua_State *L)
{
    // wxPGProperty childProperty
    wxPGProperty * childProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    if (wxluaO_isgcobject(L, childProperty)) wxluaO_undeletegcobject(L, childProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AppendChild
    wxPGProperty* returns = (wxPGProperty*)self->AppendChild(childProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AreAllChildrenSpecified[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_AreAllChildrenSpecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AreAllChildrenSpecified[1] = {{ wxLua_wxPGProperty_AreAllChildrenSpecified, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_AreAllChildrenSpecified }};
//     bool AreAllChildrenSpecified( wxVariant* pendingList = NULL ) const;
static int LUACALL wxLua_wxPGProperty_AreAllChildrenSpecified(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxVariant pendingList = NULL
    wxVariant * pendingList = (argCount >= 2 ? (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant) : NULL);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AreAllChildrenSpecified
    bool returns = (self->AreAllChildrenSpecified(pendingList));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_AreChildrenComponents[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_AreChildrenComponents(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_AreChildrenComponents[1] = {{ wxLua_wxPGProperty_AreChildrenComponents, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_AreChildrenComponents }};
//     bool AreChildrenComponents() const;
static int LUACALL wxLua_wxPGProperty_AreChildrenComponents(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call AreChildrenComponents
    bool returns = (self->AreChildrenComponents());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_ChangeFlag[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_ChangeFlag(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_ChangeFlag[1] = {{ wxLua_wxPGProperty_ChangeFlag, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_ChangeFlag }};
//     void ChangeFlag( wxPGPropertyFlags flag, bool set );
static int LUACALL wxLua_wxPGProperty_ChangeFlag(lua_State *L)
{
    // bool set
    bool set = wxlua_getbooleantype(L, 3);
    // wxPGPropertyFlags flag
    wxPGPropertyFlags flag = (wxPGPropertyFlags)wxlua_getenumtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call ChangeFlag
    self->ChangeFlag(flag, set);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_ChildChanged[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_ChildChanged(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_ChildChanged[1] = {{ wxLua_wxPGProperty_ChildChanged, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGProperty_ChildChanged }};
//                                     wxVariant& childValue ) const;
static int LUACALL wxLua_wxPGProperty_ChildChanged(lua_State *L)
{
    // wxVariant childValue
    wxVariant * childValue = (wxVariant *)wxluaT_getuserdatatype(L, 4, wxluatype_wxVariant);
    // int childIndex
    int childIndex = (int)wxlua_getnumbertype(L, 3);
    // wxVariant thisValue
    wxVariant * thisValue = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call ChildChanged
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->ChildChanged(*thisValue, childIndex, *childValue));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DeleteChildren[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_DeleteChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DeleteChildren[1] = {{ wxLua_wxPGProperty_DeleteChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_DeleteChildren }};
//     void DeleteChildren();
static int LUACALL wxLua_wxPGProperty_DeleteChildren(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DeleteChildren
    self->DeleteChildren();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DeleteChoice[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_DeleteChoice(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DeleteChoice[1] = {{ wxLua_wxPGProperty_DeleteChoice, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_DeleteChoice }};
//     void DeleteChoice( int index );
static int LUACALL wxLua_wxPGProperty_DeleteChoice(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DeleteChoice
    self->DeleteChoice(index);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DoGetAttribute[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_DoGetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DoGetAttribute[1] = {{ wxLua_wxPGProperty_DoGetAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_DoGetAttribute }};
//     virtual wxVariant DoGetAttribute( const wxString& name ) const;
static int LUACALL wxLua_wxPGProperty_DoGetAttribute(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DoGetAttribute
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->DoGetAttribute(name));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DoGetEditorClass[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_DoGetEditorClass(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DoGetEditorClass[1] = {{ wxLua_wxPGProperty_DoGetEditorClass, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_DoGetEditorClass }};
//     virtual const wxPGEditor* DoGetEditorClass() const;
static int LUACALL wxLua_wxPGProperty_DoGetEditorClass(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DoGetEditorClass
    const wxPGEditor* returns = (const wxPGEditor*)self->DoGetEditorClass();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DoGetValidator[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_DoGetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DoGetValidator[1] = {{ wxLua_wxPGProperty_DoGetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_DoGetValidator }};
//     virtual wxValidator* DoGetValidator () const;
static int LUACALL wxLua_wxPGProperty_DoGetValidator(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DoGetValidator
    wxValidator* returns = (wxValidator*)self->DoGetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DoGetValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_DoGetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DoGetValue[1] = {{ wxLua_wxPGProperty_DoGetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_DoGetValue }};
//     virtual wxVariant DoGetValue() const;
static int LUACALL wxLua_wxPGProperty_DoGetValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DoGetValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->DoGetValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_DoSetAttribute[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_DoSetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_DoSetAttribute[1] = {{ wxLua_wxPGProperty_DoSetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_DoSetAttribute }};
//     virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
static int LUACALL wxLua_wxPGProperty_DoSetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call DoSetAttribute
    bool returns = (self->DoSetAttribute(name, *value));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_Enable[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_Enable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_Enable[1] = {{ wxLua_wxPGProperty_Enable, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_Enable }};
//     void Enable( bool enable = true );
static int LUACALL wxLua_wxPGProperty_Enable(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call Enable
    self->Enable(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_EnableCommonValue[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_EnableCommonValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_EnableCommonValue[1] = {{ wxLua_wxPGProperty_EnableCommonValue, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_EnableCommonValue }};
//     void EnableCommonValue( bool enable = true );
static int LUACALL wxLua_wxPGProperty_EnableCommonValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call EnableCommonValue
    self->EnableCommonValue(enable);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GenerateComposedValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GenerateComposedValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GenerateComposedValue[1] = {{ wxLua_wxPGProperty_GenerateComposedValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GenerateComposedValue }};
//     wxString GenerateComposedValue() const;
static int LUACALL wxLua_wxPGProperty_GenerateComposedValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GenerateComposedValue
    wxString returns = (self->GenerateComposedValue());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute1[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttribute1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttribute1[1] = {{ wxLua_wxPGProperty_GetAttribute1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute1 }};
//     wxString GetAttribute( const wxString& name, const wxString& defVal ) const;
static int LUACALL wxLua_wxPGProperty_GetAttribute1(lua_State *L)
{
    // const wxString defVal
    const wxString defVal = wxlua_getwxStringtype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttribute
    wxString returns = (self->GetAttribute(name, defVal));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttribute(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttribute[1] = {{ wxLua_wxPGProperty_GetAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute }};
//     wxVariant GetAttribute( const wxString& name ) const;
static int LUACALL wxLua_wxPGProperty_GetAttribute(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttribute
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetAttribute(name));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttributeAsDouble[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttributeAsDouble(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttributeAsDouble[1] = {{ wxLua_wxPGProperty_GetAttributeAsDouble, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_GetAttributeAsDouble }};
//     double GetAttributeAsDouble( const wxString& name, double defVal ) const;
static int LUACALL wxLua_wxPGProperty_GetAttributeAsDouble(lua_State *L)
{
    // double defVal
    double defVal = (double)wxlua_getnumbertype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttributeAsDouble
    double returns = (self->GetAttributeAsDouble(name, defVal));
    // push the result floating point number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttributeAsLong[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttributeAsLong(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttributeAsLong[1] = {{ wxLua_wxPGProperty_GetAttributeAsLong, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_GetAttributeAsLong }};
//     long GetAttributeAsLong( const wxString& name, long defVal ) const;
static int LUACALL wxLua_wxPGProperty_GetAttributeAsLong(lua_State *L)
{
    // long defVal
    long defVal = (long)wxlua_getnumbertype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttributeAsLong
    long returns = (self->GetAttributeAsLong(name, defVal));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttributes[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttributes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttributes[1] = {{ wxLua_wxPGProperty_GetAttributes, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetAttributes }};
//     const wxPGAttributeStorage& GetAttributes() const;
static int LUACALL wxLua_wxPGProperty_GetAttributes(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttributes
    const wxPGAttributeStorage* returns = (const wxPGAttributeStorage*)&self->GetAttributes();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGAttributeStorage);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetAttributesAsList[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetAttributesAsList(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttributesAsList[1] = {{ wxLua_wxPGProperty_GetAttributesAsList, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetAttributesAsList }};
//     wxVariant GetAttributesAsList() const;
static int LUACALL wxLua_wxPGProperty_GetAttributesAsList(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetAttributesAsList
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetAttributesAsList());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetBaseName[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetBaseName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetBaseName[1] = {{ wxLua_wxPGProperty_GetBaseName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetBaseName }};
//     const wxString& GetBaseName() const;
static int LUACALL wxLua_wxPGProperty_GetBaseName(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetBaseName
    wxString returns = (self->GetBaseName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetCell1[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_GetCell1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetCell1[1] = {{ wxLua_wxPGProperty_GetCell1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetCell1 }};
//     wxPGCell& GetCell( unsigned int column );
static int LUACALL wxLua_wxPGProperty_GetCell1(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetCell
    wxPGCell* returns = (wxPGCell*)&self->GetCell(column);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetCell[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_GetCell(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetCell[1] = {{ wxLua_wxPGProperty_GetCell, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetCell }};
//     const wxPGCell& GetCell( unsigned int column ) const;
static int LUACALL wxLua_wxPGProperty_GetCell(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetCell
    const wxPGCell* returns = (const wxPGCell*)&self->GetCell(column);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetCellRenderer[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetCellRenderer(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetCellRenderer[1] = {{ wxLua_wxPGProperty_GetCellRenderer, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetCellRenderer }};
//     virtual wxPGCellRenderer* GetCellRenderer( int column ) const;
static int LUACALL wxLua_wxPGProperty_GetCellRenderer(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetCellRenderer
    wxPGCellRenderer* returns = (wxPGCellRenderer*)self->GetCellRenderer(column);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCellRenderer);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetChildCount[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetChildCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetChildCount[1] = {{ wxLua_wxPGProperty_GetChildCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetChildCount }};
//     unsigned int GetChildCount() const;
static int LUACALL wxLua_wxPGProperty_GetChildCount(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetChildCount
    unsigned int returns = (self->GetChildCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetChildrenHeight[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetChildrenHeight(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetChildrenHeight[1] = {{ wxLua_wxPGProperty_GetChildrenHeight, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_GetChildrenHeight }};
//     int GetChildrenHeight( int lh, int iMax = -1 ) const;
static int LUACALL wxLua_wxPGProperty_GetChildrenHeight(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int iMax = -1
    int iMax = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : -1);
    // int lh
    int lh = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetChildrenHeight
    int returns = (self->GetChildrenHeight(lh, iMax));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetChoiceSelection[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetChoiceSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetChoiceSelection[1] = {{ wxLua_wxPGProperty_GetChoiceSelection, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetChoiceSelection }};
//     virtual int GetChoiceSelection() const;
static int LUACALL wxLua_wxPGProperty_GetChoiceSelection(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetChoiceSelection
    int returns = (self->GetChoiceSelection());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetChoices[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetChoices(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetChoices[1] = {{ wxLua_wxPGProperty_GetChoices, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetChoices }};
//     const wxPGChoices& GetChoices() const;
static int LUACALL wxLua_wxPGProperty_GetChoices(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetChoices
    const wxPGChoices* returns = (const wxPGChoices*)&self->GetChoices();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetClientData[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetClientData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetClientData[1] = {{ wxLua_wxPGProperty_GetClientData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetClientData }};
//     void* GetClientData() const;
static int LUACALL wxLua_wxPGProperty_GetClientData(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetClientData
    void* returns = (void*)self->GetClientData();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetClientObject[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetClientObject(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetClientObject[1] = {{ wxLua_wxPGProperty_GetClientObject, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetClientObject }};
//     wxClientData *GetClientObject() const;
static int LUACALL wxLua_wxPGProperty_GetClientObject(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetClientObject
    wxClientData* returns = (wxClientData*)self->GetClientObject();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxClientData);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetColumnEditor[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetColumnEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetColumnEditor[1] = {{ wxLua_wxPGProperty_GetColumnEditor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetColumnEditor }};
//     const wxPGEditor* GetColumnEditor( int column ) const;
static int LUACALL wxLua_wxPGProperty_GetColumnEditor(lua_State *L)
{
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetColumnEditor
    const wxPGEditor* returns = (const wxPGEditor*)self->GetColumnEditor(column);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetCommonValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetCommonValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetCommonValue[1] = {{ wxLua_wxPGProperty_GetCommonValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetCommonValue }};
//     int GetCommonValue() const;
static int LUACALL wxLua_wxPGProperty_GetCommonValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetCommonValue
    int returns = (self->GetCommonValue());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetDefaultValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetDefaultValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetDefaultValue[1] = {{ wxLua_wxPGProperty_GetDefaultValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetDefaultValue }};
//     wxVariant GetDefaultValue() const;
static int LUACALL wxLua_wxPGProperty_GetDefaultValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetDefaultValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetDefaultValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetDepth[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetDepth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetDepth[1] = {{ wxLua_wxPGProperty_GetDepth, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetDepth }};
//     unsigned int GetDepth() const;
static int LUACALL wxLua_wxPGProperty_GetDepth(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetDepth
    unsigned int returns = (self->GetDepth());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetDisplayedCommonValueCount[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetDisplayedCommonValueCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetDisplayedCommonValueCount[1] = {{ wxLua_wxPGProperty_GetDisplayedCommonValueCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetDisplayedCommonValueCount }};
//     int GetDisplayedCommonValueCount() const;
static int LUACALL wxLua_wxPGProperty_GetDisplayedCommonValueCount(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetDisplayedCommonValueCount
    int returns = (self->GetDisplayedCommonValueCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetDisplayedString[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetDisplayedString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetDisplayedString[1] = {{ wxLua_wxPGProperty_GetDisplayedString, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetDisplayedString }};
//     wxString GetDisplayedString() const;
static int LUACALL wxLua_wxPGProperty_GetDisplayedString(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetDisplayedString
    wxString returns = (self->GetDisplayedString());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetEditorClass[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetEditorClass(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetEditorClass[1] = {{ wxLua_wxPGProperty_GetEditorClass, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetEditorClass }};
//     const wxPGEditor* GetEditorClass() const;
static int LUACALL wxLua_wxPGProperty_GetEditorClass(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetEditorClass
    const wxPGEditor* returns = (const wxPGEditor*)self->GetEditorClass();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditor);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetEditorDialog[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetEditorDialog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetEditorDialog[1] = {{ wxLua_wxPGProperty_GetEditorDialog, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetEditorDialog }};
//     virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
static int LUACALL wxLua_wxPGProperty_GetEditorDialog(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetEditorDialog
    wxPGEditorDialogAdapter* returns = (wxPGEditorDialogAdapter*)self->GetEditorDialog();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGEditorDialogAdapter);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetFlagsAsString[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_GetFlagsAsString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetFlagsAsString[1] = {{ wxLua_wxPGProperty_GetFlagsAsString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetFlagsAsString }};
//     wxString GetFlagsAsString( wxUint32 flagsMask ) const;
static int LUACALL wxLua_wxPGProperty_GetFlagsAsString(lua_State *L)
{
    // wxUint32 flagsMask
    wxUint32 flagsMask = (wxUint32)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetFlagsAsString
    wxString returns = (self->GetFlagsAsString(flagsMask));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetGrid[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetGrid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetGrid[1] = {{ wxLua_wxPGProperty_GetGrid, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetGrid }};
//     wxPropertyGrid* GetGrid() const;
static int LUACALL wxLua_wxPGProperty_GetGrid(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetGrid
    wxPropertyGrid* returns = (wxPropertyGrid*)self->GetGrid();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetGridIfDisplayed[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetGridIfDisplayed(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetGridIfDisplayed[1] = {{ wxLua_wxPGProperty_GetGridIfDisplayed, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetGridIfDisplayed }};
//     wxPropertyGrid* GetGridIfDisplayed() const;
static int LUACALL wxLua_wxPGProperty_GetGridIfDisplayed(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetGridIfDisplayed
    wxPropertyGrid* returns = (wxPropertyGrid*)self->GetGridIfDisplayed();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyGrid);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetHelpString[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetHelpString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetHelpString[1] = {{ wxLua_wxPGProperty_GetHelpString, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetHelpString }};
//     const wxString& GetHelpString() const;
static int LUACALL wxLua_wxPGProperty_GetHelpString(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetHelpString
    wxString returns = (self->GetHelpString());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetHintText[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetHintText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetHintText[1] = {{ wxLua_wxPGProperty_GetHintText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetHintText }};
//     inline wxString GetHintText() const;
static int LUACALL wxLua_wxPGProperty_GetHintText(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetHintText
    wxString returns = (self->GetHintText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetImageOffset[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetImageOffset(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetImageOffset[1] = {{ wxLua_wxPGProperty_GetImageOffset, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetImageOffset }};
//     int GetImageOffset( int imageWidth ) const;
static int LUACALL wxLua_wxPGProperty_GetImageOffset(lua_State *L)
{
    // int imageWidth
    int imageWidth = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetImageOffset
    int returns = (self->GetImageOffset(imageWidth));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetIndexInParent[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetIndexInParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetIndexInParent[1] = {{ wxLua_wxPGProperty_GetIndexInParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetIndexInParent }};
//     unsigned int GetIndexInParent() const;
static int LUACALL wxLua_wxPGProperty_GetIndexInParent(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetIndexInParent
    unsigned int returns = (self->GetIndexInParent());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetItemAtY[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_GetItemAtY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetItemAtY[1] = {{ wxLua_wxPGProperty_GetItemAtY, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetItemAtY }};
//     %ungc wxPGProperty* GetItemAtY( unsigned int y ) const;
static int LUACALL wxLua_wxPGProperty_GetItemAtY(lua_State *L)
{
    // unsigned int y
    unsigned int y = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetItemAtY
    wxPGProperty* returns = (wxPGProperty*)self->GetItemAtY(y);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetLabel[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetLabel[1] = {{ wxLua_wxPGProperty_GetLabel, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetLabel }};
//     const wxString& GetLabel() const;
static int LUACALL wxLua_wxPGProperty_GetLabel(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetLabel
    wxString returns = (self->GetLabel());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetLastVisibleSubItem[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetLastVisibleSubItem(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetLastVisibleSubItem[1] = {{ wxLua_wxPGProperty_GetLastVisibleSubItem, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetLastVisibleSubItem }};
//     const wxPGProperty* GetLastVisibleSubItem() const;
static int LUACALL wxLua_wxPGProperty_GetLastVisibleSubItem(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetLastVisibleSubItem
    const wxPGProperty* returns = (const wxPGProperty*)self->GetLastVisibleSubItem();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetMainParent[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetMainParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetMainParent[1] = {{ wxLua_wxPGProperty_GetMainParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetMainParent }};
//     %ungc wxPGProperty* GetMainParent() const;
static int LUACALL wxLua_wxPGProperty_GetMainParent(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetMainParent
    wxPGProperty* returns = (wxPGProperty*)self->GetMainParent();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetMaxLength[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetMaxLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetMaxLength[1] = {{ wxLua_wxPGProperty_GetMaxLength, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetMaxLength }};
//     int GetMaxLength() const;
static int LUACALL wxLua_wxPGProperty_GetMaxLength(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetMaxLength
    int returns = (self->GetMaxLength());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetName[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetName[1] = {{ wxLua_wxPGProperty_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetName }};
//     wxString GetName() const;
static int LUACALL wxLua_wxPGProperty_GetName(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetOrCreateCell[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_GetOrCreateCell(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetOrCreateCell[1] = {{ wxLua_wxPGProperty_GetOrCreateCell, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetOrCreateCell }};
//     wxPGCell& GetOrCreateCell( unsigned int column );
static int LUACALL wxLua_wxPGProperty_GetOrCreateCell(lua_State *L)
{
    // unsigned int column
    unsigned int column = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetOrCreateCell
    wxPGCell* returns = (wxPGCell*)&self->GetOrCreateCell(column);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetParent[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetParent[1] = {{ wxLua_wxPGProperty_GetParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetParent }};
//     %ungc wxPGProperty* GetParent() const;
static int LUACALL wxLua_wxPGProperty_GetParent(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetParent
    wxPGProperty* returns = (wxPGProperty*)self->GetParent();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetPropertyByName[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_GetPropertyByName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetPropertyByName[1] = {{ wxLua_wxPGProperty_GetPropertyByName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetPropertyByName }};
//     %ungc wxPGProperty* GetPropertyByName( const wxString& name ) const;
static int LUACALL wxLua_wxPGProperty_GetPropertyByName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetPropertyByName
    wxPGProperty* returns = (wxPGProperty*)self->GetPropertyByName(name);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValidator[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValidator[1] = {{ wxLua_wxPGProperty_GetValidator, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetValidator }};
//     wxValidator* GetValidator() const;
static int LUACALL wxLua_wxPGProperty_GetValidator(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValidator
    wxValidator* returns = (wxValidator*)self->GetValidator();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxValidator);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValue[1] = {{ wxLua_wxPGProperty_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetValue }};
//     wxVariant GetValue() const;
static int LUACALL wxLua_wxPGProperty_GetValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->GetValue());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValueAsString[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetValueAsString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValueAsString[1] = {{ wxLua_wxPGProperty_GetValueAsString, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetValueAsString }};
//     virtual wxString GetValueAsString( int argFlags = 0 ) const;
static int LUACALL wxLua_wxPGProperty_GetValueAsString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValueAsString
    wxString returns = (self->GetValueAsString(argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValueImage[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetValueImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValueImage[1] = {{ wxLua_wxPGProperty_GetValueImage, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetValueImage }};
//     wxBitmap* GetValueImage() const;
static int LUACALL wxLua_wxPGProperty_GetValueImage(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValueImage
    wxBitmap* returns = (wxBitmap*)self->GetValueImage();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBitmap);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValueString[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_GetValueString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValueString[1] = {{ wxLua_wxPGProperty_GetValueString, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetValueString }};
//     %wxcompat_1_4 wxString GetValueString( int argFlags = 0 ) const;
static int LUACALL wxLua_wxPGProperty_GetValueString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValueString
    wxString returns = (self->GetValueString(argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // ((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetValueType[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetValueType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetValueType[1] = {{ wxLua_wxPGProperty_GetValueType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetValueType }};
//     wxString GetValueType() const;
static int LUACALL wxLua_wxPGProperty_GetValueType(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetValueType
    wxString returns = (self->GetValueType());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_GetY[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_GetY(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetY[1] = {{ wxLua_wxPGProperty_GetY, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_GetY }};
//     int GetY() const;
static int LUACALL wxLua_wxPGProperty_GetY(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call GetY
    int returns = (self->GetY());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_HasFlag1[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_HasFlag1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_HasFlag1[1] = {{ wxLua_wxPGProperty_HasFlag1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_HasFlag1 }};
//     bool HasFlag(wxUint32 flag) const;
static int LUACALL wxLua_wxPGProperty_HasFlag1(lua_State *L)
{
    // wxUint32 flag
    wxUint32 flag = (wxUint32)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call HasFlag
    bool returns = (self->HasFlag(flag));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_HasFlag[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_HasFlag(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_HasFlag[1] = {{ wxLua_wxPGProperty_HasFlag, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_HasFlag }};
//     bool HasFlag(wxPGPropertyFlags flag) const;
static int LUACALL wxLua_wxPGProperty_HasFlag(lua_State *L)
{
    // wxPGPropertyFlags flag
    wxPGPropertyFlags flag = (wxPGPropertyFlags)wxlua_getenumtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call HasFlag
    bool returns = (self->HasFlag(flag));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_HasFlagsExact[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_HasFlagsExact(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_HasFlagsExact[1] = {{ wxLua_wxPGProperty_HasFlagsExact, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_HasFlagsExact }};
//     bool HasFlagsExact(wxUint32 flags) const;
static int LUACALL wxLua_wxPGProperty_HasFlagsExact(lua_State *L)
{
    // wxUint32 flags
    wxUint32 flags = (wxUint32)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call HasFlagsExact
    bool returns = (self->HasFlagsExact(flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_HasVisibleChildren[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_HasVisibleChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_HasVisibleChildren[1] = {{ wxLua_wxPGProperty_HasVisibleChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_HasVisibleChildren }};
//     bool HasVisibleChildren() const;
static int LUACALL wxLua_wxPGProperty_HasVisibleChildren(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call HasVisibleChildren
    bool returns = (self->HasVisibleChildren());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_Hide[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_Hide(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_Hide[1] = {{ wxLua_wxPGProperty_Hide, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_Hide }};
//     bool Hide( bool hide, int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPGProperty_Hide(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_RECURSE);
    // bool hide
    bool hide = wxlua_getbooleantype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call Hide
    bool returns = (self->Hide(hide, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_Index[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_Index(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_Index[1] = {{ wxLua_wxPGProperty_Index, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_Index }};
//     int Index( const wxPGProperty* p ) const;
static int LUACALL wxLua_wxPGProperty_Index(lua_State *L)
{
    // const wxPGProperty p
    const wxPGProperty * p = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call Index
    int returns = (self->Index(p));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_InsertChild[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_InsertChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_InsertChild[1] = {{ wxLua_wxPGProperty_InsertChild, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_InsertChild }};
//     %ungc wxPGProperty* InsertChild( int index, %ungc wxPGProperty* childProperty );
static int LUACALL wxLua_wxPGProperty_InsertChild(lua_State *L)
{
    // wxPGProperty childProperty
    wxPGProperty * childProperty = (wxPGProperty *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGProperty);
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    if (wxluaO_isgcobject(L, childProperty)) wxluaO_undeletegcobject(L, childProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call InsertChild
    wxPGProperty* returns = (wxPGProperty*)self->InsertChild(index, childProperty);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_InsertChoice[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_InsertChoice(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_InsertChoice[1] = {{ wxLua_wxPGProperty_InsertChoice, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGProperty_InsertChoice }};
//     int InsertChoice( const wxString& label, int index, int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGProperty_InsertChoice(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_INVALID_VALUE);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call InsertChoice
    int returns = (self->InsertChoice(label, index, value));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IntToValue[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_IntToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IntToValue[1] = {{ wxLua_wxPGProperty_IntToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGProperty_IntToValue }};
//     virtual bool IntToValue( wxVariant& variant, int number, int argFlags = 0 ) const;
static int LUACALL wxLua_wxPGProperty_IntToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // int number
    int number = (int)wxlua_getnumbertype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IntToValue
    bool returns = (self->IntToValue(*variant, number, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsCategory[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsCategory(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsCategory[1] = {{ wxLua_wxPGProperty_IsCategory, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsCategory }};
//     bool IsCategory() const;
static int LUACALL wxLua_wxPGProperty_IsCategory(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsCategory
    bool returns = (self->IsCategory());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsEnabled[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsEnabled(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsEnabled[1] = {{ wxLua_wxPGProperty_IsEnabled, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsEnabled }};
//     bool IsEnabled() const;
static int LUACALL wxLua_wxPGProperty_IsEnabled(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsEnabled
    bool returns = (self->IsEnabled());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsExpanded[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsExpanded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsExpanded[1] = {{ wxLua_wxPGProperty_IsExpanded, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsExpanded }};
//     bool IsExpanded() const;
static int LUACALL wxLua_wxPGProperty_IsExpanded(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsExpanded
    bool returns = (self->IsExpanded());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsRoot[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsRoot[1] = {{ wxLua_wxPGProperty_IsRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsRoot }};
//     bool IsRoot() const;
static int LUACALL wxLua_wxPGProperty_IsRoot(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsRoot
    bool returns = (self->IsRoot());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsSomeParent[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsSomeParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsSomeParent[1] = {{ wxLua_wxPGProperty_IsSomeParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_IsSomeParent }};
//     bool IsSomeParent( wxPGProperty* candidateParent ) const;
static int LUACALL wxLua_wxPGProperty_IsSomeParent(lua_State *L)
{
    // wxPGProperty candidateParent
    wxPGProperty * candidateParent = (wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsSomeParent
    bool returns = (self->IsSomeParent(candidateParent));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsSubProperty[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsSubProperty(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsSubProperty[1] = {{ wxLua_wxPGProperty_IsSubProperty, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsSubProperty }};
//     bool IsSubProperty() const;
static int LUACALL wxLua_wxPGProperty_IsSubProperty(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsSubProperty
    bool returns = (self->IsSubProperty());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsTextEditable[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsTextEditable(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsTextEditable[1] = {{ wxLua_wxPGProperty_IsTextEditable, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsTextEditable }};
//     bool IsTextEditable() const;
static int LUACALL wxLua_wxPGProperty_IsTextEditable(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsTextEditable
    bool returns = (self->IsTextEditable());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsValueUnspecified[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsValueUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsValueUnspecified[1] = {{ wxLua_wxPGProperty_IsValueUnspecified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsValueUnspecified }};
//     bool IsValueUnspecified() const;
static int LUACALL wxLua_wxPGProperty_IsValueUnspecified(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsValueUnspecified
    bool returns = (self->IsValueUnspecified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_IsVisible[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_IsVisible(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_IsVisible[1] = {{ wxLua_wxPGProperty_IsVisible, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_IsVisible }};
//     bool IsVisible() const;
static int LUACALL wxLua_wxPGProperty_IsVisible(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call IsVisible
    bool returns = (self->IsVisible());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_Item[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGProperty_Item(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_Item[1] = {{ wxLua_wxPGProperty_Item, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_Item }};
//     %ungc wxPGProperty* Item( unsigned int i ) const;
static int LUACALL wxLua_wxPGProperty_Item(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call Item
    wxPGProperty* returns = (wxPGProperty*)self->Item(i);
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_Last[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_Last(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_Last[1] = {{ wxLua_wxPGProperty_Last, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_Last }};
//     %ungc wxPGProperty* Last() const;
static int LUACALL wxLua_wxPGProperty_Last(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call Last
    wxPGProperty* returns = (wxPGProperty*)self->Last();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_OnEvent[] = { &wxluatype_wxPGProperty, &wxluatype_wxPropertyGrid, &wxluatype_wxWindow, &wxluatype_wxEvent, NULL };
static int LUACALL wxLua_wxPGProperty_OnEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_OnEvent[1] = {{ wxLua_wxPGProperty_OnEvent, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGProperty_OnEvent }};
//     virtual bool OnEvent( wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event );
static int LUACALL wxLua_wxPGProperty_OnEvent(lua_State *L)
{
    // wxEvent event
    wxEvent * event = (wxEvent *)wxluaT_getuserdatatype(L, 4, wxluatype_wxEvent);
    // wxWindow wnd_primary
    wxWindow * wnd_primary = (wxWindow *)wxluaT_getuserdatatype(L, 3, wxluatype_wxWindow);
    // wxPropertyGrid propgrid
    wxPropertyGrid * propgrid = (wxPropertyGrid *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPropertyGrid);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call OnEvent
    bool returns = (self->OnEvent(propgrid, wnd_primary, *event));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_OnMeasureImage[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_OnMeasureImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_OnMeasureImage[1] = {{ wxLua_wxPGProperty_OnMeasureImage, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_OnMeasureImage }};
//     virtual wxSize OnMeasureImage( int item = -1 ) const;
static int LUACALL wxLua_wxPGProperty_OnMeasureImage(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int item = -1
    int item = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : -1);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call OnMeasureImage
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->OnMeasureImage(item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_OnSetValue[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_OnSetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_OnSetValue[1] = {{ wxLua_wxPGProperty_OnSetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_OnSetValue }};
//     virtual void OnSetValue();
static int LUACALL wxLua_wxPGProperty_OnSetValue(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call OnSetValue
    self->OnSetValue();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_OnValidationFailure[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_OnValidationFailure(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_OnValidationFailure[1] = {{ wxLua_wxPGProperty_OnValidationFailure, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_OnValidationFailure }};
//     virtual void OnValidationFailure( wxVariant& pendingValue );
static int LUACALL wxLua_wxPGProperty_OnValidationFailure(lua_State *L)
{
    // wxVariant pendingValue
    wxVariant * pendingValue = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call OnValidationFailure
    self->OnValidationFailure(*pendingValue);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_RecreateEditor[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_RecreateEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_RecreateEditor[1] = {{ wxLua_wxPGProperty_RecreateEditor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_RecreateEditor }};
//     bool RecreateEditor();
static int LUACALL wxLua_wxPGProperty_RecreateEditor(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call RecreateEditor
    bool returns = (self->RecreateEditor());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_RefreshChildren[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_RefreshChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_RefreshChildren[1] = {{ wxLua_wxPGProperty_RefreshChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_RefreshChildren }};
//     virtual void RefreshChildren();
static int LUACALL wxLua_wxPGProperty_RefreshChildren(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call RefreshChildren
    self->RefreshChildren();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_RefreshEditor[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_RefreshEditor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_RefreshEditor[1] = {{ wxLua_wxPGProperty_RefreshEditor, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_RefreshEditor }};
//     void RefreshEditor();
static int LUACALL wxLua_wxPGProperty_RefreshEditor(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call RefreshEditor
    self->RefreshEditor();

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetAttribute[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPGProperty_SetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetAttribute[1] = {{ wxLua_wxPGProperty_SetAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetAttribute }};
//     void SetAttribute( const wxString& name, wxVariant value );
static int LUACALL wxLua_wxPGProperty_SetAttribute(lua_State *L)
{
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetAttribute
    self->SetAttribute(name, value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetAttributes[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGAttributeStorage, NULL };
static int LUACALL wxLua_wxPGProperty_SetAttributes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetAttributes[1] = {{ wxLua_wxPGProperty_SetAttributes, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetAttributes }};
//     void SetAttributes( const wxPGAttributeStorage& attributes );
static int LUACALL wxLua_wxPGProperty_SetAttributes(lua_State *L)
{
    // const wxPGAttributeStorage attributes
    const wxPGAttributeStorage * attributes = (const wxPGAttributeStorage *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGAttributeStorage);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetAttributes
    self->SetAttributes(*attributes);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetAutoUnspecified[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_SetAutoUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetAutoUnspecified[1] = {{ wxLua_wxPGProperty_SetAutoUnspecified, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetAutoUnspecified }};
//     void SetAutoUnspecified( bool enable = true );
static int LUACALL wxLua_wxPGProperty_SetAutoUnspecified(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool enable = true
    bool enable = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetAutoUnspecified
    self->SetAutoUnspecified(enable);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetBackgroundColour[] = { &wxluatype_wxPGProperty, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetBackgroundColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetBackgroundColour[1] = {{ wxLua_wxPGProperty_SetBackgroundColour, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetBackgroundColour }};
//                               int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPGProperty_SetBackgroundColour(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetBackgroundColour
    self->SetBackgroundColour(*colour, flags);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetCell[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGProperty_SetCell(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetCell[1] = {{ wxLua_wxPGProperty_SetCell, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetCell }};
//     void SetCell( int column, const wxPGCell& cell );
static int LUACALL wxLua_wxPGProperty_SetCell(lua_State *L)
{
    // const wxPGCell cell
    const wxPGCell * cell = (const wxPGCell *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGCell);
    // int column
    int column = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetCell
    self->SetCell(column, *cell);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetChoiceSelection[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetChoiceSelection(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetChoiceSelection[1] = {{ wxLua_wxPGProperty_SetChoiceSelection, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetChoiceSelection }};
//     void SetChoiceSelection( int newValue );
static int LUACALL wxLua_wxPGProperty_SetChoiceSelection(lua_State *L)
{
    // int newValue
    int newValue = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetChoiceSelection
    self->SetChoiceSelection(newValue);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetChoices[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGProperty_SetChoices(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetChoices[1] = {{ wxLua_wxPGProperty_SetChoices, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetChoices }};
//     bool SetChoices( wxPGChoices& choices );
static int LUACALL wxLua_wxPGProperty_SetChoices(lua_State *L)
{
    // wxPGChoices choices
    wxPGChoices * choices = (wxPGChoices *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoices);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetChoices
    bool returns = (self->SetChoices(*choices));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetClientData[] = { &wxluatype_wxPGProperty, &wxluatype_TLIGHTUSERDATA, NULL };
static int LUACALL wxLua_wxPGProperty_SetClientData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetClientData[1] = {{ wxLua_wxPGProperty_SetClientData, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetClientData }};
//     void SetClientData( void* clientData );
static int LUACALL wxLua_wxPGProperty_SetClientData(lua_State *L)
{
    // void clientData
    void * clientData = (void *)wxlua_touserdata(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetClientData
    self->SetClientData(clientData);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetClientObject[] = { &wxluatype_wxPGProperty, &wxluatype_wxClientData, NULL };
static int LUACALL wxLua_wxPGProperty_SetClientObject(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetClientObject[1] = {{ wxLua_wxPGProperty_SetClientObject, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetClientObject }};
//     void SetClientObject(wxClientData* clientObject);
static int LUACALL wxLua_wxPGProperty_SetClientObject(lua_State *L)
{
    // wxClientData clientObject
    wxClientData * clientObject = (wxClientData *)wxluaT_getuserdatatype(L, 2, wxluatype_wxClientData);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetClientObject
    self->SetClientObject(clientObject);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetCommonValue[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetCommonValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetCommonValue[1] = {{ wxLua_wxPGProperty_SetCommonValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetCommonValue }};
//     void SetCommonValue( int commonValue );
static int LUACALL wxLua_wxPGProperty_SetCommonValue(lua_State *L)
{
    // int commonValue
    int commonValue = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetCommonValue
    self->SetCommonValue(commonValue);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetDefaultColours[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetDefaultColours(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetDefaultColours[1] = {{ wxLua_wxPGProperty_SetDefaultColours, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetDefaultColours }};
//     void SetDefaultColours(int flags = wxPG_RECURSE);
static int LUACALL wxLua_wxPGProperty_SetDefaultColours(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_RECURSE);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetDefaultColours
    self->SetDefaultColours(flags);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetDefaultValue[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGProperty_SetDefaultValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetDefaultValue[1] = {{ wxLua_wxPGProperty_SetDefaultValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetDefaultValue }};
//     void SetDefaultValue( wxVariant& value );
static int LUACALL wxLua_wxPGProperty_SetDefaultValue(lua_State *L)
{
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetDefaultValue
    self->SetDefaultValue(*value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetEditor1[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_SetEditor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetEditor1[1] = {{ wxLua_wxPGProperty_SetEditor1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetEditor1 }};
//     void SetEditor( const wxString& editorName );
static int LUACALL wxLua_wxPGProperty_SetEditor1(lua_State *L)
{
    // const wxString editorName
    const wxString editorName = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetEditor
    self->SetEditor(editorName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetEditor[] = { &wxluatype_wxPGProperty, &wxluatype_wxPGEditor, NULL };
static int LUACALL wxLua_wxPGProperty_SetEditor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetEditor[1] = {{ wxLua_wxPGProperty_SetEditor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetEditor }};
//     void SetEditor( const wxPGEditor* editor );
static int LUACALL wxLua_wxPGProperty_SetEditor(lua_State *L)
{
    // const wxPGEditor editor
    const wxPGEditor * editor = (const wxPGEditor *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGEditor);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetEditor
    self->SetEditor(editor);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetExpanded[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_SetExpanded(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetExpanded[1] = {{ wxLua_wxPGProperty_SetExpanded, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetExpanded }};
//     void SetExpanded( bool expanded );
static int LUACALL wxLua_wxPGProperty_SetExpanded(lua_State *L)
{
    // bool expanded
    bool expanded = wxlua_getbooleantype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetExpanded
    self->SetExpanded(expanded);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetFlagRecursively[] = { &wxluatype_wxPGProperty, &wxluatype_TINTEGER, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_SetFlagRecursively(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetFlagRecursively[1] = {{ wxLua_wxPGProperty_SetFlagRecursively, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetFlagRecursively }};
//     void SetFlagRecursively( wxPGPropertyFlags flag, bool set );
static int LUACALL wxLua_wxPGProperty_SetFlagRecursively(lua_State *L)
{
    // bool set
    bool set = wxlua_getbooleantype(L, 3);
    // wxPGPropertyFlags flag
    wxPGPropertyFlags flag = (wxPGPropertyFlags)wxlua_getenumtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetFlagRecursively
    self->SetFlagRecursively(flag, set);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetFlagsFromString[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_SetFlagsFromString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetFlagsFromString[1] = {{ wxLua_wxPGProperty_SetFlagsFromString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetFlagsFromString }};
//     void SetFlagsFromString( const wxString& str );
static int LUACALL wxLua_wxPGProperty_SetFlagsFromString(lua_State *L)
{
    // const wxString str
    const wxString str = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetFlagsFromString
    self->SetFlagsFromString(str);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetHelpString[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_SetHelpString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetHelpString[1] = {{ wxLua_wxPGProperty_SetHelpString, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetHelpString }};
//     void SetHelpString( const wxString& helpString );
static int LUACALL wxLua_wxPGProperty_SetHelpString(lua_State *L)
{
    // const wxString helpString
    const wxString helpString = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetHelpString
    self->SetHelpString(helpString);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetLabel[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_SetLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetLabel[1] = {{ wxLua_wxPGProperty_SetLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetLabel }};
//     void SetLabel( const wxString& label );
static int LUACALL wxLua_wxPGProperty_SetLabel(lua_State *L)
{
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetLabel
    self->SetLabel(label);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetMaxLength[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetMaxLength(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetMaxLength[1] = {{ wxLua_wxPGProperty_SetMaxLength, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetMaxLength }};
//     bool SetMaxLength( int maxLen );
static int LUACALL wxLua_wxPGProperty_SetMaxLength(lua_State *L)
{
    // int maxLen
    int maxLen = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetMaxLength
    bool returns = (self->SetMaxLength(maxLen));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetModifiedStatus[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_SetModifiedStatus(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetModifiedStatus[1] = {{ wxLua_wxPGProperty_SetModifiedStatus, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetModifiedStatus }};
//     void SetModifiedStatus( bool modified );
static int LUACALL wxLua_wxPGProperty_SetModifiedStatus(lua_State *L)
{
    // bool modified
    bool modified = wxlua_getbooleantype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetModifiedStatus
    self->SetModifiedStatus(modified);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetName[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGProperty_SetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetName[1] = {{ wxLua_wxPGProperty_SetName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetName }};
//     void SetName( const wxString& newName );
static int LUACALL wxLua_wxPGProperty_SetName(lua_State *L)
{
    // const wxString newName
    const wxString newName = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetName
    self->SetName(newName);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetParentalType[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetParentalType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetParentalType[1] = {{ wxLua_wxPGProperty_SetParentalType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetParentalType }};
//     void SetParentalType( int flag );
static int LUACALL wxLua_wxPGProperty_SetParentalType(lua_State *L)
{
    // int flag
    int flag = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetParentalType
    self->SetParentalType(flag);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetTextColour[] = { &wxluatype_wxPGProperty, &wxluatype_wxColour, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetTextColour(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetTextColour[1] = {{ wxLua_wxPGProperty_SetTextColour, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetTextColour }};
//                         int flags = wxPG_RECURSE );
static int LUACALL wxLua_wxPGProperty_SetTextColour(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_RECURSE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_RECURSE);
    // const wxColour colour
    const wxColour * colour = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetTextColour
    self->SetTextColour(*colour, flags);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValidator[] = { &wxluatype_wxPGProperty, &wxluatype_wxValidator, NULL };
static int LUACALL wxLua_wxPGProperty_SetValidator(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValidator[1] = {{ wxLua_wxPGProperty_SetValidator, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetValidator }};
//     void SetValidator( const wxValidator& validator );
static int LUACALL wxLua_wxPGProperty_SetValidator(lua_State *L)
{
    // const wxValidator validator
    const wxValidator * validator = (const wxValidator *)wxluaT_getuserdatatype(L, 2, wxluatype_wxValidator);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValidator
    self->SetValidator(*validator);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValue[] = { &wxluatype_wxPGProperty, &wxluatype_TANY, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValue[1] = {{ wxLua_wxPGProperty_SetValue, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxPGProperty_SetValue }};
//                    int flags = wxPG_SETVAL_REFRESH_EDITOR );
static int LUACALL wxLua_wxPGProperty_SetValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_SETVAL_REFRESH_EDITOR
    int flags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_SETVAL_REFRESH_EDITOR);
    // wxVariant pList = NULL
    wxVariant * pList = (argCount >= 3 ? (wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant) : NULL);
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValue
    self->SetValue(value, pList, flags);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValueFromInt[] = { &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetValueFromInt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValueFromInt[1] = {{ wxLua_wxPGProperty_SetValueFromInt, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetValueFromInt }};
//     bool SetValueFromInt( long value, int flags = 0 );
static int LUACALL wxLua_wxPGProperty_SetValueFromInt(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = 0
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // long value
    long value = (long)wxlua_getnumbertype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValueFromInt
    bool returns = (self->SetValueFromInt(value, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValueFromString[] = { &wxluatype_wxPGProperty, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_SetValueFromString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValueFromString[1] = {{ wxLua_wxPGProperty_SetValueFromString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_SetValueFromString }};
//     bool SetValueFromString( const wxString& text, int flags = wxPG_PROGRAMMATIC_VALUE );
static int LUACALL wxLua_wxPGProperty_SetValueFromString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxPG_PROGRAMMATIC_VALUE
    int flags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_PROGRAMMATIC_VALUE);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValueFromString
    bool returns = (self->SetValueFromString(text, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValueImage[] = { &wxluatype_wxPGProperty, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxPGProperty_SetValueImage(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValueImage[1] = {{ wxLua_wxPGProperty_SetValueImage, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetValueImage }};
//     void SetValueImage( wxBitmap& bmp );
static int LUACALL wxLua_wxPGProperty_SetValueImage(lua_State *L)
{
    // wxBitmap bmp
    wxBitmap * bmp = (wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValueImage
    self->SetValueImage(*bmp);

    return 0;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValueInEvent[] = { &wxluatype_wxPGProperty, &wxluatype_TANY, NULL };
static int LUACALL wxLua_wxPGProperty_SetValueInEvent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValueInEvent[1] = {{ wxLua_wxPGProperty_SetValueInEvent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetValueInEvent }};
//     void SetValueInEvent( wxVariant value ) const;
static int LUACALL wxLua_wxPGProperty_SetValueInEvent(lua_State *L)
{
    // wxVariant value
    wxVariant value = wxlua_getwxVarianttype(L, 2);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValueInEvent
    self->SetValueInEvent(value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetValueToUnspecified[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_SetValueToUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetValueToUnspecified[1] = {{ wxLua_wxPGProperty_SetValueToUnspecified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_SetValueToUnspecified }};
//     void SetValueToUnspecified();
static int LUACALL wxLua_wxPGProperty_SetValueToUnspecified(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetValueToUnspecified
    self->SetValueToUnspecified();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_SetWasModified[] = { &wxluatype_wxPGProperty, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxPGProperty_SetWasModified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetWasModified[1] = {{ wxLua_wxPGProperty_SetWasModified, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetWasModified }};
//     void SetWasModified( bool set = true );
static int LUACALL wxLua_wxPGProperty_SetWasModified(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // bool set = true
    bool set = (argCount >= 2 ? wxlua_getbooleantype(L, 2) : true);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call SetWasModified
    self->SetWasModified(set);

    return 0;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_StringToValue[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_StringToValue[1] = {{ wxLua_wxPGProperty_StringToValue, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGProperty_StringToValue }};
//     virtual bool StringToValue( wxVariant& variant, const wxString& text, int argFlags = 0 ) const;
static int LUACALL wxLua_wxPGProperty_StringToValue(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : 0);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 3);
    // wxVariant variant
    wxVariant * variant = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*variant, text, argFlags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_UpdateParentValues[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_UpdateParentValues(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_UpdateParentValues[1] = {{ wxLua_wxPGProperty_UpdateParentValues, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_UpdateParentValues }};
//     %ungc wxPGProperty* UpdateParentValues();
static int LUACALL wxLua_wxPGProperty_UpdateParentValues(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call UpdateParentValues
    wxPGProperty* returns = (wxPGProperty*)self->UpdateParentValues();
    if (wxluaO_isgcobject(L, returns)) wxluaO_undeletegcobject(L, returns);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_UsesAutoUnspecified[] = { &wxluatype_wxPGProperty, NULL };
static int LUACALL wxLua_wxPGProperty_UsesAutoUnspecified(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_UsesAutoUnspecified[1] = {{ wxLua_wxPGProperty_UsesAutoUnspecified, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_UsesAutoUnspecified }};
//     bool UsesAutoUnspecified() const;
static int LUACALL wxLua_wxPGProperty_UsesAutoUnspecified(lua_State *L)
{
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call UsesAutoUnspecified
    bool returns = (self->UsesAutoUnspecified());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_ValidateValue[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_wxPGValidationInfo, NULL };
static int LUACALL wxLua_wxPGProperty_ValidateValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_ValidateValue[1] = {{ wxLua_wxPGProperty_ValidateValue, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_ValidateValue }};
//     virtual bool ValidateValue( wxVariant& value, wxPGValidationInfo& validationInfo ) const;
static int LUACALL wxLua_wxPGProperty_ValidateValue(lua_State *L)
{
    // wxPGValidationInfo validationInfo
    wxPGValidationInfo * validationInfo = (wxPGValidationInfo *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGValidationInfo);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call ValidateValue
    bool returns = (self->ValidateValue(*value, *validationInfo));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_ValueToString[] = { &wxluatype_wxPGProperty, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGProperty_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_ValueToString[1] = {{ wxLua_wxPGProperty_ValueToString, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGProperty_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
static int LUACALL wxLua_wxPGProperty_ValueToString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : 0);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGProperty * self = (wxPGProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGProperty);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGProperty_delete[] = { &wxluatype_wxPGProperty, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGProperty_delete }};




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetAttribute_overload[] =
{
    { wxLua_wxPGProperty_GetAttribute1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute1 },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { wxLua_wxPGProperty_GetAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetAttribute },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
};
static int s_wxluafunc_wxLua_wxPGProperty_GetAttribute_overload_count = sizeof(s_wxluafunc_wxLua_wxPGProperty_GetAttribute_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_GetCell_overload[] =
{
    { wxLua_wxPGProperty_GetCell1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetCell1 },
    { wxLua_wxPGProperty_GetCell, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_GetCell },
};
static int s_wxluafunc_wxLua_wxPGProperty_GetCell_overload_count = sizeof(s_wxluafunc_wxLua_wxPGProperty_GetCell_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_HasFlag_overload[] =
{
    { wxLua_wxPGProperty_HasFlag1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_HasFlag1 },
    { wxLua_wxPGProperty_HasFlag, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_HasFlag },
};
static int s_wxluafunc_wxLua_wxPGProperty_HasFlag_overload_count = sizeof(s_wxluafunc_wxLua_wxPGProperty_HasFlag_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGProperty_SetEditor_overload[] =
{
    { wxLua_wxPGProperty_SetEditor1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetEditor1 },
    { wxLua_wxPGProperty_SetEditor, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGProperty_SetEditor },
};
static int s_wxluafunc_wxLua_wxPGProperty_SetEditor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGProperty_SetEditor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGProperty_delete_function(void** p)
{
    wxPGProperty* o = (wxPGProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AdaptListToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AdaptListToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "AddChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AddChild, 1, NULL },
#endif // (((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "AddChoice", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AddChoice, 1, NULL },
    { "AddPrivateChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AddPrivateChild, 1, NULL },
    { "AppendChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AppendChild, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "AreAllChildrenSpecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AreAllChildrenSpecified, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "AreChildrenComponents", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_AreChildrenComponents, 1, NULL },
    { "ChangeFlag", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_ChangeFlag, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ChildChanged", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_ChildChanged, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "DeleteChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DeleteChildren, 1, NULL },
    { "DeleteChoice", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DeleteChoice, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoGetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DoGetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "DoGetEditorClass", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DoGetEditorClass, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "DoGetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DoGetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "DoGetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DoGetValue, 1, NULL },
    { "DoSetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_DoSetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "Enable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_Enable, 1, NULL },
    { "EnableCommonValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_EnableCommonValue, 1, NULL },
    { "GenerateComposedValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GenerateComposedValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))
    { "GetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetAttribute_overload, s_wxluafunc_wxLua_wxPGProperty_GetAttribute_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT))

    { "GetAttributeAsDouble", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetAttributeAsDouble, 1, NULL },
    { "GetAttributeAsLong", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetAttributeAsLong, 1, NULL },
    { "GetAttributes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetAttributes, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetAttributesAsList", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetAttributesAsList, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetBaseName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetBaseName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetCell_overload, s_wxluafunc_wxLua_wxPGProperty_GetCell_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetCellRenderer", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetCellRenderer, 1, NULL },
    { "GetChildCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetChildCount, 1, NULL },
    { "GetChildrenHeight", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetChildrenHeight, 1, NULL },
    { "GetChoiceSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetChoiceSelection, 1, NULL },
    { "GetChoices", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetChoices, 1, NULL },
    { "GetClientData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetClientData, 1, NULL },
    { "GetClientObject", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetClientObject, 1, NULL },
    { "GetColumnEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetColumnEditor, 1, NULL },
    { "GetCommonValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetCommonValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetDefaultValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetDefaultValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetDepth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetDepth, 1, NULL },
    { "GetDisplayedCommonValueCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetDisplayedCommonValueCount, 1, NULL },
    { "GetDisplayedString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetDisplayedString, 1, NULL },
    { "GetEditorClass", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetEditorClass, 1, NULL },
    { "GetEditorDialog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetEditorDialog, 1, NULL },
    { "GetFlagsAsString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetFlagsAsString, 1, NULL },
    { "GetGrid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetGrid, 1, NULL },
    { "GetGridIfDisplayed", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetGridIfDisplayed, 1, NULL },
    { "GetHelpString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetHelpString, 1, NULL },
    { "GetHintText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetHintText, 1, NULL },
    { "GetImageOffset", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetImageOffset, 1, NULL },
    { "GetIndexInParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetIndexInParent, 1, NULL },
    { "GetItemAtY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetItemAtY, 1, NULL },
    { "GetLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetLabel, 1, NULL },
    { "GetLastVisibleSubItem", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetLastVisibleSubItem, 1, NULL },
    { "GetMainParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetMainParent, 1, NULL },
    { "GetMaxLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetMaxLength, 1, NULL },
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetName, 1, NULL },
    { "GetOrCreateCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetOrCreateCell, 1, NULL },
    { "GetParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetParent, 1, NULL },
    { "GetPropertyByName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetPropertyByName, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "GetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetValueAsString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValueAsString, 1, NULL },

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetValueImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValueImage, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetValueString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValueString, 1, NULL },
#endif // ((defined(WXWIN_COMPATIBILITY_1_4) && WXWIN_COMPATIBILITY_1_4)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetValueType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetValueType, 1, NULL },
    { "GetY", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_GetY, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "HasFlag", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_HasFlag_overload, s_wxluafunc_wxLua_wxPGProperty_HasFlag_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "HasFlagsExact", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_HasFlagsExact, 1, NULL },
    { "HasVisibleChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_HasVisibleChildren, 1, NULL },
    { "Hide", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_Hide, 1, NULL },
    { "Index", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_Index, 1, NULL },
    { "InsertChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_InsertChild, 1, NULL },
    { "InsertChoice", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_InsertChoice, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "IntToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IntToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "IsCategory", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsCategory, 1, NULL },
    { "IsEnabled", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsEnabled, 1, NULL },
    { "IsExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsExpanded, 1, NULL },
    { "IsRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsRoot, 1, NULL },
    { "IsSomeParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsSomeParent, 1, NULL },
    { "IsSubProperty", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsSubProperty, 1, NULL },
    { "IsTextEditable", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsTextEditable, 1, NULL },
    { "IsValueUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsValueUnspecified, 1, NULL },
    { "IsVisible", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_IsVisible, 1, NULL },
    { "Item", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_Item, 1, NULL },
    { "Last", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_Last, 1, NULL },
    { "OnEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_OnEvent, 1, NULL },

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "OnMeasureImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_OnMeasureImage, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "OnSetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_OnSetValue, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "OnValidationFailure", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_OnValidationFailure, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "RecreateEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_RecreateEditor, 1, NULL },
    { "RefreshChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_RefreshChildren, 1, NULL },
    { "RefreshEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_RefreshEditor, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetAttribute, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetAttributes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetAttributes, 1, NULL },
    { "SetAutoUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetAutoUnspecified, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetBackgroundColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetBackgroundColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetCell, 1, NULL },
    { "SetChoiceSelection", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetChoiceSelection, 1, NULL },
    { "SetChoices", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetChoices, 1, NULL },
    { "SetClientData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetClientData, 1, NULL },
    { "SetClientObject", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetClientObject, 1, NULL },
    { "SetCommonValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetCommonValue, 1, NULL },
    { "SetDefaultColours", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetDefaultColours, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetDefaultValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetDefaultValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetEditor", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetEditor_overload, s_wxluafunc_wxLua_wxPGProperty_SetEditor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetExpanded", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetExpanded, 1, NULL },
    { "SetFlagRecursively", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetFlagRecursively, 1, NULL },
    { "SetFlagsFromString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetFlagsFromString, 1, NULL },
    { "SetHelpString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetHelpString, 1, NULL },
    { "SetLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetLabel, 1, NULL },
    { "SetMaxLength", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetMaxLength, 1, NULL },
    { "SetModifiedStatus", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetModifiedStatus, 1, NULL },
    { "SetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetName, 1, NULL },
    { "SetParentalType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetParentalType, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetTextColour", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetTextColour, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)
    { "SetValidator", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValidator, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxLUA_USE_wxValidator && wxUSE_VALIDATORS)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetValueFromInt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValueFromInt, 1, NULL },
    { "SetValueFromString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValueFromString, 1, NULL },

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetValueImage", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValueImage, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "SetValueInEvent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValueInEvent, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "SetValueToUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetValueToUnspecified, 1, NULL },
    { "SetWasModified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_SetWasModified, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_StringToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "UpdateParentValues", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_UpdateParentValues, 1, NULL },
    { "UsesAutoUnspecified", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_UsesAutoUnspecified, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ValidateValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_ValidateValue, 1, NULL },
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGProperty_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGProperty_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGProperty_methodCount = sizeof(wxPGProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGCellRenderer
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGCellRenderer'
int wxluatype_wxPGCellRenderer = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_DrawCaptionSelectionRect[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxDC, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCellRenderer_DrawCaptionSelectionRect(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_DrawCaptionSelectionRect[1] = {{ wxLua_wxPGCellRenderer_DrawCaptionSelectionRect, WXLUAMETHOD_METHOD, 6, 6, s_wxluatypeArray_wxLua_wxPGCellRenderer_DrawCaptionSelectionRect }};
//                                           int x, int y, int w, int h) const;
static int LUACALL wxLua_wxPGCellRenderer_DrawCaptionSelectionRect(lua_State *L)
{
    // int h
    int h = (int)wxlua_getnumbertype(L, 6);
    // int w
    int w = (int)wxlua_getnumbertype(L, 5);
    // int y
    int y = (int)wxlua_getnumbertype(L, 4);
    // int x
    int x = (int)wxlua_getnumbertype(L, 3);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call DrawCaptionSelectionRect
    self->DrawCaptionSelectionRect(*dc, x, y, w, h);

    return 0;
}

#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_DrawText[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_TNUMBER, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGCellRenderer_DrawText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_DrawText[1] = {{ wxLua_wxPGCellRenderer_DrawText, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCellRenderer_DrawText }};
//                    const wxString& text ) const;
static int LUACALL wxLua_wxPGCellRenderer_DrawText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 5);
    // int imageWidth
    int imageWidth = (int)wxlua_getnumbertype(L, 4);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call DrawText
    self->DrawText(*dc, *rect, imageWidth, text);

    return 0;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_GetImageSize[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCellRenderer_GetImageSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_GetImageSize[1] = {{ wxLua_wxPGCellRenderer_GetImageSize, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGCellRenderer_GetImageSize }};
//                                  int item ) const;
static int LUACALL wxLua_wxPGCellRenderer_GetImageSize(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 4);
    // int column
    int column = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty property
    const wxPGProperty * property = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call GetImageSize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetImageSize(property, column, item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_PostDrawCell[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxDC, &wxluatype_wxPropertyGrid, &wxluatype_wxPGCell, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCellRenderer_PostDrawCell(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_PostDrawCell[1] = {{ wxLua_wxPGCellRenderer_PostDrawCell, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCellRenderer_PostDrawCell }};
//                        int flags ) const;
static int LUACALL wxLua_wxPGCellRenderer_PostDrawCell(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 5);
    // const wxPGCell cell
    const wxPGCell * cell = (const wxPGCell *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGCell);
    // const wxPropertyGrid propGrid
    const wxPropertyGrid * propGrid = (const wxPropertyGrid *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPropertyGrid);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call PostDrawCell
    self->PostDrawCell(*dc, propGrid, *cell, flags);

    return 0;
}

#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_PreDrawCell[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPGCell, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCellRenderer_PreDrawCell(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_PreDrawCell[1] = {{ wxLua_wxPGCellRenderer_PreDrawCell, WXLUAMETHOD_METHOD, 5, 5, s_wxluatypeArray_wxLua_wxPGCellRenderer_PreDrawCell }};
//                      int flags ) const;
static int LUACALL wxLua_wxPGCellRenderer_PreDrawCell(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 5);
    // const wxPGCell cell
    const wxPGCell * cell = (const wxPGCell *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPGCell);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call PreDrawCell
    int returns = (self->PreDrawCell(*dc, *rect, *cell, flags));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_Render[] = { &wxluatype_wxPGCellRenderer, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGCellRenderer_Render(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_Render[1] = {{ wxLua_wxPGCellRenderer_Render, WXLUAMETHOD_METHOD, 8, 8, s_wxluatypeArray_wxLua_wxPGCellRenderer_Render }};
//                          int flags ) const = 0;
static int LUACALL wxLua_wxPGCellRenderer_Render(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 8);
    // int item
    int item = (int)wxlua_getnumbertype(L, 7);
    // int column
    int column = (int)wxlua_getnumbertype(L, 6);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPGProperty);
    // const wxPropertyGrid propertyGrid
    const wxPropertyGrid * propertyGrid = (const wxPropertyGrid *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPropertyGrid);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGCellRenderer * self = (wxPGCellRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellRenderer);
    // call Render
    bool returns = (self->Render(*dc, *rect, propertyGrid, property, column, item, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellRenderer_delete[] = { &wxluatype_wxPGCellRenderer, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellRenderer_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGCellRenderer_delete }};




void wxLua_wxPGCellRenderer_delete_function(void** p)
{
    wxPGCellRenderer* o = (wxPGCellRenderer*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGCellRenderer_methods[] = {
#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DrawCaptionSelectionRect", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_DrawCaptionSelectionRect, 1, NULL },
#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "DrawText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_DrawText, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetImageSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_GetImageSize, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "PostDrawCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_PostDrawCell, 1, NULL },
#endif // (wxLUA_USE_wxDC) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "PreDrawCell", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_PreDrawCell, 1, NULL },
    { "Render", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellRenderer_Render, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGCellRenderer_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGCellRenderer_methodCount = sizeof(wxPGCellRenderer_methods)/sizeof(wxLuaBindMethod) - 1;

wxLuaBindNumber wxPGCellRenderer_enums[] = {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "ChoicePopup", wxPGCellRenderer::ChoicePopup },
        { "Control", wxPGCellRenderer::Control },
        { "Disabled", wxPGCellRenderer::Disabled },
        { "DontUseCellBgCol", wxPGCellRenderer::DontUseCellBgCol },
        { "DontUseCellColours", wxPGCellRenderer::DontUseCellColours },
        { "DontUseCellFgCol", wxPGCellRenderer::DontUseCellFgCol },
        { "Selected", wxPGCellRenderer::Selected },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

    { NULL, 0, },
};
int wxPGCellRenderer_enumCount = sizeof(wxPGCellRenderer_enums)/sizeof(wxLuaBindNumber) - 1;
#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGDefaultRenderer
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGDefaultRenderer'
int wxluatype_wxPGDefaultRenderer = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGDefaultRenderer_GetImageSize[] = { &wxluatype_wxPGDefaultRenderer, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGDefaultRenderer_GetImageSize(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGDefaultRenderer_GetImageSize[1] = {{ wxLua_wxPGDefaultRenderer_GetImageSize, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGDefaultRenderer_GetImageSize }};
//                                  int item ) const;
static int LUACALL wxLua_wxPGDefaultRenderer_GetImageSize(lua_State *L)
{
    // int item
    int item = (int)wxlua_getnumbertype(L, 4);
    // int column
    int column = (int)wxlua_getnumbertype(L, 3);
    // const wxPGProperty property
    const wxPGProperty * property = (const wxPGProperty *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGProperty);
    // get this
    wxPGDefaultRenderer * self = (wxPGDefaultRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGDefaultRenderer);
    // call GetImageSize
    // allocate a new object using the copy constructor
    wxSize* returns = new wxSize(self->GetImageSize(property, column, item));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxSize);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxSize);

    return 1;
}

#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGDefaultRenderer_Render[] = { &wxluatype_wxPGDefaultRenderer, &wxluatype_wxDC, &wxluatype_wxRect, &wxluatype_wxPropertyGrid, &wxluatype_wxPGProperty, &wxluatype_TNUMBER, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGDefaultRenderer_Render(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGDefaultRenderer_Render[1] = {{ wxLua_wxPGDefaultRenderer_Render, WXLUAMETHOD_METHOD, 8, 8, s_wxluatypeArray_wxLua_wxPGDefaultRenderer_Render }};
//                          int flags ) const;
static int LUACALL wxLua_wxPGDefaultRenderer_Render(lua_State *L)
{
    // int flags
    int flags = (int)wxlua_getnumbertype(L, 8);
    // int item
    int item = (int)wxlua_getnumbertype(L, 7);
    // int column
    int column = (int)wxlua_getnumbertype(L, 6);
    // wxPGProperty property
    wxPGProperty * property = (wxPGProperty *)wxluaT_getuserdatatype(L, 5, wxluatype_wxPGProperty);
    // const wxPropertyGrid propertyGrid
    const wxPropertyGrid * propertyGrid = (const wxPropertyGrid *)wxluaT_getuserdatatype(L, 4, wxluatype_wxPropertyGrid);
    // const wxRect rect
    const wxRect * rect = (const wxRect *)wxluaT_getuserdatatype(L, 3, wxluatype_wxRect);
    // wxDC dc
    wxDC * dc = (wxDC *)wxluaT_getuserdatatype(L, 2, wxluatype_wxDC);
    // get this
    wxPGDefaultRenderer * self = (wxPGDefaultRenderer *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGDefaultRenderer);
    // call Render
    bool returns = (self->Render(*dc, *rect, propertyGrid, property, column, item, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGDefaultRenderer_delete[] = { &wxluatype_wxPGDefaultRenderer, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGDefaultRenderer_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGDefaultRenderer_delete }};




void wxLua_wxPGDefaultRenderer_delete_function(void** p)
{
    wxPGDefaultRenderer* o = (wxPGDefaultRenderer*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGDefaultRenderer_methods[] = {
#if (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetImageSize", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGDefaultRenderer_GetImageSize, 1, NULL },
#endif // (wxLUA_USE_wxPointSizeRect) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Render", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGDefaultRenderer_Render, 1, NULL },
#endif // ((wxLUA_USE_wxDC) && (wxLUA_USE_wxPointSizeRect)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGDefaultRenderer_delete, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGDefaultRenderer_methodCount = sizeof(wxPGDefaultRenderer_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGCellData
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGCellData'
int wxluatype_wxPGCellData = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellData_SetBgCol[] = { &wxluatype_wxPGCellData, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPGCellData_SetBgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_SetBgCol[1] = {{ wxLua_wxPGCellData_SetBgCol, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCellData_SetBgCol }};
//     void SetBgCol( const wxColour& col );
static int LUACALL wxLua_wxPGCellData_SetBgCol(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGCellData * self = (wxPGCellData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellData);
    // call SetBgCol
    self->SetBgCol(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellData_SetBitmap[] = { &wxluatype_wxPGCellData, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxPGCellData_SetBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_SetBitmap[1] = {{ wxLua_wxPGCellData_SetBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCellData_SetBitmap }};
//     void SetBitmap( const wxBitmap& bitmap );
static int LUACALL wxLua_wxPGCellData_SetBitmap(lua_State *L)
{
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxPGCellData * self = (wxPGCellData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellData);
    // call SetBitmap
    self->SetBitmap(*bitmap);

    return 0;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellData_SetFgCol[] = { &wxluatype_wxPGCellData, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPGCellData_SetFgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_SetFgCol[1] = {{ wxLua_wxPGCellData_SetFgCol, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCellData_SetFgCol }};
//     void SetFgCol( const wxColour& col );
static int LUACALL wxLua_wxPGCellData_SetFgCol(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGCellData * self = (wxPGCellData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellData);
    // call SetFgCol
    self->SetFgCol(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellData_SetFont[] = { &wxluatype_wxPGCellData, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxPGCellData_SetFont(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_SetFont[1] = {{ wxLua_wxPGCellData_SetFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCellData_SetFont }};
//     void SetFont( const wxFont& font );
static int LUACALL wxLua_wxPGCellData_SetFont(lua_State *L)
{
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // get this
    wxPGCellData * self = (wxPGCellData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellData);
    // call SetFont
    self->SetFont(*font);

    return 0;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCellData_SetText[] = { &wxluatype_wxPGCellData, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGCellData_SetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_SetText[1] = {{ wxLua_wxPGCellData_SetText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCellData_SetText }};
//     void SetText( const wxString& text );
static int LUACALL wxLua_wxPGCellData_SetText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGCellData * self = (wxPGCellData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCellData);
    // call SetText
    self->SetText(text);

    return 0;
}

static int LUACALL wxLua_wxPGCellData_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCellData_constructor[1] = {{ wxLua_wxPGCellData_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGCellData();
static int LUACALL wxLua_wxPGCellData_constructor(lua_State *L)
{
    // call constructor
    wxPGCellData* returns = new wxPGCellData();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCellData);

    return 1;
}




// %override wxLua_wxPGCellData_delete_function
// delete is private in wxPGCellData
void wxLua_wxPGCellData_delete_function(void** p)
{
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGCellData_methods[] = {
#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetBgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellData_SetBgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellData_SetBitmap, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetFgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellData_SetFgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellData_SetFont, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCellData_SetText, 1, NULL },
    { "wxPGCellData", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGCellData_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGCellData_methodCount = sizeof(wxPGCellData_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGCell
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGCell'
int wxluatype_wxPGCell = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetBgCol[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetBgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetBgCol[1] = {{ wxLua_wxPGCell_GetBgCol, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetBgCol }};
//     const wxColour& GetBgCol() const;
static int LUACALL wxLua_wxPGCell_GetBgCol(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetBgCol
    const wxColour* returns = (const wxColour*)&self->GetBgCol();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetBitmap[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetBitmap[1] = {{ wxLua_wxPGCell_GetBitmap, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetBitmap }};
//     const wxBitmap& GetBitmap() const;
static int LUACALL wxLua_wxPGCell_GetBitmap(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetBitmap
    const wxBitmap* returns = (const wxBitmap*)&self->GetBitmap();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxBitmap);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetData1[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetData1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetData1[1] = {{ wxLua_wxPGCell_GetData1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetData1 }};
//     const wxPGCellData* GetData() const;
static int LUACALL wxLua_wxPGCell_GetData1(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetData
    const wxPGCellData* returns = (const wxPGCellData*)self->GetData();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCellData);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetData[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetData(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetData[1] = {{ wxLua_wxPGCell_GetData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetData }};
//     wxPGCellData* GetData();
static int LUACALL wxLua_wxPGCell_GetData(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetData
    wxPGCellData* returns = (wxPGCellData*)self->GetData();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCellData);

    return 1;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetFgCol[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetFgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetFgCol[1] = {{ wxLua_wxPGCell_GetFgCol, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetFgCol }};
//     const wxColour& GetFgCol() const;
static int LUACALL wxLua_wxPGCell_GetFgCol(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetFgCol
    const wxColour* returns = (const wxColour*)&self->GetFgCol();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxColour);

    return 1;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetFont[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetFont(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetFont[1] = {{ wxLua_wxPGCell_GetFont, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetFont }};
//     const wxFont& GetFont() const;
static int LUACALL wxLua_wxPGCell_GetFont(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetFont
    const wxFont* returns = (const wxFont*)&self->GetFont();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxFont);

    return 1;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_GetText[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_GetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetText[1] = {{ wxLua_wxPGCell_GetText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetText }};
//     const wxString& GetText() const;
static int LUACALL wxLua_wxPGCell_GetText(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call GetText
    wxString returns = (self->GetText());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_HasText[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_HasText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_HasText[1] = {{ wxLua_wxPGCell_HasText, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_HasText }};
//     bool HasText() const;
static int LUACALL wxLua_wxPGCell_HasText(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call HasText
    bool returns = (self->HasText());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_MergeFrom[] = { &wxluatype_wxPGCell, &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_MergeFrom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_MergeFrom[1] = {{ wxLua_wxPGCell_MergeFrom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_MergeFrom }};
//     void MergeFrom( const wxPGCell& srcCell );
static int LUACALL wxLua_wxPGCell_MergeFrom(lua_State *L)
{
    // const wxPGCell srcCell
    const wxPGCell * srcCell = (const wxPGCell *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGCell);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call MergeFrom
    self->MergeFrom(*srcCell);

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetBgCol[] = { &wxluatype_wxPGCell, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPGCell_SetBgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetBgCol[1] = {{ wxLua_wxPGCell_SetBgCol, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_SetBgCol }};
//     void SetBgCol( const wxColour& col );
static int LUACALL wxLua_wxPGCell_SetBgCol(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetBgCol
    self->SetBgCol(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetBitmap[] = { &wxluatype_wxPGCell, &wxluatype_wxBitmap, NULL };
static int LUACALL wxLua_wxPGCell_SetBitmap(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetBitmap[1] = {{ wxLua_wxPGCell_SetBitmap, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_SetBitmap }};
//     void SetBitmap( const wxBitmap& bitmap );
static int LUACALL wxLua_wxPGCell_SetBitmap(lua_State *L)
{
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetBitmap
    self->SetBitmap(*bitmap);

    return 0;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetEmptyData[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_SetEmptyData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetEmptyData[1] = {{ wxLua_wxPGCell_SetEmptyData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_SetEmptyData }};
//     void SetEmptyData();
static int LUACALL wxLua_wxPGCell_SetEmptyData(lua_State *L)
{
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetEmptyData
    self->SetEmptyData();

    return 0;
}


#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetFgCol[] = { &wxluatype_wxPGCell, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPGCell_SetFgCol(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetFgCol[1] = {{ wxLua_wxPGCell_SetFgCol, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_SetFgCol }};
//     void SetFgCol( const wxColour& col );
static int LUACALL wxLua_wxPGCell_SetFgCol(lua_State *L)
{
    // const wxColour col
    const wxColour * col = (const wxColour *)wxluaT_getuserdatatype(L, 2, wxluatype_wxColour);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetFgCol
    self->SetFgCol(*col);

    return 0;
}

#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetFont[] = { &wxluatype_wxPGCell, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxPGCell_SetFont(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetFont[1] = {{ wxLua_wxPGCell_SetFont, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_SetFont }};
//     void SetFont( const wxFont& font );
static int LUACALL wxLua_wxPGCell_SetFont(lua_State *L)
{
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 2, wxluatype_wxFont);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetFont
    self->SetFont(*font);

    return 0;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_SetText[] = { &wxluatype_wxPGCell, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGCell_SetText(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_SetText[1] = {{ wxLua_wxPGCell_SetText, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_SetText }};
//     void SetText( const wxString& text );
static int LUACALL wxLua_wxPGCell_SetText(lua_State *L)
{
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call SetText
    self->SetText(text);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_delete[] = { &wxluatype_wxPGCell, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_op_set[] = { &wxluatype_wxPGCell, &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_op_set[1] = {{ wxLua_wxPGCell_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGCell_op_set }};
//     wxPGCell& operator=( const wxPGCell& other );
static int LUACALL wxLua_wxPGCell_op_set(lua_State *L)
{
    // const wxPGCell other
    const wxPGCell * other = (const wxPGCell *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGCell);
    // get this
    wxPGCell * self = (wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call op_set
    (*self)=(*other);
    wxPGCell* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}


#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_constructor2[] = { &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_wxColour, &wxluatype_wxColour, NULL };
static int LUACALL wxLua_wxPGCell_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_constructor2[1] = {{ wxLua_wxPGCell_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 4, s_wxluatypeArray_wxLua_wxPGCell_constructor2 }};
//               const wxColour& bgCol = wxNullColour );
static int LUACALL wxLua_wxPGCell_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxColour bgCol = wxNullColour
    const wxColour * bgCol = (argCount >= 4 ? (const wxColour *)wxluaT_getuserdatatype(L, 4, wxluatype_wxColour) : &wxNullColour);
    // const wxColour fgCol = wxNullColour
    const wxColour * fgCol = (argCount >= 3 ? (const wxColour *)wxluaT_getuserdatatype(L, 3, wxluatype_wxColour) : &wxNullColour);
    // const wxBitmap bitmap = wxNullBitmap
    const wxBitmap * bitmap = (argCount >= 2 ? (const wxBitmap *)wxluaT_getuserdatatype(L, 2, wxluatype_wxBitmap) : &wxNullBitmap);
    // const wxString text
    const wxString text = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxPGCell* returns = new wxPGCell(text, *bitmap, *fgCol, *bgCol);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGCell);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGCell_constructor1[] = { &wxluatype_wxPGCell, NULL };
static int LUACALL wxLua_wxPGCell_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_constructor1[1] = {{ wxLua_wxPGCell_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_constructor1 }};
//     wxPGCell(const wxPGCell& other);
static int LUACALL wxLua_wxPGCell_constructor1(lua_State *L)
{
    // const wxPGCell other
    const wxPGCell * other = (const wxPGCell *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGCell);
    // call constructor
    wxPGCell* returns = new wxPGCell(*other);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGCell);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}

static int LUACALL wxLua_wxPGCell_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_constructor[1] = {{ wxLua_wxPGCell_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGCell();
static int LUACALL wxLua_wxPGCell_constructor(lua_State *L)
{
    // call constructor
    wxPGCell* returns = new wxPGCell();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGCell);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGCell);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_GetData_overload[] =
{
    { wxLua_wxPGCell_GetData1, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetData1 },
    { wxLua_wxPGCell_GetData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_GetData },
};
static int s_wxluafunc_wxLua_wxPGCell_GetData_overload_count = sizeof(s_wxluafunc_wxLua_wxPGCell_GetData_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGCell_constructor_overload[] =
{

#if ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGCell_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 4, s_wxluatypeArray_wxLua_wxPGCell_constructor2 },
#endif // ((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGCell_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGCell_constructor1 },
    { wxLua_wxPGCell_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPGCell_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGCell_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGCell_delete_function(void** p)
{
    wxPGCell* o = (wxPGCell*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGCell_methods[] = {
#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetBgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetBgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetBitmap, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetData_overload, s_wxluafunc_wxLua_wxPGCell_GetData_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetFgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetFgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetFont, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_GetText, 1, NULL },
    { "HasText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_HasText, 1, NULL },
    { "MergeFrom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_MergeFrom, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetBgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetBgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetBitmap", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetBitmap, 1, NULL },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetEmptyData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetEmptyData, 1, NULL },

#if (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetFgCol", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetFgCol, 1, NULL },
#endif // (wxLUA_USE_wxColourPenBrush) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "SetFont", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetFont, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "SetText", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_SetText, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGCell_delete, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGCell_op_set, 1, NULL },

#if (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPGCell", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGCell_constructor_overload, s_wxluafunc_wxLua_wxPGCell_constructor_overload_count, 0 },
#endif // (((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxColourPenBrush)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGCell_methodCount = sizeof(wxPGCell_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGAttributeStorage
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGAttributeStorage'
int wxluatype_wxPGAttributeStorage = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGAttributeStorage_FindValue[] = { &wxluatype_wxPGAttributeStorage, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGAttributeStorage_FindValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGAttributeStorage_FindValue[1] = {{ wxLua_wxPGAttributeStorage_FindValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGAttributeStorage_FindValue }};
//     wxVariant FindValue( const wxString& name ) const;
static int LUACALL wxLua_wxPGAttributeStorage_FindValue(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGAttributeStorage * self = (wxPGAttributeStorage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGAttributeStorage);
    // call FindValue
    // allocate a new object using the copy constructor
    wxVariant* returns = new wxVariant(self->FindValue(name));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxVariant);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxVariant);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGAttributeStorage_GetCount[] = { &wxluatype_wxPGAttributeStorage, NULL };
static int LUACALL wxLua_wxPGAttributeStorage_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGAttributeStorage_GetCount[1] = {{ wxLua_wxPGAttributeStorage_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGAttributeStorage_GetCount }};
//     unsigned int GetCount() const;
static int LUACALL wxLua_wxPGAttributeStorage_GetCount(lua_State *L)
{
    // get this
    wxPGAttributeStorage * self = (wxPGAttributeStorage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGAttributeStorage);
    // call GetCount
    unsigned int returns = (self->GetCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGAttributeStorage_Set[] = { &wxluatype_wxPGAttributeStorage, &wxluatype_TSTRING, &wxluatype_wxVariant, NULL };
static int LUACALL wxLua_wxPGAttributeStorage_Set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGAttributeStorage_Set[1] = {{ wxLua_wxPGAttributeStorage_Set, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGAttributeStorage_Set }};
//     void Set( const wxString& name, const wxVariant& value );
static int LUACALL wxLua_wxPGAttributeStorage_Set(lua_State *L)
{
    // const wxVariant value
    const wxVariant * value = (const wxVariant *)wxluaT_getuserdatatype(L, 3, wxluatype_wxVariant);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGAttributeStorage * self = (wxPGAttributeStorage *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGAttributeStorage);
    // call Set
    self->Set(name, *value);

    return 0;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static int LUACALL wxLua_wxPGAttributeStorage_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGAttributeStorage_constructor[1] = {{ wxLua_wxPGAttributeStorage_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGAttributeStorage();
static int LUACALL wxLua_wxPGAttributeStorage_constructor(lua_State *L)
{
    // call constructor
    wxPGAttributeStorage* returns = new wxPGAttributeStorage();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGAttributeStorage);

    return 1;
}




void wxLua_wxPGAttributeStorage_delete_function(void** p)
{
    wxPGAttributeStorage* o = (wxPGAttributeStorage*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGAttributeStorage_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "FindValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGAttributeStorage_FindValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGAttributeStorage_GetCount, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "Set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGAttributeStorage_Set, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "wxPGAttributeStorage", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGAttributeStorage_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGAttributeStorage_methodCount = sizeof(wxPGAttributeStorage_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGChoiceEntry
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGChoiceEntry'
int wxluatype_wxPGChoiceEntry = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEntry_GetValue[] = { &wxluatype_wxPGChoiceEntry, NULL };
static int LUACALL wxLua_wxPGChoiceEntry_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_GetValue[1] = {{ wxLua_wxPGChoiceEntry_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEntry_GetValue }};
//     int GetValue() const;
static int LUACALL wxLua_wxPGChoiceEntry_GetValue(lua_State *L)
{
    // get this
    wxPGChoiceEntry * self = (wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEntry);
    // call GetValue
    int returns = (self->GetValue());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEntry_SetValue[] = { &wxluatype_wxPGChoiceEntry, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEntry_SetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_SetValue[1] = {{ wxLua_wxPGChoiceEntry_SetValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoiceEntry_SetValue }};
//     void SetValue( int value );
static int LUACALL wxLua_wxPGChoiceEntry_SetValue(lua_State *L)
{
    // int value
    int value = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGChoiceEntry * self = (wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEntry);
    // call SetValue
    self->SetValue(value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEntry_op_set[] = { &wxluatype_wxPGChoiceEntry, &wxluatype_wxPGChoiceEntry, NULL };
static int LUACALL wxLua_wxPGChoiceEntry_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_op_set[1] = {{ wxLua_wxPGChoiceEntry_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoiceEntry_op_set }};
//     wxPGChoiceEntry& operator=( const wxPGChoiceEntry& other );
static int LUACALL wxLua_wxPGChoiceEntry_op_set(lua_State *L)
{
    // const wxPGChoiceEntry other
    const wxPGChoiceEntry * other = (const wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoiceEntry);
    // get this
    wxPGChoiceEntry * self = (wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEntry);
    // call op_set
    (*self)=(*other);
    wxPGChoiceEntry* returns = self;
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor2[] = { &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoiceEntry_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_constructor2[1] = {{ wxLua_wxPGChoiceEntry_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor2 }};
//                      int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGChoiceEntry_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : wxPG_INVALID_VALUE);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxPGChoiceEntry* returns = new wxPGChoiceEntry(label, value);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor1[] = { &wxluatype_wxPGChoiceEntry, NULL };
static int LUACALL wxLua_wxPGChoiceEntry_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_constructor1[1] = {{ wxLua_wxPGChoiceEntry_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor1 }};
//     wxPGChoiceEntry(const wxPGChoiceEntry& other);
static int LUACALL wxLua_wxPGChoiceEntry_constructor1(lua_State *L)
{
    // const wxPGChoiceEntry other
    const wxPGChoiceEntry * other = (const wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoiceEntry);
    // call constructor
    wxPGChoiceEntry* returns = new wxPGChoiceEntry(*other);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static int LUACALL wxLua_wxPGChoiceEntry_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_constructor[1] = {{ wxLua_wxPGChoiceEntry_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGChoiceEntry();
static int LUACALL wxLua_wxPGChoiceEntry_constructor(lua_State *L)
{
    // call constructor
    wxPGChoiceEntry* returns = new wxPGChoiceEntry();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoiceEntry_constructor_overload[] =
{
    { wxLua_wxPGChoiceEntry_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor2 },
    { wxLua_wxPGChoiceEntry_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoiceEntry_constructor1 },
    { wxLua_wxPGChoiceEntry_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPGChoiceEntry_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoiceEntry_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPGChoiceEntry_delete_function(void** p)
{
    wxPGChoiceEntry* o = (wxPGChoiceEntry*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGChoiceEntry_methods[] = {
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEntry_GetValue, 1, NULL },
    { "SetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEntry_SetValue, 1, NULL },
    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoiceEntry_op_set, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPGChoiceEntry", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGChoiceEntry_constructor_overload, s_wxluafunc_wxLua_wxPGChoiceEntry_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPGChoiceEntry_methodCount = sizeof(wxPGChoiceEntry_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGChoicesData
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGChoicesData'
int wxluatype_wxPGChoicesData = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_Clear[] = { &wxluatype_wxPGChoicesData, NULL };
static int LUACALL wxLua_wxPGChoicesData_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_Clear[1] = {{ wxLua_wxPGChoicesData_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoicesData_Clear }};
//     void Clear();
static int LUACALL wxLua_wxPGChoicesData_Clear(lua_State *L)
{
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_CopyDataFrom[] = { &wxluatype_wxPGChoicesData, &wxluatype_wxPGChoicesData, NULL };
static int LUACALL wxLua_wxPGChoicesData_CopyDataFrom(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_CopyDataFrom[1] = {{ wxLua_wxPGChoicesData_CopyDataFrom, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoicesData_CopyDataFrom }};
//     void CopyDataFrom( wxPGChoicesData* data );
static int LUACALL wxLua_wxPGChoicesData_CopyDataFrom(lua_State *L)
{
    // wxPGChoicesData data
    wxPGChoicesData * data = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoicesData);
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call CopyDataFrom
    self->CopyDataFrom(data);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_GetCount[] = { &wxluatype_wxPGChoicesData, NULL };
static int LUACALL wxLua_wxPGChoicesData_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_GetCount[1] = {{ wxLua_wxPGChoicesData_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoicesData_GetCount }};
//     unsigned int GetCount() const;
static int LUACALL wxLua_wxPGChoicesData_GetCount(lua_State *L)
{
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call GetCount
    unsigned int returns = (self->GetCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_Insert[] = { &wxluatype_wxPGChoicesData, &wxluatype_TNUMBER, &wxluatype_wxPGChoiceEntry, NULL };
static int LUACALL wxLua_wxPGChoicesData_Insert(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_Insert[1] = {{ wxLua_wxPGChoicesData_Insert, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoicesData_Insert }};
//     wxPGChoiceEntry& Insert( int index, const wxPGChoiceEntry& item );
static int LUACALL wxLua_wxPGChoicesData_Insert(lua_State *L)
{
    // const wxPGChoiceEntry item
    const wxPGChoiceEntry * item = (const wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 3, wxluatype_wxPGChoiceEntry);
    // int index
    int index = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call Insert
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Insert(index, *item);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_Item1[] = { &wxluatype_wxPGChoicesData, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoicesData_Item1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_Item1[1] = {{ wxLua_wxPGChoicesData_Item1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoicesData_Item1 }};
//     wxPGChoiceEntry& Item( unsigned int i );
static int LUACALL wxLua_wxPGChoicesData_Item1(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call Item
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Item(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoicesData_Item[] = { &wxluatype_wxPGChoicesData, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoicesData_Item(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_Item[1] = {{ wxLua_wxPGChoicesData_Item, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoicesData_Item }};
//     const wxPGChoiceEntry& Item( unsigned int i ) const;
static int LUACALL wxLua_wxPGChoicesData_Item(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoicesData * self = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    // call Item
    const wxPGChoiceEntry* returns = (const wxPGChoiceEntry*)&self->Item(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static int LUACALL wxLua_wxPGChoicesData_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_constructor[1] = {{ wxLua_wxPGChoicesData_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGChoicesData();
static int LUACALL wxLua_wxPGChoicesData_constructor(lua_State *L)
{
    // call constructor
    wxPGChoicesData* returns = new wxPGChoicesData();
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoicesData);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoicesData_Item_overload[] =
{
    { wxLua_wxPGChoicesData_Item1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoicesData_Item1 },
    { wxLua_wxPGChoicesData_Item, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoicesData_Item },
};
static int s_wxluafunc_wxLua_wxPGChoicesData_Item_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoicesData_Item_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

// %override wxLua_wxPGChoicesData_delete_function
// delete is private in wxPGChoicesData
void wxLua_wxPGChoicesData_delete_function(void** p)
{
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGChoicesData_methods[] = {
    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoicesData_Clear, 1, NULL },
    { "CopyDataFrom", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoicesData_CopyDataFrom, 1, NULL },
    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoicesData_GetCount, 1, NULL },
    { "Insert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoicesData_Insert, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Item", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoicesData_Item_overload, s_wxluafunc_wxLua_wxPGChoicesData_Item_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "wxPGChoicesData", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGChoicesData_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGChoicesData_methodCount = sizeof(wxPGChoicesData_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGChoices
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGChoices'
int wxluatype_wxPGChoices = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Add3[] = { &wxluatype_wxPGChoices, &wxluatype_wxPGChoiceEntry, NULL };
static int LUACALL wxLua_wxPGChoices_Add3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Add3[1] = {{ wxLua_wxPGChoices_Add3, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Add3 }};
//     wxPGChoiceEntry& Add( const wxPGChoiceEntry& entry );
static int LUACALL wxLua_wxPGChoices_Add3(lua_State *L)
{
    // const wxPGChoiceEntry entry
    const wxPGChoiceEntry * entry = (const wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoiceEntry);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Add
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Add(*entry);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}


#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Add2[] = { &wxluatype_wxPGChoices, &wxluatype_TSTRING, &wxluatype_wxBitmap, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_Add2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Add2[1] = {{ wxLua_wxPGChoices_Add2, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGChoices_Add2 }};
//                           int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGChoices_Add2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_INVALID_VALUE);
    // const wxBitmap bitmap
    const wxBitmap * bitmap = (const wxBitmap *)wxluaT_getuserdatatype(L, 3, wxluatype_wxBitmap);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Add
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Add(label, *bitmap, value);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Add1[] = { &wxluatype_wxPGChoices, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_Add1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Add1[1] = {{ wxLua_wxPGChoices_Add1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_Add1 }};
//     wxPGChoiceEntry& Add( const wxString& label, int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGChoices_Add1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_INVALID_VALUE);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Add
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Add(label, value);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Add[] = { &wxluatype_wxPGChoices, &wxluatype_wxArrayString, &wxluatype_wxArrayInt, NULL };
static int LUACALL wxLua_wxPGChoices_Add(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Add[1] = {{ wxLua_wxPGChoices_Add, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoices_Add }};
//     void Add( const wxArrayString& arr, const wxArrayInt& arrint );
static int LUACALL wxLua_wxPGChoices_Add(lua_State *L)
{
    // const wxArrayInt arrint
    wxLuaSmartwxArrayInt arrint = wxlua_getwxArrayInt(L, 3);
    // const wxArrayString arr
    wxLuaSmartwxArrayString arr = wxlua_getwxArrayString(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Add
    self->Add(arr, arrint);

    return 0;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_AddAsSorted[] = { &wxluatype_wxPGChoices, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_AddAsSorted(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_AddAsSorted[1] = {{ wxLua_wxPGChoices_AddAsSorted, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_AddAsSorted }};
//     wxPGChoiceEntry& AddAsSorted( const wxString& label, int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGChoices_AddAsSorted(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 3 ? (int)wxlua_getnumbertype(L, 3) : wxPG_INVALID_VALUE);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call AddAsSorted
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->AddAsSorted(label, value);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_AllocExclusive[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_AllocExclusive(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_AllocExclusive[1] = {{ wxLua_wxPGChoices_AllocExclusive, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_AllocExclusive }};
//     void AllocExclusive();
static int LUACALL wxLua_wxPGChoices_AllocExclusive(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call AllocExclusive
    self->AllocExclusive();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Assign[] = { &wxluatype_wxPGChoices, &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_Assign(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Assign[1] = {{ wxLua_wxPGChoices_Assign, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Assign }};
//     void Assign( const wxPGChoices& a );
static int LUACALL wxLua_wxPGChoices_Assign(lua_State *L)
{
    // const wxPGChoices a
    const wxPGChoices * a = (const wxPGChoices *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoices);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Assign
    self->Assign(*a);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_AssignData[] = { &wxluatype_wxPGChoices, &wxluatype_wxPGChoicesData, NULL };
static int LUACALL wxLua_wxPGChoices_AssignData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_AssignData[1] = {{ wxLua_wxPGChoices_AssignData, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_AssignData }};
//     void AssignData( wxPGChoicesData* data );
static int LUACALL wxLua_wxPGChoices_AssignData(lua_State *L)
{
    // wxPGChoicesData data
    wxPGChoicesData * data = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoicesData);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call AssignData
    self->AssignData(data);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Clear[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Clear[1] = {{ wxLua_wxPGChoices_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_Clear }};
//     void Clear();
static int LUACALL wxLua_wxPGChoices_Clear(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Copy[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_Copy(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Copy[1] = {{ wxLua_wxPGChoices_Copy, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_Copy }};
//     wxPGChoices Copy() const;
static int LUACALL wxLua_wxPGChoices_Copy(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Copy
    // allocate a new object using the copy constructor
    wxPGChoices* returns = new wxPGChoices(self->Copy());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoices);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_EnsureData[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_EnsureData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_EnsureData[1] = {{ wxLua_wxPGChoices_EnsureData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_EnsureData }};
//     void EnsureData();
static int LUACALL wxLua_wxPGChoices_EnsureData(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call EnsureData
    self->EnsureData();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_ExtractData[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_ExtractData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_ExtractData[1] = {{ wxLua_wxPGChoices_ExtractData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_ExtractData }};
//     wxPGChoicesData* ExtractData();
static int LUACALL wxLua_wxPGChoices_ExtractData(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call ExtractData
    wxPGChoicesData* returns = (wxPGChoicesData*)self->ExtractData();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoicesData);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetCount[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_GetCount(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetCount[1] = {{ wxLua_wxPGChoices_GetCount, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_GetCount }};
//     unsigned int GetCount() const;
static int LUACALL wxLua_wxPGChoices_GetCount(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetCount
    unsigned int returns = (self->GetCount());
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetData[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_GetData(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetData[1] = {{ wxLua_wxPGChoices_GetData, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_GetData }};
//     wxPGChoicesData* GetData();
static int LUACALL wxLua_wxPGChoices_GetData(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetData
    wxPGChoicesData* returns = (wxPGChoicesData*)self->GetData();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoicesData);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetDataPtr[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_GetDataPtr(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetDataPtr[1] = {{ wxLua_wxPGChoices_GetDataPtr, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_GetDataPtr }};
//     wxPGChoicesData* GetDataPtr() const;
static int LUACALL wxLua_wxPGChoices_GetDataPtr(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetDataPtr
    wxPGChoicesData* returns = (wxPGChoicesData*)self->GetDataPtr();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoicesData);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetId[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_GetId(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetId[1] = {{ wxLua_wxPGChoices_GetId, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_GetId }};
//     void* GetId() const;
static int LUACALL wxLua_wxPGChoices_GetId(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetId
    void* returns = (void*)self->GetId();
    // push the result pointer
    lua_pushlightuserdata(L, (void *)returns);

    return 1;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetIndicesForStrings[] = { &wxluatype_wxPGChoices, &wxluatype_wxArrayString, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPGChoices_GetIndicesForStrings(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetIndicesForStrings[1] = {{ wxLua_wxPGChoices_GetIndicesForStrings, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_GetIndicesForStrings }};
//                                      wxArrayString* unmatched = NULL ) const;
static int LUACALL wxLua_wxPGChoices_GetIndicesForStrings(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxArrayString unmatched = NULL
    wxArrayString * unmatched = (argCount >= 3 ? (wxArrayString *)wxluaT_getuserdatatype(L, 3, wxluatype_wxArrayString) : NULL);
    // const wxArrayString strings
    wxLuaSmartwxArrayString strings = wxlua_getwxArrayString(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetIndicesForStrings
    // allocate a new object using the copy constructor
    wxArrayInt* returns = new wxArrayInt(self->GetIndicesForStrings(strings, unmatched));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayInt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayInt);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetLabel[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_GetLabel(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetLabel[1] = {{ wxLua_wxPGChoices_GetLabel, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_GetLabel }};
//     const wxString& GetLabel( unsigned int ind ) const;
static int LUACALL wxLua_wxPGChoices_GetLabel(lua_State *L)
{
    // unsigned int ind
    unsigned int ind = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetLabel
    wxString returns = (self->GetLabel(ind));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetLabels[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_GetLabels(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetLabels[1] = {{ wxLua_wxPGChoices_GetLabels, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_GetLabels }};
//     wxArrayString GetLabels() const;
static int LUACALL wxLua_wxPGChoices_GetLabels(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetLabels
    // allocate a new object using the copy constructor
    wxArrayString* returns = new wxArrayString(self->GetLabels());
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayString);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayString);

    return 1;
}

#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetValue[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetValue[1] = {{ wxLua_wxPGChoices_GetValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_GetValue }};
//     int GetValue( unsigned int ind ) const;
static int LUACALL wxLua_wxPGChoices_GetValue(lua_State *L)
{
    // unsigned int ind
    unsigned int ind = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetValue
    int returns = (self->GetValue(ind));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_GetValuesForStrings[] = { &wxluatype_wxPGChoices, &wxluatype_wxArrayString, NULL };
static int LUACALL wxLua_wxPGChoices_GetValuesForStrings(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_GetValuesForStrings[1] = {{ wxLua_wxPGChoices_GetValuesForStrings, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_GetValuesForStrings }};
//     wxArrayInt GetValuesForStrings( const wxArrayString& strings ) const;
static int LUACALL wxLua_wxPGChoices_GetValuesForStrings(lua_State *L)
{
    // const wxArrayString strings
    wxLuaSmartwxArrayString strings = wxlua_getwxArrayString(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call GetValuesForStrings
    // allocate a new object using the copy constructor
    wxArrayInt* returns = new wxArrayInt(self->GetValuesForStrings(strings));
    // add the new object to the tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxArrayInt);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxArrayInt);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Index1[] = { &wxluatype_wxPGChoices, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_Index1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Index1[1] = {{ wxLua_wxPGChoices_Index1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Index1 }};
//     int Index( int val ) const;
static int LUACALL wxLua_wxPGChoices_Index1(lua_State *L)
{
    // int val
    int val = (int)wxlua_getnumbertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Index
    int returns = (self->Index(val));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Index[] = { &wxluatype_wxPGChoices, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGChoices_Index(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Index[1] = {{ wxLua_wxPGChoices_Index, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Index }};
//     int Index( const wxString& label ) const;
static int LUACALL wxLua_wxPGChoices_Index(lua_State *L)
{
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Index
    int returns = (self->Index(label));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Insert1[] = { &wxluatype_wxPGChoices, &wxluatype_wxPGChoiceEntry, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_Insert1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Insert1[1] = {{ wxLua_wxPGChoices_Insert1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoices_Insert1 }};
//     wxPGChoiceEntry& Insert( const wxPGChoiceEntry& entry, int index );
static int LUACALL wxLua_wxPGChoices_Insert1(lua_State *L)
{
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxPGChoiceEntry entry
    const wxPGChoiceEntry * entry = (const wxPGChoiceEntry *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoiceEntry);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Insert
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Insert(*entry, index);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Insert[] = { &wxluatype_wxPGChoices, &wxluatype_TSTRING, &wxluatype_TNUMBER, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGChoices_Insert(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Insert[1] = {{ wxLua_wxPGChoices_Insert, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGChoices_Insert }};
//     wxPGChoiceEntry& Insert( const wxString& label, int index, int value = wxPG_INVALID_VALUE );
static int LUACALL wxLua_wxPGChoices_Insert(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int value = wxPG_INVALID_VALUE
    int value = (argCount >= 4 ? (int)wxlua_getnumbertype(L, 4) : wxPG_INVALID_VALUE);
    // int index
    int index = (int)wxlua_getnumbertype(L, 3);
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Insert
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Insert(label, index, value);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_IsOk[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_IsOk(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_IsOk[1] = {{ wxLua_wxPGChoices_IsOk, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_IsOk }};
//     bool IsOk() const;
static int LUACALL wxLua_wxPGChoices_IsOk(lua_State *L)
{
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call IsOk
    bool returns = (self->IsOk());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Item1[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_Item1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Item1[1] = {{ wxLua_wxPGChoices_Item1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Item1 }};
//     wxPGChoiceEntry& Item( unsigned int i );
static int LUACALL wxLua_wxPGChoices_Item1(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Item
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&self->Item(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Item[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_Item(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Item[1] = {{ wxLua_wxPGChoices_Item, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Item }};
//     const wxPGChoiceEntry& Item( unsigned int i ) const;
static int LUACALL wxLua_wxPGChoices_Item(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Item
    const wxPGChoiceEntry* returns = (const wxPGChoiceEntry*)&self->Item(i);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_RemoveAt[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_RemoveAt(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_RemoveAt[1] = {{ wxLua_wxPGChoices_RemoveAt, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_RemoveAt }};
//     void RemoveAt(size_t nIndex, size_t count = 1);
static int LUACALL wxLua_wxPGChoices_RemoveAt(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // size_t count = 1
    size_t count = (argCount >= 3 ? (size_t)wxlua_getuintegertype(L, 3) : 1);
    // size_t nIndex
    size_t nIndex = (size_t)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call RemoveAt
    self->RemoveAt(nIndex, count);

    return 0;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_Set[] = { &wxluatype_wxPGChoices, &wxluatype_wxArrayString, &wxluatype_wxArrayInt, NULL };
static int LUACALL wxLua_wxPGChoices_Set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Set[1] = {{ wxLua_wxPGChoices_Set, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_Set }};
//     void Set( const wxArrayString& labels, const wxArrayInt& values = wxLuaSmartwxArrayInt() );
static int LUACALL wxLua_wxPGChoices_Set(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxArrayInt values = wxLuaSmartwxArrayInt()
    wxLuaSmartwxArrayInt values = (argCount >= 3 ? wxlua_getwxArrayInt(L, 3) : wxLuaSmartwxArrayInt());
    // const wxArrayString labels
    wxLuaSmartwxArrayString labels = wxlua_getwxArrayString(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call Set
    self->Set(labels, values);

    return 0;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_delete[] = { &wxluatype_wxPGChoices, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_op_index1[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_op_index1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_op_index1[1] = {{ wxLua_wxPGChoices_op_index1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_op_index1 }};
//     const wxPGChoiceEntry& operator[](unsigned int i) const;
static int LUACALL wxLua_wxPGChoices_op_index1(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call op_index
    const wxPGChoiceEntry* returns = (const wxPGChoiceEntry*)&((*self)[(i)]);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_op_index[] = { &wxluatype_wxPGChoices, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxPGChoices_op_index(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_op_index[1] = {{ wxLua_wxPGChoices_op_index, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_op_index }};
//     wxPGChoiceEntry& operator[](unsigned int i);
static int LUACALL wxLua_wxPGChoices_op_index(lua_State *L)
{
    // unsigned int i
    unsigned int i = (unsigned int)wxlua_getuintegertype(L, 2);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call op_index
    wxPGChoiceEntry* returns = (wxPGChoiceEntry*)&((*self)[(i)]);
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoiceEntry);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_op_set[] = { &wxluatype_wxPGChoices, &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_op_set(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_op_set[1] = {{ wxLua_wxPGChoices_op_set, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_op_set }};
//     void operator= (const wxPGChoices& a);
static int LUACALL wxLua_wxPGChoices_op_set(lua_State *L)
{
    // const wxPGChoices a
    const wxPGChoices * a = (const wxPGChoices *)wxluaT_getuserdatatype(L, 2, wxluatype_wxPGChoices);
    // get this
    wxPGChoices * self = (wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call op_set
    (*self)=(*a);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_constructor3[] = { &wxluatype_wxPGChoicesData, NULL };
static int LUACALL wxLua_wxPGChoices_constructor3(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_constructor3[1] = {{ wxLua_wxPGChoices_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_constructor3 }};
//     wxPGChoices( %ungc wxPGChoicesData* data );
static int LUACALL wxLua_wxPGChoices_constructor3(lua_State *L)
{
    // wxPGChoicesData data
    wxPGChoicesData * data = (wxPGChoicesData *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoicesData);
    if (wxluaO_isgcobject(L, data)) wxluaO_undeletegcobject(L, data);
    // call constructor
    wxPGChoices* returns = new wxPGChoices(data);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoices);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}


#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_constructor2[] = { &wxluatype_wxArrayString, &wxluatype_wxArrayInt, NULL };
static int LUACALL wxLua_wxPGChoices_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_constructor2[1] = {{ wxLua_wxPGChoices_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPGChoices_constructor2 }};
//     wxPGChoices( const wxArrayString& labels, const wxArrayInt& values = wxLuaSmartwxArrayInt() );
static int LUACALL wxLua_wxPGChoices_constructor2(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxArrayInt values = wxLuaSmartwxArrayInt()
    wxLuaSmartwxArrayInt values = (argCount >= 2 ? wxlua_getwxArrayInt(L, 2) : wxLuaSmartwxArrayInt());
    // const wxArrayString labels
    wxLuaSmartwxArrayString labels = wxlua_getwxArrayString(L, 1);
    // call constructor
    wxPGChoices* returns = new wxPGChoices(labels, values);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoices);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}

#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGChoices_constructor1[] = { &wxluatype_wxPGChoices, NULL };
static int LUACALL wxLua_wxPGChoices_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_constructor1[1] = {{ wxLua_wxPGChoices_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_constructor1 }};
//     wxPGChoices( const wxPGChoices& a );
static int LUACALL wxLua_wxPGChoices_constructor1(lua_State *L)
{
    // const wxPGChoices a
    const wxPGChoices * a = (const wxPGChoices *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGChoices);
    // call constructor
    wxPGChoices* returns = new wxPGChoices(*a);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoices);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}

static int LUACALL wxLua_wxPGChoices_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_constructor[1] = {{ wxLua_wxPGChoices_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPGChoices();
static int LUACALL wxLua_wxPGChoices_constructor(lua_State *L)
{
    // call constructor
    wxPGChoices* returns = new wxPGChoices();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGChoices);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGChoices);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Add_overload[] =
{
    { wxLua_wxPGChoices_Add3, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Add3 },

#if (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGChoices_Add2, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGChoices_Add2 },
#endif // (wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGChoices_Add1, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxPGChoices_Add1 },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGChoices_Add, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoices_Add },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
};
static int s_wxluafunc_wxLua_wxPGChoices_Add_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_Add_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Index_overload[] =
{
    { wxLua_wxPGChoices_Index1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Index1 },
    { wxLua_wxPGChoices_Index, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Index },
};
static int s_wxluafunc_wxLua_wxPGChoices_Index_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_Index_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Insert_overload[] =
{
    { wxLua_wxPGChoices_Insert1, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPGChoices_Insert1 },
    { wxLua_wxPGChoices_Insert, WXLUAMETHOD_METHOD, 3, 4, s_wxluatypeArray_wxLua_wxPGChoices_Insert },
};
static int s_wxluafunc_wxLua_wxPGChoices_Insert_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_Insert_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_Item_overload[] =
{
    { wxLua_wxPGChoices_Item1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Item1 },
    { wxLua_wxPGChoices_Item, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_Item },
};
static int s_wxluafunc_wxLua_wxPGChoices_Item_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_Item_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_op_index_overload[] =
{
    { wxLua_wxPGChoices_op_index1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_op_index1 },
    { wxLua_wxPGChoices_op_index, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxPGChoices_op_index },
};
static int s_wxluafunc_wxLua_wxPGChoices_op_index_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_op_index_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGChoices_constructor_overload[] =
{
    { wxLua_wxPGChoices_constructor3, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_constructor3 },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGChoices_constructor2, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPGChoices_constructor2 },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { wxLua_wxPGChoices_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGChoices_constructor1 },
    { wxLua_wxPGChoices_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPGChoices_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPGChoices_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

void wxLua_wxPGChoices_delete_function(void** p)
{
    wxPGChoices* o = (wxPGChoices*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGChoices_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "Add", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Add_overload, s_wxluafunc_wxLua_wxPGChoices_Add_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||((wxLUA_USE_wxBitmap) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

    { "AddAsSorted", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_AddAsSorted, 1, NULL },
    { "AllocExclusive", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_AllocExclusive, 1, NULL },
    { "Assign", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Assign, 1, NULL },
    { "AssignData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_AssignData, 1, NULL },
    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Clear, 1, NULL },
    { "Copy", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Copy, 1, NULL },
    { "EnsureData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_EnsureData, 1, NULL },
    { "ExtractData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_ExtractData, 1, NULL },
    { "GetCount", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetCount, 1, NULL },
    { "GetData", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetData, 1, NULL },
    { "GetDataPtr", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetDataPtr, 1, NULL },
    { "GetId", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetId, 1, NULL },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetIndicesForStrings", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetIndicesForStrings, 1, NULL },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetLabel", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetLabel, 1, NULL },

#if (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetLabels", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetLabels, 1, NULL },
#endif // (wxLUA_USE_wxArrayString) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetValue, 1, NULL },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetValuesForStrings", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_GetValuesForStrings, 1, NULL },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Index", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Index_overload, s_wxluafunc_wxLua_wxPGChoices_Index_overload_count, 0 },
    { "Insert", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Insert_overload, s_wxluafunc_wxLua_wxPGChoices_Insert_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "IsOk", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_IsOk, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Item", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Item_overload, s_wxluafunc_wxLua_wxPGChoices_Item_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "RemoveAt", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_RemoveAt, 1, NULL },

#if ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "Set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_Set, 1, NULL },
#endif // ((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGChoices_delete, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "op_index", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_op_index_overload, s_wxluafunc_wxLua_wxPGChoices_op_index_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "op_set", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGChoices_op_set, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))
    { "wxPGChoices", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGChoices_constructor_overload, s_wxluafunc_wxLua_wxPGChoices_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)||(((wxLUA_USE_wxArrayInt) && (wxLUA_USE_wxArrayString)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID))

    { 0, 0, 0, 0 },
};

int wxPGChoices_methodCount = sizeof(wxPGChoices_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPGRootProperty
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPGRootProperty'
int wxluatype_wxPGRootProperty = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPGRootProperty_StringToValue[] = { &wxluatype_wxPGRootProperty, &wxluatype_wxVariant, &wxluatype_TSTRING, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPGRootProperty_StringToValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGRootProperty_StringToValue[1] = {{ wxLua_wxPGRootProperty_StringToValue, WXLUAMETHOD_METHOD, 4, 4, s_wxluatypeArray_wxLua_wxPGRootProperty_StringToValue }};
//     virtual bool StringToValue( wxVariant&, const wxString&, int ) const;
static int LUACALL wxLua_wxPGRootProperty_StringToValue(lua_State *L)
{
    // int arg3
    int arg3 = (int)wxlua_getnumbertype(L, 4);
    // const wxString arg2
    const wxString arg2 = wxlua_getwxStringtype(L, 3);
    // wxVariant arg1
    wxVariant * arg1 = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPGRootProperty * self = (wxPGRootProperty *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPGRootProperty);
    // call StringToValue
    bool returns = (self->StringToValue(*arg1, arg2, arg3));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGRootProperty_delete[] = { &wxluatype_wxPGRootProperty, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGRootProperty_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPGRootProperty_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPGRootProperty_constructor[] = { &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPGRootProperty_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPGRootProperty_constructor[1] = {{ wxLua_wxPGRootProperty_constructor, WXLUAMETHOD_CONSTRUCTOR, 1, 1, s_wxluatypeArray_wxLua_wxPGRootProperty_constructor }};
//     wxPGRootProperty( const wxString& name /* = wxS("<Root>") */ );
static int LUACALL wxLua_wxPGRootProperty_constructor(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxPGRootProperty* returns = new wxPGRootProperty(name);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPGRootProperty);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGRootProperty);

    return 1;
}




void wxLua_wxPGRootProperty_delete_function(void** p)
{
    wxPGRootProperty* o = (wxPGRootProperty*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPGRootProperty_methods[] = {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "StringToValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPGRootProperty_StringToValue, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPGRootProperty_delete, 1, NULL },
    { "wxPGRootProperty", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPGRootProperty_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxPGRootProperty_methodCount = sizeof(wxPGRootProperty_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// ---------------------------------------------------------------------------
// Bind class wxPropertyCategory
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxPropertyCategory'
int wxluatype_wxPropertyCategory = WXLUA_TUNKNOWN;

#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyCategory_GetTextExtent[] = { &wxluatype_wxPropertyCategory, &wxluatype_wxWindow, &wxluatype_wxFont, NULL };
static int LUACALL wxLua_wxPropertyCategory_GetTextExtent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_GetTextExtent[1] = {{ wxLua_wxPropertyCategory_GetTextExtent, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyCategory_GetTextExtent }};
//     int GetTextExtent( const wxWindow* wnd, const wxFont& font ) const;
static int LUACALL wxLua_wxPropertyCategory_GetTextExtent(lua_State *L)
{
    // const wxFont font
    const wxFont * font = (const wxFont *)wxluaT_getuserdatatype(L, 3, wxluatype_wxFont);
    // const wxWindow wnd
    const wxWindow * wnd = (const wxWindow *)wxluaT_getuserdatatype(L, 2, wxluatype_wxWindow);
    // get this
    wxPropertyCategory * self = (wxPropertyCategory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyCategory);
    // call GetTextExtent
    int returns = (self->GetTextExtent(wnd, *font));
    // push the result number
#if LUA_VERSION_NUM >= 503
if ((double)(lua_Integer)returns == (double)returns) {
    // Exactly representable as lua_Integer
    lua_pushinteger(L, returns);
} else
#endif
{
    lua_pushnumber(L, returns);
}

    return 1;
}

#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyCategory_GetValueAsString[] = { &wxluatype_wxPropertyCategory, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyCategory_GetValueAsString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_GetValueAsString[1] = {{ wxLua_wxPropertyCategory_GetValueAsString, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxPropertyCategory_GetValueAsString }};
//     virtual wxString GetValueAsString( int argFlags = 0 ) const;
static int LUACALL wxLua_wxPropertyCategory_GetValueAsString(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int argFlags = 0
    int argFlags = (argCount >= 2 ? (int)wxlua_getnumbertype(L, 2) : 0);
    // get this
    wxPropertyCategory * self = (wxPropertyCategory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyCategory);
    // call GetValueAsString
    wxString returns = (self->GetValueAsString(argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyCategory_ValueToString[] = { &wxluatype_wxPropertyCategory, &wxluatype_wxVariant, &wxluatype_TNUMBER, NULL };
static int LUACALL wxLua_wxPropertyCategory_ValueToString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_ValueToString[1] = {{ wxLua_wxPropertyCategory_ValueToString, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxPropertyCategory_ValueToString }};
//     virtual wxString ValueToString( wxVariant& value, int argFlags ) const;
static int LUACALL wxLua_wxPropertyCategory_ValueToString(lua_State *L)
{
    // int argFlags
    int argFlags = (int)wxlua_getnumbertype(L, 3);
    // wxVariant value
    wxVariant * value = (wxVariant *)wxluaT_getuserdatatype(L, 2, wxluatype_wxVariant);
    // get this
    wxPropertyCategory * self = (wxPropertyCategory *)wxluaT_getuserdatatype(L, 1, wxluatype_wxPropertyCategory);
    // call ValueToString
    wxString returns = (self->ValueToString(*value, argFlags));
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyCategory_delete[] = { &wxluatype_wxPropertyCategory, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxPropertyCategory_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxPropertyCategory_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxPropertyCategory_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_constructor1[1] = {{ wxLua_wxPropertyCategory_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPropertyCategory_constructor1 }};
//                         const wxString& name = wxPG_LABEL );
static int LUACALL wxLua_wxPropertyCategory_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString name = wxPG_LABEL
    const wxString name = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxPG_LABEL));
    // const wxString label
    const wxString label = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxPropertyCategory* returns = new wxPropertyCategory(label, name);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyCategory);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyCategory);

    return 1;
}

static int LUACALL wxLua_wxPropertyCategory_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_constructor[1] = {{ wxLua_wxPropertyCategory_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxPropertyCategory();
static int LUACALL wxLua_wxPropertyCategory_constructor(lua_State *L)
{
    // call constructor
    wxPropertyCategory* returns = new wxPropertyCategory();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxPropertyCategory);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPropertyCategory);

    return 1;
}




#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxPropertyCategory_constructor_overload[] =
{
    { wxLua_wxPropertyCategory_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxPropertyCategory_constructor1 },
    { wxLua_wxPropertyCategory_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxPropertyCategory_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxPropertyCategory_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

void wxLua_wxPropertyCategory_delete_function(void** p)
{
    wxPropertyCategory* o = (wxPropertyCategory*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxPropertyCategory_methods[] = {
#if (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "GetTextExtent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyCategory_GetTextExtent, 1, NULL },
#endif // (wxLUA_USE_wxFont) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { "GetValueAsString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyCategory_GetValueAsString, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)
    { "ValueToString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxPropertyCategory_ValueToString, 1, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_VARIANT)

    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxPropertyCategory_delete, 1, NULL },

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
    { "wxPropertyCategory", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxPropertyCategory_constructor_overload, s_wxluafunc_wxLua_wxPropertyCategory_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

    { 0, 0, 0, 0 },
};

int wxPropertyCategory_methodCount = sizeof(wxPropertyCategory_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID



// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxpropgrid_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxpropgrid() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxpropgrid(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxEVT_PG_CHANGED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_CHANGED), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_CHANGING", WXLUA_GET_wxEventType_ptr(wxEVT_PG_CHANGING), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_COL_BEGIN_DRAG", WXLUA_GET_wxEventType_ptr(wxEVT_PG_COL_BEGIN_DRAG), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_COL_DRAGGING", WXLUA_GET_wxEventType_ptr(wxEVT_PG_COL_DRAGGING), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_COL_END_DRAG", WXLUA_GET_wxEventType_ptr(wxEVT_PG_COL_END_DRAG), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_DOUBLE_CLICK", WXLUA_GET_wxEventType_ptr(wxEVT_PG_DOUBLE_CLICK), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_HIGHLIGHTED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_HIGHLIGHTED), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_ITEM_COLLAPSED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_ITEM_COLLAPSED), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_ITEM_EXPANDED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_ITEM_EXPANDED), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_LABEL_EDIT_BEGIN", WXLUA_GET_wxEventType_ptr(wxEVT_PG_LABEL_EDIT_BEGIN), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_LABEL_EDIT_ENDING", WXLUA_GET_wxEventType_ptr(wxEVT_PG_LABEL_EDIT_ENDING), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_PAGE_CHANGED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_PAGE_CHANGED), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_RIGHT_CLICK", WXLUA_GET_wxEventType_ptr(wxEVT_PG_RIGHT_CLICK), &wxluatype_wxPropertyGridEvent },
        { "wxEVT_PG_SELECTED", WXLUA_GET_wxEventType_ptr(wxEVT_PG_SELECTED), &wxluatype_wxPropertyGridEvent },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxpropgrid() is called to register #define and enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxpropgrid(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxAEDIALOG_STYLE", wxAEDIALOG_STYLE },
        { "wxPGMAN_DEFAULT_STYLE", wxPGMAN_DEFAULT_STYLE },
        { "wxPG_ACTION_CANCEL_EDIT", wxPG_ACTION_CANCEL_EDIT },
        { "wxPG_ACTION_COLLAPSE_PROPERTY", wxPG_ACTION_COLLAPSE_PROPERTY },
        { "wxPG_ACTION_EDIT", wxPG_ACTION_EDIT },
        { "wxPG_ACTION_EXPAND_PROPERTY", wxPG_ACTION_EXPAND_PROPERTY },
        { "wxPG_ACTION_INVALID", wxPG_ACTION_INVALID },
        { "wxPG_ACTION_MAX", wxPG_ACTION_MAX },
        { "wxPG_ACTION_NEXT_PROPERTY", wxPG_ACTION_NEXT_PROPERTY },
        { "wxPG_ACTION_PRESS_BUTTON", wxPG_ACTION_PRESS_BUTTON },
        { "wxPG_ACTION_PREV_PROPERTY", wxPG_ACTION_PREV_PROPERTY },
        { "wxPG_ALPHABETIC_MODE", wxPG_ALPHABETIC_MODE },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_COMPATIBILITY_1_4)
        { "wxPG_ATTR_INLINE_HELP", wxPG_ATTR_INLINE_HELP },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_COMPATIBILITY_1_4)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_AUTO_SORT", wxPG_AUTO_SORT },
        { "wxPG_BASE_DEC", wxPG_BASE_DEC },
        { "wxPG_BASE_HEX", wxPG_BASE_HEX },
        { "wxPG_BASE_HEXL", wxPG_BASE_HEXL },
        { "wxPG_BASE_OCT", wxPG_BASE_OCT },
        { "wxPG_BOLD_MODIFIED", wxPG_BOLD_MODIFIED },
        { "wxPG_CAPRECTXMARGIN", wxPG_CAPRECTXMARGIN },
        { "wxPG_CAPRECTYMARGIN", wxPG_CAPRECTYMARGIN },
        { "wxPG_COLOUR_CUSTOM", wxPG_COLOUR_CUSTOM },
        { "wxPG_COLOUR_UNSPECIFIED", wxPG_COLOUR_UNSPECIFIED },
        { "wxPG_COLOUR_WEB_BASE", wxPG_COLOUR_WEB_BASE },
        { "wxPG_COMPOSITE_FRAGMENT", wxPG_COMPOSITE_FRAGMENT },
        { "wxPG_CUSTOM_IMAGE_SPACINGY", wxPG_CUSTOM_IMAGE_SPACINGY },
        { "wxPG_DEFAULT_STYLE", wxPG_DEFAULT_STYLE },
        { "wxPG_DESCRIPTION", wxPG_DESCRIPTION },
        { "wxPG_DONT_RECURSE", wxPG_DONT_RECURSE },
        { "wxPG_DONT_RECURSE", wxPG_DONT_RECURSE },
        { "wxPG_EDITABLE_VALUE", wxPG_EDITABLE_VALUE },
        { "wxPG_EX_ALWAYS_ALLOW_FOCUS", wxPG_EX_ALWAYS_ALLOW_FOCUS },
        { "wxPG_EX_AUTO_UNSPECIFIED_VALUES", wxPG_EX_AUTO_UNSPECIFIED_VALUES },
        { "wxPG_EX_ENABLE_TLP_TRACKING", wxPG_EX_ENABLE_TLP_TRACKING },
        { "wxPG_EX_HELP_AS_TOOLTIPS", wxPG_EX_HELP_AS_TOOLTIPS },
        { "wxPG_EX_HIDE_PAGE_BUTTONS", wxPG_EX_HIDE_PAGE_BUTTONS },
        { "wxPG_EX_INIT_NOCAT", wxPG_EX_INIT_NOCAT },
        { "wxPG_EX_MODE_BUTTONS", wxPG_EX_MODE_BUTTONS },
        { "wxPG_EX_MULTIPLE_SELECTION", wxPG_EX_MULTIPLE_SELECTION },
        { "wxPG_EX_NATIVE_DOUBLE_BUFFERING", wxPG_EX_NATIVE_DOUBLE_BUFFERING },
        { "wxPG_EX_NO_FLAT_TOOLBAR", wxPG_EX_NO_FLAT_TOOLBAR },
        { "wxPG_EX_NO_TOOLBAR_DIVIDER", wxPG_EX_NO_TOOLBAR_DIVIDER },
        { "wxPG_EX_TOOLBAR_SEPARATOR", wxPG_EX_TOOLBAR_SEPARATOR },
        { "wxPG_EX_WINDOW_PGMAN_STYLE_MASK", wxPG_EX_WINDOW_PGMAN_STYLE_MASK },
        { "wxPG_EX_WINDOW_PG_STYLE_MASK", wxPG_EX_WINDOW_PG_STYLE_MASK },
        { "wxPG_EX_WINDOW_STYLE_MASK", wxPG_EX_WINDOW_STYLE_MASK },
        { "wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES", wxPG_EX_WRITEONLY_BUILTIN_ATTRIBUTES },
        { "wxPG_FORCE", wxPG_FORCE },
        { "wxPG_FORCE", wxPG_FORCE },
        { "wxPG_FULL_VALUE", wxPG_FULL_VALUE },
        { "wxPG_HIDE_CATEGORIES", wxPG_HIDE_CATEGORIES },
        { "wxPG_HIDE_MARGIN", wxPG_HIDE_MARGIN },
        { "wxPG_INC_ATTRIBUTES", wxPG_INC_ATTRIBUTES },
        { "wxPG_INC_ATTRIBUTES", wxPG_INC_ATTRIBUTES },
        { "wxPG_INVALID_VALUE", wxPG_INVALID_VALUE },
        { "wxPG_ITERATE_ALL", wxPG_ITERATE_ALL },
        { "wxPG_ITERATE_ALL_PARENTS", wxPG_ITERATE_ALL_PARENTS },
        { "wxPG_ITERATE_ALL_PARENTS_RECURSIVELY", wxPG_ITERATE_ALL_PARENTS_RECURSIVELY },
        { "wxPG_ITERATE_CATEGORIES", wxPG_ITERATE_CATEGORIES },
        { "wxPG_ITERATE_DEFAULT", wxPG_ITERATE_DEFAULT },
        { "wxPG_ITERATE_FIXED_CHILDREN", wxPG_ITERATE_FIXED_CHILDREN },
        { "wxPG_ITERATE_HIDDEN", wxPG_ITERATE_HIDDEN },
        { "wxPG_ITERATE_NORMAL", wxPG_ITERATE_NORMAL },
        { "wxPG_ITERATE_PROPERTIES", wxPG_ITERATE_PROPERTIES },
        { "wxPG_ITERATE_VISIBLE", wxPG_ITERATE_VISIBLE },
        { "wxPG_ITERATOR_FLAGS_ALL", wxPG_ITERATOR_FLAGS_ALL },
        { "wxPG_ITERATOR_MASK_OP_ITEM", wxPG_ITERATOR_MASK_OP_ITEM },
        { "wxPG_ITERATOR_MASK_OP_PARENT", wxPG_ITERATOR_MASK_OP_PARENT },
        { "wxPG_KEEP_STRUCTURE", wxPG_KEEP_STRUCTURE },
        { "wxPG_KEEP_STRUCTURE", wxPG_KEEP_STRUCTURE },
        { "wxPG_LIMITED_EDITING", wxPG_LIMITED_EDITING },
        { "wxPG_NO_INTERNAL_BORDER", wxPG_NO_INTERNAL_BORDER },
        { "wxPG_PREFIX_0x", wxPG_PREFIX_0x },
        { "wxPG_PREFIX_DOLLAR_SIGN", wxPG_PREFIX_DOLLAR_SIGN },
        { "wxPG_PREFIX_NONE", wxPG_PREFIX_NONE },
        { "wxPG_PROGRAMMATIC_VALUE", wxPG_PROGRAMMATIC_VALUE },
        { "wxPG_PROPERTY_SPECIFIC", wxPG_PROPERTY_SPECIFIC },
        { "wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE", wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE },
        { "wxPG_PROPERTY_VALIDATION_SATURATE", wxPG_PROPERTY_VALIDATION_SATURATE },
        { "wxPG_PROPERTY_VALIDATION_WRAP", wxPG_PROPERTY_VALIDATION_WRAP },
        { "wxPG_PROP_ACTIVE_BTN", wxPG_PROP_ACTIVE_BTN },
        { "wxPG_PROP_AGGREGATE", wxPG_PROP_AGGREGATE },
        { "wxPG_PROP_AUTO_UNSPECIFIED", wxPG_PROP_AUTO_UNSPECIFIED },
        { "wxPG_PROP_BEING_DELETED", wxPG_PROP_BEING_DELETED },
        { "wxPG_PROP_CATEGORY", wxPG_PROP_CATEGORY },
        { "wxPG_PROP_CHILDREN_ARE_COPIES", wxPG_PROP_CHILDREN_ARE_COPIES },
        { "wxPG_PROP_CLASS_SPECIFIC_1", wxPG_PROP_CLASS_SPECIFIC_1 },
        { "wxPG_PROP_CLASS_SPECIFIC_2", wxPG_PROP_CLASS_SPECIFIC_2 },
        { "wxPG_PROP_CLASS_SPECIFIC_3", wxPG_PROP_CLASS_SPECIFIC_3 },
        { "wxPG_PROP_COLLAPSED", wxPG_PROP_COLLAPSED },
        { "wxPG_PROP_COMPOSED_VALUE", wxPG_PROP_COMPOSED_VALUE },
        { "wxPG_PROP_CUSTOMIMAGE", wxPG_PROP_CUSTOMIMAGE },
        { "wxPG_PROP_DISABLED", wxPG_PROP_DISABLED },
        { "wxPG_PROP_HIDDEN", wxPG_PROP_HIDDEN },
        { "wxPG_PROP_INVALID_VALUE", wxPG_PROP_INVALID_VALUE },
        { "wxPG_PROP_MAX", wxPG_PROP_MAX },
        { "wxPG_PROP_MISC_PARENT", wxPG_PROP_MISC_PARENT },
        { "wxPG_PROP_MODIFIED", wxPG_PROP_MODIFIED },
        { "wxPG_PROP_NOEDITOR", wxPG_PROP_NOEDITOR },
        { "wxPG_PROP_PARENTAL_FLAGS", wxPG_PROP_PARENTAL_FLAGS },
        { "wxPG_PROP_PASSWORD", wxPG_PROP_PASSWORD },
        { "wxPG_PROP_PROPERTY", wxPG_PROP_PROPERTY },
        { "wxPG_PROP_READONLY", wxPG_PROP_READONLY },
        { "wxPG_PROP_SHOW_FULL_FILENAME", wxPG_PROP_SHOW_FULL_FILENAME },
        { "wxPG_PROP_STATIC_CHOICES", wxPG_PROP_STATIC_CHOICES },
        { "wxPG_PROP_TRANSLATE_CUSTOM", wxPG_PROP_TRANSLATE_CUSTOM },
        { "wxPG_PROP_USES_COMMON_VALUE", wxPG_PROP_USES_COMMON_VALUE },
        { "wxPG_PROP_USE_CHECKBOX", wxPG_PROP_USE_CHECKBOX },
        { "wxPG_PROP_USE_DCC", wxPG_PROP_USE_DCC },
        { "wxPG_PROP_WAS_MODIFIED", wxPG_PROP_WAS_MODIFIED },
        { "wxPG_RECURSE", wxPG_RECURSE },
        { "wxPG_RECURSE", wxPG_RECURSE },
        { "wxPG_RECURSE_STARTS", wxPG_RECURSE_STARTS },
        { "wxPG_RECURSE_STARTS", wxPG_RECURSE_STARTS },
        { "wxPG_REPORT_ERROR", wxPG_REPORT_ERROR },
        { "wxPG_SETVAL_AGGREGATED", wxPG_SETVAL_AGGREGATED },
        { "wxPG_SETVAL_BY_USER", wxPG_SETVAL_BY_USER },
        { "wxPG_SETVAL_FROM_PARENT", wxPG_SETVAL_FROM_PARENT },
        { "wxPG_SETVAL_REFRESH_EDITOR", wxPG_SETVAL_REFRESH_EDITOR },
        { "wxPG_SORT_TOP_LEVEL_ONLY", wxPG_SORT_TOP_LEVEL_ONLY },
        { "wxPG_SORT_TOP_LEVEL_ONLY", wxPG_SORT_TOP_LEVEL_ONLY },
        { "wxPG_SPLITTER_AUTO_CENTER", wxPG_SPLITTER_AUTO_CENTER },
        { "wxPG_STATIC_LAYOUT", wxPG_STATIC_LAYOUT },
        { "wxPG_STATIC_SPLITTER", wxPG_STATIC_SPLITTER },
        { "wxPG_STRING_STORED_FLAGS", wxPG_STRING_STORED_FLAGS },
        { "wxPG_TOOLBAR", wxPG_TOOLBAR },
        { "wxPG_TOOLTIPS", wxPG_TOOLTIPS },
        { "wxPG_UNEDITABLE_COMPOSITE_FRAGMENT", wxPG_UNEDITABLE_COMPOSITE_FRAGMENT },
        { "wxPG_VALUE_IS_CURRENT", wxPG_VALUE_IS_CURRENT },
        { "wxPG_VFB_BEEP", wxPG_VFB_BEEP },
        { "wxPG_VFB_DEFAULT", wxPG_VFB_DEFAULT },
        { "wxPG_VFB_MARK_CELL", wxPG_VFB_MARK_CELL },
        { "wxPG_VFB_SHOW_MESSAGE", wxPG_VFB_SHOW_MESSAGE },
        { "wxPG_VFB_SHOW_MESSAGEBOX", wxPG_VFB_SHOW_MESSAGEBOX },
        { "wxPG_VFB_SHOW_MESSAGE_ON_STATUSBAR", wxPG_VFB_SHOW_MESSAGE_ON_STATUSBAR },
        { "wxPG_VFB_STAY_IN_PROPERTY", wxPG_VFB_STAY_IN_PROPERTY },
        { "wxPG_WINDOW_STYLE_MASK", wxPG_WINDOW_STYLE_MASK },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxpropgrid() is called to register #define_string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxpropgrid(size_t &count)
{
    static wxLuaBindString stringList[] =
    {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_ARRAY_DELIMITER", NULL, wxPG_ARRAY_DELIMITER },
        { "wxPG_ATTR_AUTOCOMPLETE", NULL, wxPG_ATTR_AUTOCOMPLETE },
        { "wxPG_ATTR_DEFAULT_VALUE", NULL, wxPG_ATTR_DEFAULT_VALUE },
        { "wxPG_ATTR_DEFAULT_VALUE", NULL, wxPG_ATTR_DEFAULT_VALUE },
        { "wxPG_ATTR_HINT", NULL, wxPG_ATTR_HINT },
        { "wxPG_ATTR_HINT", NULL, wxPG_ATTR_HINT },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_COMPATIBILITY_1_4)
        { "wxPG_ATTR_INLINE_HELP", NULL, wxPG_ATTR_INLINE_HELP },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_COMPATIBILITY_1_4)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_ATTR_MAX", NULL, wxPG_ATTR_MAX },
        { "wxPG_ATTR_MAX", NULL, wxPG_ATTR_MAX },
        { "wxPG_ATTR_MIN", NULL, wxPG_ATTR_MIN },
        { "wxPG_ATTR_MIN", NULL, wxPG_ATTR_MIN },
        { "wxPG_ATTR_MULTICHOICE_USERSTRINGMODE", NULL, wxPG_ATTR_MULTICHOICE_USERSTRINGMODE },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)
        { "wxPG_ATTR_SPINCTRL_MOTION", NULL, wxPG_ATTR_SPINCTRL_MOTION },
        { "wxPG_ATTR_SPINCTRL_STEP", NULL, wxPG_ATTR_SPINCTRL_STEP },
        { "wxPG_ATTR_SPINCTRL_WRAP", NULL, wxPG_ATTR_SPINCTRL_WRAP },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_ATTR_UNITS", NULL, wxPG_ATTR_UNITS },
        { "wxPG_ATTR_UNITS", NULL, wxPG_ATTR_UNITS },
        { "wxPG_BOOL_USE_CHECKBOX", NULL, wxPG_BOOL_USE_CHECKBOX },
        { "wxPG_BOOL_USE_DOUBLE_CLICK_CYCLING", NULL, wxPG_BOOL_USE_DOUBLE_CLICK_CYCLING },
        { "wxPG_COLOUR_ALLOW_CUSTOM", NULL, wxPG_COLOUR_ALLOW_CUSTOM },
        { "wxPG_COLOUR_HAS_ALPHA", NULL, wxPG_COLOUR_HAS_ALPHA },
        { "wxPG_DATE_FORMAT", NULL, wxPG_DATE_FORMAT },
        { "wxPG_DATE_PICKER_STYLE", NULL, wxPG_DATE_PICKER_STYLE },
        { "wxPG_DIALOG_TITLE", NULL, wxPG_DIALOG_TITLE },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if ((defined(WXWIN_COMPATIBILITY_3_0) && WXWIN_COMPATIBILITY_3_0)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
        { "wxPG_DIR_DIALOG_MESSAGE", NULL, wxPG_DIR_DIALOG_MESSAGE },
#endif // ((defined(WXWIN_COMPATIBILITY_3_0) && WXWIN_COMPATIBILITY_3_0)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_FILE_DIALOG_STYLE", NULL, wxPG_FILE_DIALOG_STYLE },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if ((defined(WXWIN_COMPATIBILITY_3_0) && WXWIN_COMPATIBILITY_3_0)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)
        { "wxPG_FILE_DIALOG_TITLE", NULL, wxPG_FILE_DIALOG_TITLE },
#endif // ((defined(WXWIN_COMPATIBILITY_3_0) && WXWIN_COMPATIBILITY_3_0)) && (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPG_FILE_INITIAL_PATH", NULL, wxPG_FILE_INITIAL_PATH },
        { "wxPG_FILE_SHOW_FULL_PATH", NULL, wxPG_FILE_SHOW_FULL_PATH },
        { "wxPG_FILE_SHOW_RELATIVE_PATH", NULL, wxPG_FILE_SHOW_RELATIVE_PATH },
        { "wxPG_FILE_WILDCARD", NULL, wxPG_FILE_WILDCARD },
        { "wxPG_FLOAT_PRECISION", NULL, wxPG_FLOAT_PRECISION },
        { "wxPG_LABEL", wxPG_LABEL, NULL },
        { "wxPG_STRING_PASSWORD", NULL, wxPG_STRING_PASSWORD },
        { "wxPG_UINT_BASE", NULL, wxPG_UINT_BASE },
        { "wxPG_UINT_PREFIX", NULL, wxPG_UINT_PREFIX },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxpropgrid() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxpropgrid(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {
#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)
        { "wxPGEditor_CheckBox", &wxluatype_wxPGCheckBoxEditor, &wxPGEditor_CheckBox, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPGEditor_Choice", &wxluatype_wxPGChoiceEditor, &wxPGEditor_Choice, NULL },
        { "wxPGEditor_ChoiceAndButton", &wxluatype_wxPGChoiceAndButtonEditor, &wxPGEditor_ChoiceAndButton, NULL },
        { "wxPGEditor_ComboBox", &wxluatype_wxPGComboBoxEditor, &wxPGEditor_ComboBox, NULL },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_DATEPICKCTRL && wxLUA_USE_wxDatePickerCtrl)
        { "wxPGEditor_DatePickerCtrl", &wxluatype_wxPGEditor, &wxPGEditor_DatePickerCtrl, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_DATEPICKCTRL && wxLUA_USE_wxDatePickerCtrl)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)
        { "wxPGEditor_SpinCtrl", &wxluatype_wxPGSpinCtrlEditor, &wxPGEditor_SpinCtrl, NULL },
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxPGEditor_TextCtrl", &wxluatype_wxPGTextCtrlAndButtonEditor, &wxPGEditor_TextCtrl, NULL },
        { "wxPGEditor_TextCtrl", &wxluatype_wxPGTextCtrlEditor, &wxPGEditor_TextCtrl, NULL },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxpropgrid() is called to register global functions
// ---------------------------------------------------------------------------

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
// %override wxLua_function_wxNullProperty
//    wxPGProperty *wxNullProperty() const;
static int LUACALL wxLua_function_wxNullProperty(lua_State *L)
{
    wxPGProperty* returns = wxNullProperty;
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxPGProperty);

    return 1;
}

static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxNullProperty[1] = {{ wxLua_function_wxNullProperty, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

// const wxString& wxPGGetDefaultImageWildcard();
static int LUACALL wxLua_function_wxPGGetDefaultImageWildcard(lua_State *L)
{
    // call wxPGGetDefaultImageWildcard
    wxString returns = (wxPGGetDefaultImageWildcard());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}
static wxLuaBindCFunc s_wxluafunc_wxLua_function_wxPGGetDefaultImageWildcard[1] = {{ wxLua_function_wxPGGetDefaultImageWildcard, WXLUAMETHOD_CFUNCTION, 0, 0, g_wxluaargtypeArray_None }};

#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxpropgrid() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxpropgrid(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { "wxNullProperty", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxNullProperty, 1, NULL },
        { "wxPGGetDefaultImageWildcard", WXLUAMETHOD_CFUNCTION, s_wxluafunc_wxLua_function_wxPGGetDefaultImageWildcard, 1, NULL },
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxpropgrid() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxArrayStringProperty = "wxArrayStringProperty";
static const char* wxluaclassname_wxBoolProperty = "wxBoolProperty";
static const char* wxluaclassname_wxColourProperty = "wxColourProperty";
static const char* wxluaclassname_wxColourPropertyValue = "wxColourPropertyValue";
static const char* wxluaclassname_wxCommandEvent = "wxCommandEvent";
static const char* wxluaclassname_wxCursorProperty = "wxCursorProperty";
static const char* wxluaclassname_wxDateProperty = "wxDateProperty";
static const char* wxluaclassname_wxDialog = "wxDialog";
static const char* wxluaclassname_wxDirProperty = "wxDirProperty";
static const char* wxluaclassname_wxEditEnumProperty = "wxEditEnumProperty";
static const char* wxluaclassname_wxEditorDialogProperty = "wxEditorDialogProperty";
static const char* wxluaclassname_wxEnumProperty = "wxEnumProperty";
static const char* wxluaclassname_wxEvtHandler = "wxEvtHandler";
static const char* wxluaclassname_wxFileProperty = "wxFileProperty";
static const char* wxluaclassname_wxFlagsProperty = "wxFlagsProperty";
static const char* wxluaclassname_wxFloatProperty = "wxFloatProperty";
static const char* wxluaclassname_wxFontProperty = "wxFontProperty";
static const char* wxluaclassname_wxImageFileProperty = "wxImageFileProperty";
static const char* wxluaclassname_wxIntProperty = "wxIntProperty";
static const char* wxluaclassname_wxLongStringProperty = "wxLongStringProperty";
static const char* wxluaclassname_wxMultiChoiceProperty = "wxMultiChoiceProperty";
static const char* wxluaclassname_wxNumericProperty = "wxNumericProperty";
static const char* wxluaclassname_wxNumericPropertyValidator = "wxNumericPropertyValidator";
static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxObjectRefData = "wxObjectRefData";
static const char* wxluaclassname_wxPGArrayEditorDialog = "wxPGArrayEditorDialog";
static const char* wxluaclassname_wxPGArrayStringEditorDialog = "wxPGArrayStringEditorDialog";
static const char* wxluaclassname_wxPGAttributeStorage = "wxPGAttributeStorage";
static const char* wxluaclassname_wxPGCell = "wxPGCell";
static const char* wxluaclassname_wxPGCellData = "wxPGCellData";
static const char* wxluaclassname_wxPGCellRenderer = "wxPGCellRenderer";
static const char* wxluaclassname_wxPGCheckBoxEditor = "wxPGCheckBoxEditor";
static const char* wxluaclassname_wxPGChoiceAndButtonEditor = "wxPGChoiceAndButtonEditor";
static const char* wxluaclassname_wxPGChoiceEditor = "wxPGChoiceEditor";
static const char* wxluaclassname_wxPGChoiceEntry = "wxPGChoiceEntry";
static const char* wxluaclassname_wxPGChoices = "wxPGChoices";
static const char* wxluaclassname_wxPGChoicesData = "wxPGChoicesData";
static const char* wxluaclassname_wxPGComboBoxEditor = "wxPGComboBoxEditor";
static const char* wxluaclassname_wxPGDefaultRenderer = "wxPGDefaultRenderer";
static const char* wxluaclassname_wxPGEditor = "wxPGEditor";
static const char* wxluaclassname_wxPGEditorDialogAdapter = "wxPGEditorDialogAdapter";
static const char* wxluaclassname_wxPGMultiButton = "wxPGMultiButton";
static const char* wxluaclassname_wxPGPaintData = "wxPGPaintData";
static const char* wxluaclassname_wxPGPropArgCls = "wxPGPropArgCls";
static const char* wxluaclassname_wxPGProperty = "wxPGProperty";
static const char* wxluaclassname_wxPGRootProperty = "wxPGRootProperty";
static const char* wxluaclassname_wxPGSpinCtrlEditor = "wxPGSpinCtrlEditor";
static const char* wxluaclassname_wxPGTextCtrlAndButtonEditor = "wxPGTextCtrlAndButtonEditor";
static const char* wxluaclassname_wxPGTextCtrlEditor = "wxPGTextCtrlEditor";
static const char* wxluaclassname_wxPGVIterator = "wxPGVIterator";
static const char* wxluaclassname_wxPGVIteratorBase = "wxPGVIteratorBase";
static const char* wxluaclassname_wxPGValidationInfo = "wxPGValidationInfo";
static const char* wxluaclassname_wxPGWindowList = "wxPGWindowList";
static const char* wxluaclassname_wxPanel = "wxPanel";
static const char* wxluaclassname_wxPropertyCategory = "wxPropertyCategory";
static const char* wxluaclassname_wxPropertyGrid = "wxPropertyGrid";
static const char* wxluaclassname_wxPropertyGridConstIterator = "wxPropertyGridConstIterator";
static const char* wxluaclassname_wxPropertyGridEvent = "wxPropertyGridEvent";
static const char* wxluaclassname_wxPropertyGridHitTestResult = "wxPropertyGridHitTestResult";
static const char* wxluaclassname_wxPropertyGridInterface = "wxPropertyGridInterface";
static const char* wxluaclassname_wxPropertyGridIteratorBase = "wxPropertyGridIteratorBase";
static const char* wxluaclassname_wxPropertyGridManager = "wxPropertyGridManager";
static const char* wxluaclassname_wxPropertyGridPage = "wxPropertyGridPage";
static const char* wxluaclassname_wxPropertyGridPageState = "wxPropertyGridPageState";
static const char* wxluaclassname_wxScrolled_wxControl_ = "wxScrolled<wxControl>";
static const char* wxluaclassname_wxStringProperty = "wxStringProperty";
static const char* wxluaclassname_wxSystemColourProperty = "wxSystemColourProperty";
static const char* wxluaclassname_wxTextValidator = "wxTextValidator";
static const char* wxluaclassname_wxUIntProperty = "wxUIntProperty";
static const char* wxluaclassname_wxWindow = "wxWindow";

static const char* wxluabaseclassnames_wxArrayStringProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxArrayStringProperty[] = { NULL };
static const char* wxluabaseclassnames_wxBoolProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxBoolProperty[] = { NULL };
static const char* wxluabaseclassnames_wxColourProperty[] = { wxluaclassname_wxSystemColourProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourProperty[] = { NULL };
static const char* wxluabaseclassnames_wxColourPropertyValue[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxColourPropertyValue[] = { NULL };
static const char* wxluabaseclassnames_wxCursorProperty[] = { wxluaclassname_wxEnumProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxCursorProperty[] = { NULL };
static const char* wxluabaseclassnames_wxDateProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDateProperty[] = { NULL };
static const char* wxluabaseclassnames_wxDirProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxDirProperty[] = { NULL };
static const char* wxluabaseclassnames_wxEditEnumProperty[] = { wxluaclassname_wxEnumProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEditEnumProperty[] = { NULL };
static const char* wxluabaseclassnames_wxEditorDialogProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEditorDialogProperty[] = { NULL };
static const char* wxluabaseclassnames_wxEnumProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxEnumProperty[] = { NULL };
static const char* wxluabaseclassnames_wxFileProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFileProperty[] = { NULL };
static const char* wxluabaseclassnames_wxFlagsProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFlagsProperty[] = { NULL };
static const char* wxluabaseclassnames_wxFloatProperty[] = { wxluaclassname_wxNumericProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFloatProperty[] = { NULL };
static const char* wxluabaseclassnames_wxFontProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxFontProperty[] = { NULL };
static const char* wxluabaseclassnames_wxImageFileProperty[] = { wxluaclassname_wxFileProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxImageFileProperty[] = { NULL };
static const char* wxluabaseclassnames_wxIntProperty[] = { wxluaclassname_wxNumericProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxIntProperty[] = { NULL };
static const char* wxluabaseclassnames_wxLongStringProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxLongStringProperty[] = { NULL };
static const char* wxluabaseclassnames_wxMultiChoiceProperty[] = { wxluaclassname_wxEditorDialogProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxMultiChoiceProperty[] = { NULL };
static const char* wxluabaseclassnames_wxNumericProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNumericProperty[] = { NULL };
static const char* wxluabaseclassnames_wxNumericPropertyValidator[] = { wxluaclassname_wxTextValidator, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxNumericPropertyValidator[] = { NULL };
static const char* wxluabaseclassnames_wxPGArrayEditorDialog[] = { wxluaclassname_wxDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGArrayEditorDialog[] = { NULL };
static const char* wxluabaseclassnames_wxPGArrayStringEditorDialog[] = { wxluaclassname_wxPGArrayEditorDialog, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGArrayStringEditorDialog[] = { NULL };
static const char* wxluabaseclassnames_wxPGCell[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGCell[] = { NULL };
static const char* wxluabaseclassnames_wxPGCellData[] = { wxluaclassname_wxObjectRefData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGCellData[] = { NULL };
static const char* wxluabaseclassnames_wxPGCellRenderer[] = { wxluaclassname_wxObjectRefData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGCellRenderer[] = { NULL };
static const char* wxluabaseclassnames_wxPGCheckBoxEditor[] = { wxluaclassname_wxPGEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGCheckBoxEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGChoiceAndButtonEditor[] = { wxluaclassname_wxPGChoiceEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGChoiceAndButtonEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGChoiceEditor[] = { wxluaclassname_wxPGEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGChoiceEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGChoiceEntry[] = { wxluaclassname_wxPGCell, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGChoiceEntry[] = { NULL };
static const char* wxluabaseclassnames_wxPGChoicesData[] = { wxluaclassname_wxObjectRefData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGChoicesData[] = { NULL };
static const char* wxluabaseclassnames_wxPGComboBoxEditor[] = { wxluaclassname_wxPGChoiceEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGComboBoxEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGDefaultRenderer[] = { wxluaclassname_wxPGCellRenderer, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGDefaultRenderer[] = { NULL };
static const char* wxluabaseclassnames_wxPGEditor[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGEditorDialogAdapter[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGEditorDialogAdapter[] = { NULL };
static const char* wxluabaseclassnames_wxPGMultiButton[] = { wxluaclassname_wxWindow, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGMultiButton[] = { NULL };
static const char* wxluabaseclassnames_wxPGProperty[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGProperty[] = { NULL };
static const char* wxluabaseclassnames_wxPGRootProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGRootProperty[] = { NULL };
static const char* wxluabaseclassnames_wxPGSpinCtrlEditor[] = { wxluaclassname_wxPGTextCtrlEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGSpinCtrlEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGTextCtrlAndButtonEditor[] = { wxluaclassname_wxPGTextCtrlEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGTextCtrlAndButtonEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGTextCtrlEditor[] = { wxluaclassname_wxPGEditor, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGTextCtrlEditor[] = { NULL };
static const char* wxluabaseclassnames_wxPGVIteratorBase[] = { wxluaclassname_wxObjectRefData, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPGVIteratorBase[] = { NULL };
static const char* wxluabaseclassnames_wxPropertyCategory[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyCategory[] = { NULL };
static const char* wxluabaseclassnames_wxPropertyGrid[] = { wxluaclassname_wxScrolled_wxControl_, wxluaclassname_wxPropertyGridInterface, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyGrid[] = { NULL, NULL };
static const char* wxluabaseclassnames_wxPropertyGridConstIterator[] = { wxluaclassname_wxPropertyGridIteratorBase, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyGridConstIterator[] = { NULL };
static const char* wxluabaseclassnames_wxPropertyGridEvent[] = { wxluaclassname_wxCommandEvent, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyGridEvent[] = { NULL };
static const char* wxluabaseclassnames_wxPropertyGridManager[] = { wxluaclassname_wxPanel, wxluaclassname_wxPropertyGridInterface, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyGridManager[] = { NULL, NULL };
static const char* wxluabaseclassnames_wxPropertyGridPage[] = { wxluaclassname_wxEvtHandler, wxluaclassname_wxPropertyGridInterface, wxluaclassname_wxPropertyGridPageState, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxPropertyGridPage[] = { NULL, NULL, NULL };
static const char* wxluabaseclassnames_wxStringProperty[] = { wxluaclassname_wxPGProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxStringProperty[] = { NULL };
static const char* wxluabaseclassnames_wxSystemColourProperty[] = { wxluaclassname_wxEnumProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxSystemColourProperty[] = { NULL };
static const char* wxluabaseclassnames_wxUIntProperty[] = { wxluaclassname_wxNumericProperty, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxUIntProperty[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)
    extern wxLuaBindMethod wxPGCheckBoxEditor_methods[];
    extern int wxPGCheckBoxEditor_methodCount;
    extern void wxLua_wxPGCheckBoxEditor_delete_function(void** p);
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)
    extern wxLuaBindMethod wxPGSpinCtrlEditor_methods[];
    extern int wxPGSpinCtrlEditor_methodCount;
    extern void wxLua_wxPGSpinCtrlEditor_delete_function(void** p);
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
    extern wxLuaBindMethod wxArrayStringProperty_methods[];
    extern int wxArrayStringProperty_methodCount;
    extern wxLuaBindNumber wxArrayStringProperty_enums[];
    extern int wxArrayStringProperty_enumCount;
    extern void wxLua_wxArrayStringProperty_delete_function(void** p);
    extern wxLuaBindMethod wxBoolProperty_methods[];
    extern int wxBoolProperty_methodCount;
    extern void wxLua_wxBoolProperty_delete_function(void** p);
    extern wxLuaBindMethod wxColourProperty_methods[];
    extern int wxColourProperty_methodCount;
    extern void wxLua_wxColourProperty_delete_function(void** p);
    extern wxLuaBindMethod wxColourPropertyValue_methods[];
    extern int wxColourPropertyValue_methodCount;
    extern void wxLua_wxColourPropertyValue_delete_function(void** p);
    extern wxLuaBindMethod wxCursorProperty_methods[];
    extern int wxCursorProperty_methodCount;
    extern void wxLua_wxCursorProperty_delete_function(void** p);
    extern wxLuaBindMethod wxDateProperty_methods[];
    extern int wxDateProperty_methodCount;
    extern void wxLua_wxDateProperty_delete_function(void** p);
    extern wxLuaBindMethod wxDirProperty_methods[];
    extern int wxDirProperty_methodCount;
    extern void wxLua_wxDirProperty_delete_function(void** p);
    extern wxLuaBindMethod wxEditEnumProperty_methods[];
    extern int wxEditEnumProperty_methodCount;
    extern void wxLua_wxEditEnumProperty_delete_function(void** p);
    extern wxLuaBindMethod wxEditorDialogProperty_methods[];
    extern int wxEditorDialogProperty_methodCount;
    extern void wxLua_wxEditorDialogProperty_delete_function(void** p);
    extern wxLuaBindMethod wxEnumProperty_methods[];
    extern int wxEnumProperty_methodCount;
    extern void wxLua_wxEnumProperty_delete_function(void** p);
    extern wxLuaBindMethod wxFileProperty_methods[];
    extern int wxFileProperty_methodCount;
    extern void wxLua_wxFileProperty_delete_function(void** p);
    extern wxLuaBindMethod wxFlagsProperty_methods[];
    extern int wxFlagsProperty_methodCount;
    extern void wxLua_wxFlagsProperty_delete_function(void** p);
    extern wxLuaBindMethod wxFloatProperty_methods[];
    extern int wxFloatProperty_methodCount;
    extern void wxLua_wxFloatProperty_delete_function(void** p);
    extern wxLuaBindMethod wxFontProperty_methods[];
    extern int wxFontProperty_methodCount;
    extern void wxLua_wxFontProperty_delete_function(void** p);
    extern wxLuaBindMethod wxImageFileProperty_methods[];
    extern int wxImageFileProperty_methodCount;
    extern void wxLua_wxImageFileProperty_delete_function(void** p);
    extern wxLuaBindMethod wxIntProperty_methods[];
    extern int wxIntProperty_methodCount;
    extern void wxLua_wxIntProperty_delete_function(void** p);
    extern wxLuaBindMethod wxLongStringProperty_methods[];
    extern int wxLongStringProperty_methodCount;
    extern void wxLua_wxLongStringProperty_delete_function(void** p);
    extern wxLuaBindMethod wxMultiChoiceProperty_methods[];
    extern int wxMultiChoiceProperty_methodCount;
    extern void wxLua_wxMultiChoiceProperty_delete_function(void** p);
    extern wxLuaBindMethod wxNumericProperty_methods[];
    extern int wxNumericProperty_methodCount;
    extern void wxLua_wxNumericProperty_delete_function(void** p);
    extern wxLuaBindMethod wxNumericPropertyValidator_methods[];
    extern int wxNumericPropertyValidator_methodCount;
    extern wxLuaBindNumber wxNumericPropertyValidator_enums[];
    extern int wxNumericPropertyValidator_enumCount;
    extern void wxLua_wxNumericPropertyValidator_delete_function(void** p);
    extern wxLuaBindMethod wxPGArrayEditorDialog_methods[];
    extern int wxPGArrayEditorDialog_methodCount;
    extern void wxLua_wxPGArrayEditorDialog_delete_function(void** p);
    extern wxLuaBindMethod wxPGArrayStringEditorDialog_methods[];
    extern int wxPGArrayStringEditorDialog_methodCount;
    extern void wxLua_wxPGArrayStringEditorDialog_delete_function(void** p);
    extern wxLuaBindMethod wxPGAttributeStorage_methods[];
    extern int wxPGAttributeStorage_methodCount;
    extern void wxLua_wxPGAttributeStorage_delete_function(void** p);
    extern wxLuaBindMethod wxPGCell_methods[];
    extern int wxPGCell_methodCount;
    extern void wxLua_wxPGCell_delete_function(void** p);
    extern wxLuaBindMethod wxPGCellData_methods[];
    extern int wxPGCellData_methodCount;
    extern void wxLua_wxPGCellData_delete_function(void** p);
    extern wxLuaBindMethod wxPGCellRenderer_methods[];
    extern int wxPGCellRenderer_methodCount;
    extern wxLuaBindNumber wxPGCellRenderer_enums[];
    extern int wxPGCellRenderer_enumCount;
    extern void wxLua_wxPGCellRenderer_delete_function(void** p);
    extern wxLuaBindMethod wxPGChoiceAndButtonEditor_methods[];
    extern int wxPGChoiceAndButtonEditor_methodCount;
    extern void wxLua_wxPGChoiceAndButtonEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGChoiceEditor_methods[];
    extern int wxPGChoiceEditor_methodCount;
    extern void wxLua_wxPGChoiceEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGChoiceEntry_methods[];
    extern int wxPGChoiceEntry_methodCount;
    extern void wxLua_wxPGChoiceEntry_delete_function(void** p);
    extern wxLuaBindMethod wxPGChoices_methods[];
    extern int wxPGChoices_methodCount;
    extern void wxLua_wxPGChoices_delete_function(void** p);
    extern wxLuaBindMethod wxPGChoicesData_methods[];
    extern int wxPGChoicesData_methodCount;
    extern void wxLua_wxPGChoicesData_delete_function(void** p);
    extern wxLuaBindMethod wxPGComboBoxEditor_methods[];
    extern int wxPGComboBoxEditor_methodCount;
    extern void wxLua_wxPGComboBoxEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGDefaultRenderer_methods[];
    extern int wxPGDefaultRenderer_methodCount;
    extern void wxLua_wxPGDefaultRenderer_delete_function(void** p);
    extern wxLuaBindMethod wxPGEditor_methods[];
    extern int wxPGEditor_methodCount;
    extern void wxLua_wxPGEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGEditorDialogAdapter_methods[];
    extern int wxPGEditorDialogAdapter_methodCount;
    extern void wxLua_wxPGEditorDialogAdapter_delete_function(void** p);
    extern wxLuaBindMethod wxPGMultiButton_methods[];
    extern int wxPGMultiButton_methodCount;
    extern void wxLua_wxPGMultiButton_delete_function(void** p);
    extern wxLuaBindMethod wxPGPaintData_methods[];
    extern int wxPGPaintData_methodCount;
    extern void wxLua_wxPGPaintData_delete_function(void** p);
    extern wxLuaBindMethod wxPGPropArgCls_methods[];
    extern int wxPGPropArgCls_methodCount;
    extern void wxLua_wxPGPropArgCls_delete_function(void** p);
    extern wxLuaBindMethod wxPGProperty_methods[];
    extern int wxPGProperty_methodCount;
    extern void wxLua_wxPGProperty_delete_function(void** p);
    extern wxLuaBindMethod wxPGRootProperty_methods[];
    extern int wxPGRootProperty_methodCount;
    extern void wxLua_wxPGRootProperty_delete_function(void** p);
    extern wxLuaBindMethod wxPGTextCtrlAndButtonEditor_methods[];
    extern int wxPGTextCtrlAndButtonEditor_methodCount;
    extern void wxLua_wxPGTextCtrlAndButtonEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGTextCtrlEditor_methods[];
    extern int wxPGTextCtrlEditor_methodCount;
    extern void wxLua_wxPGTextCtrlEditor_delete_function(void** p);
    extern wxLuaBindMethod wxPGVIterator_methods[];
    extern int wxPGVIterator_methodCount;
    extern void wxLua_wxPGVIterator_delete_function(void** p);
    extern wxLuaBindMethod wxPGVIteratorBase_methods[];
    extern int wxPGVIteratorBase_methodCount;
    extern void wxLua_wxPGVIteratorBase_delete_function(void** p);
    extern wxLuaBindMethod wxPGValidationInfo_methods[];
    extern int wxPGValidationInfo_methodCount;
    extern void wxLua_wxPGValidationInfo_delete_function(void** p);
    extern wxLuaBindMethod wxPGWindowList_methods[];
    extern int wxPGWindowList_methodCount;
    extern void wxLua_wxPGWindowList_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyCategory_methods[];
    extern int wxPropertyCategory_methodCount;
    extern void wxLua_wxPropertyCategory_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGrid_methods[];
    extern int wxPropertyGrid_methodCount;
    static wxLuaArgType wxluabaseclass_wxluatypes_wxPropertyGrid[] = { &wxluatype_wxPropertyGridInterface, NULL };
    static wxIntPtr wxluabaseclass_vtable_offsets_wxPropertyGrid[] = { wxIntPtr(((wxIntPtr)(wxPropertyGridInterface*)(wxPropertyGrid*)&wxluatype_TNONE) - ((wxIntPtr)(wxPropertyGrid*)&wxluatype_TNONE)) };
    extern void wxLua_wxPropertyGrid_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridConstIterator_methods[];
    extern int wxPropertyGridConstIterator_methodCount;
    extern void wxLua_wxPropertyGridConstIterator_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridEvent_methods[];
    extern int wxPropertyGridEvent_methodCount;
    extern void wxLua_wxPropertyGridEvent_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridHitTestResult_methods[];
    extern int wxPropertyGridHitTestResult_methodCount;
    extern void wxLua_wxPropertyGridHitTestResult_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridInterface_methods[];
    extern int wxPropertyGridInterface_methodCount;
    extern wxLuaBindNumber wxPropertyGridInterface_enums[];
    extern int wxPropertyGridInterface_enumCount;
    extern void wxLua_wxPropertyGridInterface_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridIteratorBase_methods[];
    extern int wxPropertyGridIteratorBase_methodCount;
    extern void wxLua_wxPropertyGridIteratorBase_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridManager_methods[];
    extern int wxPropertyGridManager_methodCount;
    static wxLuaArgType wxluabaseclass_wxluatypes_wxPropertyGridManager[] = { &wxluatype_wxPropertyGridInterface, NULL };
    static wxIntPtr wxluabaseclass_vtable_offsets_wxPropertyGridManager[] = { wxIntPtr(((wxIntPtr)(wxPropertyGridInterface*)(wxPropertyGridManager*)&wxluatype_TNONE) - ((wxIntPtr)(wxPropertyGridManager*)&wxluatype_TNONE)) };
    extern void wxLua_wxPropertyGridManager_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridPage_methods[];
    extern int wxPropertyGridPage_methodCount;
    static wxLuaArgType wxluabaseclass_wxluatypes_wxPropertyGridPage[] = { &wxluatype_wxPropertyGridInterface, &wxluatype_wxPropertyGridPageState, NULL };
    static wxIntPtr wxluabaseclass_vtable_offsets_wxPropertyGridPage[] = { wxIntPtr(((wxIntPtr)(wxPropertyGridInterface*)(wxPropertyGridPage*)&wxluatype_TNONE) - ((wxIntPtr)(wxPropertyGridPage*)&wxluatype_TNONE)), wxIntPtr(((wxIntPtr)(wxPropertyGridPageState*)(wxPropertyGridPage*)&wxluatype_TNONE) - ((wxIntPtr)(wxPropertyGridPage*)&wxluatype_TNONE)) };
    extern void wxLua_wxPropertyGridPage_delete_function(void** p);
    extern wxLuaBindMethod wxPropertyGridPageState_methods[];
    extern int wxPropertyGridPageState_methodCount;
    extern void wxLua_wxPropertyGridPageState_delete_function(void** p);
    extern wxLuaBindMethod wxStringProperty_methods[];
    extern int wxStringProperty_methodCount;
    extern void wxLua_wxStringProperty_delete_function(void** p);
    extern wxLuaBindMethod wxSystemColourProperty_methods[];
    extern int wxSystemColourProperty_methodCount;
    extern void wxLua_wxSystemColourProperty_delete_function(void** p);
    extern wxLuaBindMethod wxUIntProperty_methods[];
    extern int wxUIntProperty_methodCount;
    extern void wxLua_wxUIntProperty_delete_function(void** p);
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID




wxLuaBindClass* wxLuaGetClassList_wxpropgrid(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { wxluaclassname_wxArrayStringProperty, wxArrayStringProperty_methods, wxArrayStringProperty_methodCount, CLASSINFO(wxArrayStringProperty), &wxluatype_wxArrayStringProperty, wxluabaseclassnames_wxArrayStringProperty, wxluabaseclassbinds_wxArrayStringProperty, NULL, NULL, wxArrayStringProperty_enums, wxArrayStringProperty_enumCount, &wxLua_wxArrayStringProperty_delete_function, }, 
        { wxluaclassname_wxBoolProperty, wxBoolProperty_methods, wxBoolProperty_methodCount, CLASSINFO(wxBoolProperty), &wxluatype_wxBoolProperty, wxluabaseclassnames_wxBoolProperty, wxluabaseclassbinds_wxBoolProperty, NULL, NULL, NULL, 0, &wxLua_wxBoolProperty_delete_function, }, 
        { wxluaclassname_wxColourProperty, wxColourProperty_methods, wxColourProperty_methodCount, CLASSINFO(wxColourProperty), &wxluatype_wxColourProperty, wxluabaseclassnames_wxColourProperty, wxluabaseclassbinds_wxColourProperty, NULL, NULL, NULL, 0, &wxLua_wxColourProperty_delete_function, }, 
        { wxluaclassname_wxColourPropertyValue, wxColourPropertyValue_methods, wxColourPropertyValue_methodCount, CLASSINFO(wxColourPropertyValue), &wxluatype_wxColourPropertyValue, wxluabaseclassnames_wxColourPropertyValue, wxluabaseclassbinds_wxColourPropertyValue, NULL, NULL, NULL, 0, &wxLua_wxColourPropertyValue_delete_function, }, 
        { wxluaclassname_wxCursorProperty, wxCursorProperty_methods, wxCursorProperty_methodCount, CLASSINFO(wxCursorProperty), &wxluatype_wxCursorProperty, wxluabaseclassnames_wxCursorProperty, wxluabaseclassbinds_wxCursorProperty, NULL, NULL, NULL, 0, &wxLua_wxCursorProperty_delete_function, }, 
        { wxluaclassname_wxDateProperty, wxDateProperty_methods, wxDateProperty_methodCount, CLASSINFO(wxDateProperty), &wxluatype_wxDateProperty, wxluabaseclassnames_wxDateProperty, wxluabaseclassbinds_wxDateProperty, NULL, NULL, NULL, 0, &wxLua_wxDateProperty_delete_function, }, 
        { wxluaclassname_wxDirProperty, wxDirProperty_methods, wxDirProperty_methodCount, CLASSINFO(wxDirProperty), &wxluatype_wxDirProperty, wxluabaseclassnames_wxDirProperty, wxluabaseclassbinds_wxDirProperty, NULL, NULL, NULL, 0, &wxLua_wxDirProperty_delete_function, }, 
        { wxluaclassname_wxEditEnumProperty, wxEditEnumProperty_methods, wxEditEnumProperty_methodCount, CLASSINFO(wxEditEnumProperty), &wxluatype_wxEditEnumProperty, wxluabaseclassnames_wxEditEnumProperty, wxluabaseclassbinds_wxEditEnumProperty, NULL, NULL, NULL, 0, &wxLua_wxEditEnumProperty_delete_function, }, 
        { wxluaclassname_wxEditorDialogProperty, wxEditorDialogProperty_methods, wxEditorDialogProperty_methodCount, CLASSINFO(wxEditorDialogProperty), &wxluatype_wxEditorDialogProperty, wxluabaseclassnames_wxEditorDialogProperty, wxluabaseclassbinds_wxEditorDialogProperty, NULL, NULL, NULL, 0, &wxLua_wxEditorDialogProperty_delete_function, }, 
        { wxluaclassname_wxEnumProperty, wxEnumProperty_methods, wxEnumProperty_methodCount, CLASSINFO(wxEnumProperty), &wxluatype_wxEnumProperty, wxluabaseclassnames_wxEnumProperty, wxluabaseclassbinds_wxEnumProperty, NULL, NULL, NULL, 0, &wxLua_wxEnumProperty_delete_function, }, 
        { wxluaclassname_wxFileProperty, wxFileProperty_methods, wxFileProperty_methodCount, CLASSINFO(wxFileProperty), &wxluatype_wxFileProperty, wxluabaseclassnames_wxFileProperty, wxluabaseclassbinds_wxFileProperty, NULL, NULL, NULL, 0, &wxLua_wxFileProperty_delete_function, }, 
        { wxluaclassname_wxFlagsProperty, wxFlagsProperty_methods, wxFlagsProperty_methodCount, CLASSINFO(wxFlagsProperty), &wxluatype_wxFlagsProperty, wxluabaseclassnames_wxFlagsProperty, wxluabaseclassbinds_wxFlagsProperty, NULL, NULL, NULL, 0, &wxLua_wxFlagsProperty_delete_function, }, 
        { wxluaclassname_wxFloatProperty, wxFloatProperty_methods, wxFloatProperty_methodCount, CLASSINFO(wxFloatProperty), &wxluatype_wxFloatProperty, wxluabaseclassnames_wxFloatProperty, wxluabaseclassbinds_wxFloatProperty, NULL, NULL, NULL, 0, &wxLua_wxFloatProperty_delete_function, }, 
        { wxluaclassname_wxFontProperty, wxFontProperty_methods, wxFontProperty_methodCount, CLASSINFO(wxFontProperty), &wxluatype_wxFontProperty, wxluabaseclassnames_wxFontProperty, wxluabaseclassbinds_wxFontProperty, NULL, NULL, NULL, 0, &wxLua_wxFontProperty_delete_function, }, 
        { wxluaclassname_wxImageFileProperty, wxImageFileProperty_methods, wxImageFileProperty_methodCount, CLASSINFO(wxImageFileProperty), &wxluatype_wxImageFileProperty, wxluabaseclassnames_wxImageFileProperty, wxluabaseclassbinds_wxImageFileProperty, NULL, NULL, NULL, 0, &wxLua_wxImageFileProperty_delete_function, }, 
        { wxluaclassname_wxIntProperty, wxIntProperty_methods, wxIntProperty_methodCount, CLASSINFO(wxIntProperty), &wxluatype_wxIntProperty, wxluabaseclassnames_wxIntProperty, wxluabaseclassbinds_wxIntProperty, NULL, NULL, NULL, 0, &wxLua_wxIntProperty_delete_function, }, 
        { wxluaclassname_wxLongStringProperty, wxLongStringProperty_methods, wxLongStringProperty_methodCount, CLASSINFO(wxLongStringProperty), &wxluatype_wxLongStringProperty, wxluabaseclassnames_wxLongStringProperty, wxluabaseclassbinds_wxLongStringProperty, NULL, NULL, NULL, 0, &wxLua_wxLongStringProperty_delete_function, }, 
        { wxluaclassname_wxMultiChoiceProperty, wxMultiChoiceProperty_methods, wxMultiChoiceProperty_methodCount, CLASSINFO(wxMultiChoiceProperty), &wxluatype_wxMultiChoiceProperty, wxluabaseclassnames_wxMultiChoiceProperty, wxluabaseclassbinds_wxMultiChoiceProperty, NULL, NULL, NULL, 0, &wxLua_wxMultiChoiceProperty_delete_function, }, 
        { wxluaclassname_wxNumericProperty, wxNumericProperty_methods, wxNumericProperty_methodCount, CLASSINFO(wxNumericProperty), &wxluatype_wxNumericProperty, wxluabaseclassnames_wxNumericProperty, wxluabaseclassbinds_wxNumericProperty, NULL, NULL, NULL, 0, &wxLua_wxNumericProperty_delete_function, }, 
        { wxluaclassname_wxNumericPropertyValidator, wxNumericPropertyValidator_methods, wxNumericPropertyValidator_methodCount, CLASSINFO(wxNumericPropertyValidator), &wxluatype_wxNumericPropertyValidator, wxluabaseclassnames_wxNumericPropertyValidator, wxluabaseclassbinds_wxNumericPropertyValidator, NULL, NULL, wxNumericPropertyValidator_enums, wxNumericPropertyValidator_enumCount, &wxLua_wxNumericPropertyValidator_delete_function, }, 
        { wxluaclassname_wxPGArrayEditorDialog, wxPGArrayEditorDialog_methods, wxPGArrayEditorDialog_methodCount, CLASSINFO(wxPGArrayEditorDialog), &wxluatype_wxPGArrayEditorDialog, wxluabaseclassnames_wxPGArrayEditorDialog, wxluabaseclassbinds_wxPGArrayEditorDialog, NULL, NULL, NULL, 0, &wxLua_wxPGArrayEditorDialog_delete_function, }, 
        { wxluaclassname_wxPGArrayStringEditorDialog, wxPGArrayStringEditorDialog_methods, wxPGArrayStringEditorDialog_methodCount, CLASSINFO(wxPGArrayStringEditorDialog), &wxluatype_wxPGArrayStringEditorDialog, wxluabaseclassnames_wxPGArrayStringEditorDialog, wxluabaseclassbinds_wxPGArrayStringEditorDialog, NULL, NULL, NULL, 0, &wxLua_wxPGArrayStringEditorDialog_delete_function, }, 
        { wxluaclassname_wxPGAttributeStorage, wxPGAttributeStorage_methods, wxPGAttributeStorage_methodCount, NULL, &wxluatype_wxPGAttributeStorage, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGAttributeStorage_delete_function, }, 
        { wxluaclassname_wxPGCell, wxPGCell_methods, wxPGCell_methodCount, CLASSINFO(wxPGCell), &wxluatype_wxPGCell, wxluabaseclassnames_wxPGCell, wxluabaseclassbinds_wxPGCell, NULL, NULL, NULL, 0, &wxLua_wxPGCell_delete_function, }, 
        { wxluaclassname_wxPGCellData, wxPGCellData_methods, wxPGCellData_methodCount, NULL, &wxluatype_wxPGCellData, wxluabaseclassnames_wxPGCellData, wxluabaseclassbinds_wxPGCellData, NULL, NULL, NULL, 0, &wxLua_wxPGCellData_delete_function, }, 
        { wxluaclassname_wxPGCellRenderer, wxPGCellRenderer_methods, wxPGCellRenderer_methodCount, NULL, &wxluatype_wxPGCellRenderer, wxluabaseclassnames_wxPGCellRenderer, wxluabaseclassbinds_wxPGCellRenderer, NULL, NULL, wxPGCellRenderer_enums, wxPGCellRenderer_enumCount, &wxLua_wxPGCellRenderer_delete_function, }, 
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)
        { wxluaclassname_wxPGCheckBoxEditor, wxPGCheckBoxEditor_methods, wxPGCheckBoxEditor_methodCount, CLASSINFO(wxPGCheckBoxEditor), &wxluatype_wxPGCheckBoxEditor, wxluabaseclassnames_wxPGCheckBoxEditor, wxluabaseclassbinds_wxPGCheckBoxEditor, NULL, NULL, NULL, 0, &wxLua_wxPGCheckBoxEditor_delete_function, }, 
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxPG_INCLUDE_CHECKBOX)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { wxluaclassname_wxPGChoiceAndButtonEditor, wxPGChoiceAndButtonEditor_methods, wxPGChoiceAndButtonEditor_methodCount, CLASSINFO(wxPGChoiceAndButtonEditor), &wxluatype_wxPGChoiceAndButtonEditor, wxluabaseclassnames_wxPGChoiceAndButtonEditor, wxluabaseclassbinds_wxPGChoiceAndButtonEditor, NULL, NULL, NULL, 0, &wxLua_wxPGChoiceAndButtonEditor_delete_function, }, 
        { wxluaclassname_wxPGChoiceEditor, wxPGChoiceEditor_methods, wxPGChoiceEditor_methodCount, CLASSINFO(wxPGChoiceEditor), &wxluatype_wxPGChoiceEditor, wxluabaseclassnames_wxPGChoiceEditor, wxluabaseclassbinds_wxPGChoiceEditor, NULL, NULL, NULL, 0, &wxLua_wxPGChoiceEditor_delete_function, }, 
        { wxluaclassname_wxPGChoiceEntry, wxPGChoiceEntry_methods, wxPGChoiceEntry_methodCount, CLASSINFO(wxPGChoiceEntry), &wxluatype_wxPGChoiceEntry, wxluabaseclassnames_wxPGChoiceEntry, wxluabaseclassbinds_wxPGChoiceEntry, NULL, NULL, NULL, 0, &wxLua_wxPGChoiceEntry_delete_function, }, 
        { wxluaclassname_wxPGChoices, wxPGChoices_methods, wxPGChoices_methodCount, NULL, &wxluatype_wxPGChoices, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGChoices_delete_function, }, 
        { wxluaclassname_wxPGChoicesData, wxPGChoicesData_methods, wxPGChoicesData_methodCount, NULL, &wxluatype_wxPGChoicesData, wxluabaseclassnames_wxPGChoicesData, wxluabaseclassbinds_wxPGChoicesData, NULL, NULL, NULL, 0, &wxLua_wxPGChoicesData_delete_function, }, 
        { wxluaclassname_wxPGComboBoxEditor, wxPGComboBoxEditor_methods, wxPGComboBoxEditor_methodCount, CLASSINFO(wxPGComboBoxEditor), &wxluatype_wxPGComboBoxEditor, wxluabaseclassnames_wxPGComboBoxEditor, wxluabaseclassbinds_wxPGComboBoxEditor, NULL, NULL, NULL, 0, &wxLua_wxPGComboBoxEditor_delete_function, }, 
        { wxluaclassname_wxPGDefaultRenderer, wxPGDefaultRenderer_methods, wxPGDefaultRenderer_methodCount, NULL, &wxluatype_wxPGDefaultRenderer, wxluabaseclassnames_wxPGDefaultRenderer, wxluabaseclassbinds_wxPGDefaultRenderer, NULL, NULL, NULL, 0, &wxLua_wxPGDefaultRenderer_delete_function, }, 
        { wxluaclassname_wxPGEditor, wxPGEditor_methods, wxPGEditor_methodCount, CLASSINFO(wxPGEditor), &wxluatype_wxPGEditor, wxluabaseclassnames_wxPGEditor, wxluabaseclassbinds_wxPGEditor, NULL, NULL, NULL, 0, &wxLua_wxPGEditor_delete_function, }, 
        { wxluaclassname_wxPGEditorDialogAdapter, wxPGEditorDialogAdapter_methods, wxPGEditorDialogAdapter_methodCount, CLASSINFO(wxPGEditorDialogAdapter), &wxluatype_wxPGEditorDialogAdapter, wxluabaseclassnames_wxPGEditorDialogAdapter, wxluabaseclassbinds_wxPGEditorDialogAdapter, NULL, NULL, NULL, 0, &wxLua_wxPGEditorDialogAdapter_delete_function, }, 
        { wxluaclassname_wxPGMultiButton, wxPGMultiButton_methods, wxPGMultiButton_methodCount, CLASSINFO(wxPGMultiButton), &wxluatype_wxPGMultiButton, wxluabaseclassnames_wxPGMultiButton, wxluabaseclassbinds_wxPGMultiButton, NULL, NULL, NULL, 0, &wxLua_wxPGMultiButton_delete_function, }, 
        { wxluaclassname_wxPGPaintData, wxPGPaintData_methods, wxPGPaintData_methodCount, NULL, &wxluatype_wxPGPaintData, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGPaintData_delete_function, }, 
        { wxluaclassname_wxPGPropArgCls, wxPGPropArgCls_methods, wxPGPropArgCls_methodCount, NULL, &wxluatype_wxPGPropArgCls, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGPropArgCls_delete_function, }, 
        { wxluaclassname_wxPGProperty, wxPGProperty_methods, wxPGProperty_methodCount, CLASSINFO(wxPGProperty), &wxluatype_wxPGProperty, wxluabaseclassnames_wxPGProperty, wxluabaseclassbinds_wxPGProperty, NULL, NULL, NULL, 0, &wxLua_wxPGProperty_delete_function, }, 
        { wxluaclassname_wxPGRootProperty, wxPGRootProperty_methods, wxPGRootProperty_methodCount, CLASSINFO(wxPGRootProperty), &wxluatype_wxPGRootProperty, wxluabaseclassnames_wxPGRootProperty, wxluabaseclassbinds_wxPGRootProperty, NULL, NULL, NULL, 0, &wxLua_wxPGRootProperty_delete_function, }, 
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID

#if (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)
        { wxluaclassname_wxPGSpinCtrlEditor, wxPGSpinCtrlEditor_methods, wxPGSpinCtrlEditor_methodCount, CLASSINFO(wxPGSpinCtrlEditor), &wxluatype_wxPGSpinCtrlEditor, wxluabaseclassnames_wxPGSpinCtrlEditor, wxluabaseclassbinds_wxPGSpinCtrlEditor, NULL, NULL, NULL, 0, &wxLua_wxPGSpinCtrlEditor_delete_function, }, 
#endif // (wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID) && (wxUSE_SPINBTN && wxLUA_USE_wxSpinButton)

#if wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID
        { wxluaclassname_wxPGTextCtrlAndButtonEditor, wxPGTextCtrlAndButtonEditor_methods, wxPGTextCtrlAndButtonEditor_methodCount, CLASSINFO(wxPGTextCtrlAndButtonEditor), &wxluatype_wxPGTextCtrlAndButtonEditor, wxluabaseclassnames_wxPGTextCtrlAndButtonEditor, wxluabaseclassbinds_wxPGTextCtrlAndButtonEditor, NULL, NULL, NULL, 0, &wxLua_wxPGTextCtrlAndButtonEditor_delete_function, }, 
        { wxluaclassname_wxPGTextCtrlEditor, wxPGTextCtrlEditor_methods, wxPGTextCtrlEditor_methodCount, CLASSINFO(wxPGTextCtrlEditor), &wxluatype_wxPGTextCtrlEditor, wxluabaseclassnames_wxPGTextCtrlEditor, wxluabaseclassbinds_wxPGTextCtrlEditor, NULL, NULL, NULL, 0, &wxLua_wxPGTextCtrlEditor_delete_function, }, 
        { wxluaclassname_wxPGVIterator, wxPGVIterator_methods, wxPGVIterator_methodCount, NULL, &wxluatype_wxPGVIterator, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGVIterator_delete_function, }, 
        { wxluaclassname_wxPGVIteratorBase, wxPGVIteratorBase_methods, wxPGVIteratorBase_methodCount, NULL, &wxluatype_wxPGVIteratorBase, wxluabaseclassnames_wxPGVIteratorBase, wxluabaseclassbinds_wxPGVIteratorBase, NULL, NULL, NULL, 0, &wxLua_wxPGVIteratorBase_delete_function, }, 
        { wxluaclassname_wxPGValidationInfo, wxPGValidationInfo_methods, wxPGValidationInfo_methodCount, NULL, &wxluatype_wxPGValidationInfo, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGValidationInfo_delete_function, }, 
        { wxluaclassname_wxPGWindowList, wxPGWindowList_methods, wxPGWindowList_methodCount, NULL, &wxluatype_wxPGWindowList, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPGWindowList_delete_function, }, 
        { wxluaclassname_wxPropertyCategory, wxPropertyCategory_methods, wxPropertyCategory_methodCount, CLASSINFO(wxPropertyCategory), &wxluatype_wxPropertyCategory, wxluabaseclassnames_wxPropertyCategory, wxluabaseclassbinds_wxPropertyCategory, NULL, NULL, NULL, 0, &wxLua_wxPropertyCategory_delete_function, }, 
        { wxluaclassname_wxPropertyGrid, wxPropertyGrid_methods, wxPropertyGrid_methodCount, NULL, &wxluatype_wxPropertyGrid, wxluabaseclassnames_wxPropertyGrid, wxluabaseclassbinds_wxPropertyGrid, wxluabaseclass_wxluatypes_wxPropertyGrid, wxluabaseclass_vtable_offsets_wxPropertyGrid, NULL, 0, &wxLua_wxPropertyGrid_delete_function, }, 
        { wxluaclassname_wxPropertyGridConstIterator, wxPropertyGridConstIterator_methods, wxPropertyGridConstIterator_methodCount, NULL, &wxluatype_wxPropertyGridConstIterator, wxluabaseclassnames_wxPropertyGridConstIterator, wxluabaseclassbinds_wxPropertyGridConstIterator, NULL, NULL, NULL, 0, &wxLua_wxPropertyGridConstIterator_delete_function, }, 
        { wxluaclassname_wxPropertyGridEvent, wxPropertyGridEvent_methods, wxPropertyGridEvent_methodCount, CLASSINFO(wxPropertyGridEvent), &wxluatype_wxPropertyGridEvent, wxluabaseclassnames_wxPropertyGridEvent, wxluabaseclassbinds_wxPropertyGridEvent, NULL, NULL, NULL, 0, &wxLua_wxPropertyGridEvent_delete_function, }, 
        { wxluaclassname_wxPropertyGridHitTestResult, wxPropertyGridHitTestResult_methods, wxPropertyGridHitTestResult_methodCount, NULL, &wxluatype_wxPropertyGridHitTestResult, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPropertyGridHitTestResult_delete_function, }, 
        { wxluaclassname_wxPropertyGridInterface, wxPropertyGridInterface_methods, wxPropertyGridInterface_methodCount, NULL, &wxluatype_wxPropertyGridInterface, NULL, NULL, NULL, NULL, wxPropertyGridInterface_enums, wxPropertyGridInterface_enumCount, &wxLua_wxPropertyGridInterface_delete_function, }, 
        { wxluaclassname_wxPropertyGridIteratorBase, wxPropertyGridIteratorBase_methods, wxPropertyGridIteratorBase_methodCount, NULL, &wxluatype_wxPropertyGridIteratorBase, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPropertyGridIteratorBase_delete_function, }, 
        { wxluaclassname_wxPropertyGridManager, wxPropertyGridManager_methods, wxPropertyGridManager_methodCount, CLASSINFO(wxPropertyGridManager), &wxluatype_wxPropertyGridManager, wxluabaseclassnames_wxPropertyGridManager, wxluabaseclassbinds_wxPropertyGridManager, wxluabaseclass_wxluatypes_wxPropertyGridManager, wxluabaseclass_vtable_offsets_wxPropertyGridManager, NULL, 0, &wxLua_wxPropertyGridManager_delete_function, }, 
        { wxluaclassname_wxPropertyGridPage, wxPropertyGridPage_methods, wxPropertyGridPage_methodCount, CLASSINFO(wxPropertyGridPage), &wxluatype_wxPropertyGridPage, wxluabaseclassnames_wxPropertyGridPage, wxluabaseclassbinds_wxPropertyGridPage, wxluabaseclass_wxluatypes_wxPropertyGridPage, wxluabaseclass_vtable_offsets_wxPropertyGridPage, NULL, 0, &wxLua_wxPropertyGridPage_delete_function, }, 
        { wxluaclassname_wxPropertyGridPageState, wxPropertyGridPageState_methods, wxPropertyGridPageState_methodCount, NULL, &wxluatype_wxPropertyGridPageState, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxPropertyGridPageState_delete_function, }, 
        { wxluaclassname_wxStringProperty, wxStringProperty_methods, wxStringProperty_methodCount, CLASSINFO(wxStringProperty), &wxluatype_wxStringProperty, wxluabaseclassnames_wxStringProperty, wxluabaseclassbinds_wxStringProperty, NULL, NULL, NULL, 0, &wxLua_wxStringProperty_delete_function, }, 
        { wxluaclassname_wxSystemColourProperty, wxSystemColourProperty_methods, wxSystemColourProperty_methodCount, CLASSINFO(wxSystemColourProperty), &wxluatype_wxSystemColourProperty, wxluabaseclassnames_wxSystemColourProperty, wxluabaseclassbinds_wxSystemColourProperty, NULL, NULL, NULL, 0, &wxLua_wxSystemColourProperty_delete_function, }, 
        { wxluaclassname_wxUIntProperty, wxUIntProperty_methods, wxUIntProperty_methodCount, CLASSINFO(wxUIntProperty), &wxluatype_wxUIntProperty, wxluabaseclassnames_wxUIntProperty, wxluabaseclassbinds_wxUIntProperty, NULL, NULL, NULL, 0, &wxLua_wxUIntProperty_delete_function, }, 
#endif // wxLUA_USE_wxPropertyGrid && wxCHECK_VERSION(2,9,0) && wxUSE_PROPGRID


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxpropgrid() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxpropgrid, wxLuaBinding)

wxLuaBinding_wxpropgrid::wxLuaBinding_wxpropgrid() : wxLuaBinding()
{
    m_bindingName   = wxT("wxpropgrid");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxpropgrid(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxpropgrid(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxpropgrid(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxpropgrid(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxpropgrid(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxpropgrid(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxpropgrid_init()
{
    static wxLuaBinding_wxpropgrid m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


